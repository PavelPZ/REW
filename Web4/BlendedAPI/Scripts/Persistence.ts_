module blended {
  module persistence {
    export interface ILoadShortData {
      url: string;
      taskId: string;
      long: string;
    }
    export function loadShortUserData(userId: number, companyId: number, prodUrl: string, completed: (data: Array<ILoadShortData>) => void) { }
    export function loadUserData(userId: number, companyId: number, prodUrl: string, url: string, taskId: string, completed: (data: IExLong) => void) { }
    export interface ISaveData {
      url: string;
      taskId: string;
      short: string;
      long: string;
    }
    export function saveUserData(userId: number, companyId: number, prodUrl: string, data: Array<ISaveData>, completed: () => void) { }
    export interface IResetData {
      url: string;
      taskId: string;
    }
    export function resetExs(userId: number, companyId: number, prodUrl: string, urls: Array<IResetData>, completed: () => void) { }
  }
}