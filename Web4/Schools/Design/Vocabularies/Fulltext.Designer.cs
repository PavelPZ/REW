//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("vocabulariesModel", "KeyDict", "Key", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(web4.Schools.Design.Vocabularies.Key), "Dict", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(web4.Schools.Design.Vocabularies.Dict), true)]

#endregion

namespace web4.Schools.Design.Vocabularies
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class vocabulariesEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new vocabulariesEntities object using the connection string found in the 'vocabulariesEntities' section of the application configuration file.
        /// </summary>
        public vocabulariesEntities() : base("name=vocabulariesEntities", "vocabulariesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new vocabulariesEntities object.
        /// </summary>
        public vocabulariesEntities(string connectionString) : base(connectionString, "vocabulariesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new vocabulariesEntities object.
        /// </summary>
        public vocabulariesEntities(EntityConnection connection) : base(connection, "vocabulariesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Dict> Dict
        {
            get
            {
                if ((_Dict == null))
                {
                    _Dict = base.CreateObjectSet<Dict>("Dict");
                }
                return _Dict;
            }
        }
        private ObjectSet<Dict> _Dict;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Key> KeySet
        {
            get
            {
                if ((_KeySet == null))
                {
                    _KeySet = base.CreateObjectSet<Key>("KeySet");
                }
                return _KeySet;
            }
        }
        private ObjectSet<Key> _KeySet;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Dict EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDict(Dict dict)
        {
            base.AddObject("Dict", dict);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the KeySet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToKeySet(Key key)
        {
            base.AddObject("KeySet", key);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="vocabulariesModel", Name="Dict")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Dict : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Dict object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="factId">Initial value of the FactId property.</param>
        public static Dict CreateDict(global::System.Int32 id, global::System.Int32 factId)
        {
            Dict dict = new Dict();
            dict.Id = id;
            dict.FactId = factId;
            return dict;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String en_gb
        {
            get
            {
                return _en_gb;
            }
            set
            {
                Onen_gbChanging(value);
                ReportPropertyChanging("en_gb");
                _en_gb = StructuralObject.SetValidValue(value, true, "en_gb");
                ReportPropertyChanged("en_gb");
                Onen_gbChanged();
            }
        }
        private global::System.String _en_gb;
        partial void Onen_gbChanging(global::System.String value);
        partial void Onen_gbChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String de_de
        {
            get
            {
                return _de_de;
            }
            set
            {
                Onde_deChanging(value);
                ReportPropertyChanging("de_de");
                _de_de = StructuralObject.SetValidValue(value, true, "de_de");
                ReportPropertyChanged("de_de");
                Onde_deChanged();
            }
        }
        private global::System.String _de_de;
        partial void Onde_deChanging(global::System.String value);
        partial void Onde_deChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fr_fr
        {
            get
            {
                return _fr_fr;
            }
            set
            {
                Onfr_frChanging(value);
                ReportPropertyChanging("fr_fr");
                _fr_fr = StructuralObject.SetValidValue(value, true, "fr_fr");
                ReportPropertyChanged("fr_fr");
                Onfr_frChanged();
            }
        }
        private global::System.String _fr_fr;
        partial void Onfr_frChanging(global::System.String value);
        partial void Onfr_frChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String it_it
        {
            get
            {
                return _it_it;
            }
            set
            {
                Onit_itChanging(value);
                ReportPropertyChanging("it_it");
                _it_it = StructuralObject.SetValidValue(value, true, "it_it");
                ReportPropertyChanged("it_it");
                Onit_itChanged();
            }
        }
        private global::System.String _it_it;
        partial void Onit_itChanging(global::System.String value);
        partial void Onit_itChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ru_ru
        {
            get
            {
                return _ru_ru;
            }
            set
            {
                Onru_ruChanging(value);
                ReportPropertyChanging("ru_ru");
                _ru_ru = StructuralObject.SetValidValue(value, true, "ru_ru");
                ReportPropertyChanged("ru_ru");
                Onru_ruChanged();
            }
        }
        private global::System.String _ru_ru;
        partial void Onru_ruChanging(global::System.String value);
        partial void Onru_ruChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sp_sp
        {
            get
            {
                return _sp_sp;
            }
            set
            {
                Onsp_spChanging(value);
                ReportPropertyChanging("sp_sp");
                _sp_sp = StructuralObject.SetValidValue(value, true, "sp_sp");
                ReportPropertyChanged("sp_sp");
                Onsp_spChanged();
            }
        }
        private global::System.String _sp_sp;
        partial void Onsp_spChanging(global::System.String value);
        partial void Onsp_spChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cs_cz
        {
            get
            {
                return _cs_cz;
            }
            set
            {
                Oncs_czChanging(value);
                ReportPropertyChanging("cs_cz");
                _cs_cz = StructuralObject.SetValidValue(value, true, "cs_cz");
                ReportPropertyChanged("cs_cz");
                Oncs_czChanged();
            }
        }
        private global::System.String _cs_cz;
        partial void Oncs_czChanging(global::System.String value);
        partial void Oncs_czChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FactId
        {
            get
            {
                return _FactId;
            }
            set
            {
                OnFactIdChanging(value);
                ReportPropertyChanging("FactId");
                _FactId = StructuralObject.SetValidValue(value, "FactId");
                ReportPropertyChanged("FactId");
                OnFactIdChanged();
            }
        }
        private global::System.Int32 _FactId;
        partial void OnFactIdChanging(global::System.Int32 value);
        partial void OnFactIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LessId
        {
            get
            {
                return _LessId;
            }
            set
            {
                OnLessIdChanging(value);
                ReportPropertyChanging("LessId");
                _LessId = StructuralObject.SetValidValue(value, true, "LessId");
                ReportPropertyChanged("LessId");
                OnLessIdChanged();
            }
        }
        private global::System.String _LessId;
        partial void OnLessIdChanging(global::System.String value);
        partial void OnLessIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                OnKeyIdChanging(value);
                ReportPropertyChanging("KeyId");
                _KeyId = StructuralObject.SetValidValue(value, true, "KeyId");
                ReportPropertyChanged("KeyId");
                OnKeyIdChanged();
            }
        }
        private global::System.String _KeyId;
        partial void OnKeyIdChanging(global::System.String value);
        partial void OnKeyIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("vocabulariesModel", "KeyDict", "Key")]
        public Key Key
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Key>("vocabulariesModel.KeyDict", "Key").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Key>("vocabulariesModel.KeyDict", "Key").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Key> KeyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Key>("vocabulariesModel.KeyDict", "Key");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Key>("vocabulariesModel.KeyDict", "Key", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="vocabulariesModel", Name="Key")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Key : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Key object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Key CreateKey(global::System.String id)
        {
            Key key = new Key();
            key.Id = id;
            return key;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("vocabulariesModel", "KeyDict", "Dict")]
        public EntityCollection<Dict> Dict
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Dict>("vocabulariesModel.KeyDict", "Dict");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Dict>("vocabulariesModel.KeyDict", "Dict", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
