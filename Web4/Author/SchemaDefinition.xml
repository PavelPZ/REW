<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SchemaDefinition</name>
    </assembly>
    <members>
        <member name="T:CourseModel.tag">
            <summary>
            tag
            </summary>
            tag descr
        </member>
        <member name="F:CourseModel.tag.id">
            @summary jednoznacna identifikace elementu
            @descr ??
        </member>
        <member name="F:CourseModel.tag.styleSheet">
            @summary CSS pro descendant elementy tohoto elementu, napr. gap-fill { case-sensitive:true; }
            @descr 
        </member>
        <member name="P:CourseModel.tag.class">
            @summary seznam CSS classes
            @descr ??
        </member>
        <member name="T:CourseModel.IconIds">
            <summary>
            Dialog speaker identification
            </summary>
            descr
        </member>
        <member name="F:CourseModel.IconIds.a">
            <summary>
            Dialog speaker A
            </summary>
        </member>
        <member name="F:CourseModel.evalControl.evalGroup">
            @summary and-[id] nebo [id]-exchangeable nebo and-[id]-exchangeable.
            Pro radioButton pouze [id]
             @descr ??
        </member>
        <member name="T:CourseModel.evalButton">
            @summary tlacitko pro vyhodnoceni jedne skupiny vyhodnotitelnych elementu.
            @descr ??
        </member>
        <member name="F:CourseModel.offeringDropDownMode.gapFillIgnore">
            <summary>
            
            </summary>
            pokud jsou ve cviceni gap-fill's bez offering-id, tak se nepridaji do offeringu.
        </member>
        <member name="F:CourseModel.offering.words">
            <summary>
            
            </summary>
            seznam prvku nabidky, oddeleny "|"
        </member>
        <member name="F:CourseModel.offering.mode">
            <summary>
            
            </summary>
            pro "drop-down" tagy: drop-down-discard" => kazdy prvek nabidky muze byt vybrana pouze jednim drop-down elementem.
            drop-down-mode="keep" => jeden prvek nabidky muze pouzit vice drop-down elementu
        </member>
        <member name="F:CourseModel.offering.hidden">
            <summary>
            
            </summary>
            pro offering s drop-down : offering se nezobrazi.
        </member>
        <member name="F:CourseModel.edit.correctValue">
            <summary>
            Spravana hodnota vyhodnotitelneho elementu.
            </summary>
        </member>
        <member name="F:CourseModel.edit.widthGroup">
            <summary>
            vsem elementum se stejnou hodnotou smartWidth se nastavi stejna sirka (rovna maximu z sirky techto elementu)
            </summary>
        </member>
        <member name="F:CourseModel.edit.offeringId">
             <summary>
            id "offering" elementu, do ktereho se pridaji vsechny spravne hodnoty z correctValue.
             </summary>
             Pri nastaveni offeringId se zaroven na stejnou hodnotu nastavi i smartWidth (pokud smartWidth jiz neni nastavena na neco jineho)
        </member>
        <member name="F:CourseModel.include.cutUrl">
            @summary pointer na XML file s sndDialog nebo sndText (extenze se ignoruje). 
            @descr 
        </member>
        <member name="F:CourseModel.replica.numberOfPhrases">
            <summary>
            
            </summary>
            uvedena konstrukce slouží k vytvoření dialogu z plain textu. Podporován je POUZE souvislý text (bez přeskakování zvukových vět). 
            Takže zápis je ten, že pro každou repliku se určí POČET vět repliky (určovat začátek a konec je zbytečně složité). 
            Další replika začíná první větou po poslední větě předchozí repliky. 
            jestli preci jenom ale nebude nejlepsi "take-phrases" (puvodne "sent-take").
        </member>
    </members>
</doc>
