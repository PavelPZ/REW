//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool.
// Code is generated on: 8/12/2009 1:16:24 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
namespace Moodle
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions; 
	using System.ComponentModel;
	using System;
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name = "moodle59")] 
	[ProviderAttribute(typeof(Devart.Data.MySql.Linq.Provider.MySqlDataProvider))] 
	public partial class MoodleData : Devart.Data.Linq.DataContext
	{
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new Devart.Data.Linq.Mapping.AttributeMappingSource();

		#region Extensibility Method Definitions
		partial void OnCreated();
		partial void Insertadodb_logsql(adodb_logsql instance);
		partial void Updateadodb_logsql(adodb_logsql instance);
		partial void Deleteadodb_logsql(adodb_logsql instance);
		partial void Insertmdl_assignment(mdl_assignment instance);
		partial void Updatemdl_assignment(mdl_assignment instance);
		partial void Deletemdl_assignment(mdl_assignment instance);
		partial void Insertmdl_assignment_submission(mdl_assignment_submission instance);
		partial void Updatemdl_assignment_submission(mdl_assignment_submission instance);
		partial void Deletemdl_assignment_submission(mdl_assignment_submission instance);
		partial void Insertmdl_backup_config(mdl_backup_config instance);
		partial void Updatemdl_backup_config(mdl_backup_config instance);
		partial void Deletemdl_backup_config(mdl_backup_config instance);
		partial void Insertmdl_backup_course(mdl_backup_course instance);
		partial void Updatemdl_backup_course(mdl_backup_course instance);
		partial void Deletemdl_backup_course(mdl_backup_course instance);
		partial void Insertmdl_backup_file(mdl_backup_file instance);
		partial void Updatemdl_backup_file(mdl_backup_file instance);
		partial void Deletemdl_backup_file(mdl_backup_file instance);
		partial void Insertmdl_backup_id(mdl_backup_id instance);
		partial void Updatemdl_backup_id(mdl_backup_id instance);
		partial void Deletemdl_backup_id(mdl_backup_id instance);
		partial void Insertmdl_backup_log(mdl_backup_log instance);
		partial void Updatemdl_backup_log(mdl_backup_log instance);
		partial void Deletemdl_backup_log(mdl_backup_log instance);
		partial void Insertmdl_block(mdl_block instance);
		partial void Updatemdl_block(mdl_block instance);
		partial void Deletemdl_block(mdl_block instance);
		partial void Insertmdl_block_instance(mdl_block_instance instance);
		partial void Updatemdl_block_instance(mdl_block_instance instance);
		partial void Deletemdl_block_instance(mdl_block_instance instance);
		partial void Insertmdl_block_pinned(mdl_block_pinned instance);
		partial void Updatemdl_block_pinned(mdl_block_pinned instance);
		partial void Deletemdl_block_pinned(mdl_block_pinned instance);
		partial void Insertmdl_block_rss_client(mdl_block_rss_client instance);
		partial void Updatemdl_block_rss_client(mdl_block_rss_client instance);
		partial void Deletemdl_block_rss_client(mdl_block_rss_client instance);
		partial void Insertmdl_block_search_document(mdl_block_search_document instance);
		partial void Updatemdl_block_search_document(mdl_block_search_document instance);
		partial void Deletemdl_block_search_document(mdl_block_search_document instance);
		partial void Insertmdl_cache_filter(mdl_cache_filter instance);
		partial void Updatemdl_cache_filter(mdl_cache_filter instance);
		partial void Deletemdl_cache_filter(mdl_cache_filter instance);
		partial void Insertmdl_cache_flag(mdl_cache_flag instance);
		partial void Updatemdl_cache_flag(mdl_cache_flag instance);
		partial void Deletemdl_cache_flag(mdl_cache_flag instance);
		partial void Insertmdl_cache_text(mdl_cache_text instance);
		partial void Updatemdl_cache_text(mdl_cache_text instance);
		partial void Deletemdl_cache_text(mdl_cache_text instance);
		partial void Insertmdl_capabilit(mdl_capabilit instance);
		partial void Updatemdl_capabilit(mdl_capabilit instance);
		partial void Deletemdl_capabilit(mdl_capabilit instance);
		partial void Insertmdl_chat(mdl_chat instance);
		partial void Updatemdl_chat(mdl_chat instance);
		partial void Deletemdl_chat(mdl_chat instance);
		partial void Insertmdl_chat_message(mdl_chat_message instance);
		partial void Updatemdl_chat_message(mdl_chat_message instance);
		partial void Deletemdl_chat_message(mdl_chat_message instance);
		partial void Insertmdl_chat_user(mdl_chat_user instance);
		partial void Updatemdl_chat_user(mdl_chat_user instance);
		partial void Deletemdl_chat_user(mdl_chat_user instance);
		partial void Insertmdl_choice(mdl_choice instance);
		partial void Updatemdl_choice(mdl_choice instance);
		partial void Deletemdl_choice(mdl_choice instance);
		partial void Insertmdl_choice_answer(mdl_choice_answer instance);
		partial void Updatemdl_choice_answer(mdl_choice_answer instance);
		partial void Deletemdl_choice_answer(mdl_choice_answer instance);
		partial void Insertmdl_choice_option(mdl_choice_option instance);
		partial void Updatemdl_choice_option(mdl_choice_option instance);
		partial void Deletemdl_choice_option(mdl_choice_option instance);
		partial void Insertmdl_config(mdl_config instance);
		partial void Updatemdl_config(mdl_config instance);
		partial void Deletemdl_config(mdl_config instance);
		partial void Insertmdl_config_plugin(mdl_config_plugin instance);
		partial void Updatemdl_config_plugin(mdl_config_plugin instance);
		partial void Deletemdl_config_plugin(mdl_config_plugin instance);
		partial void Insertmdl_context(mdl_context instance);
		partial void Updatemdl_context(mdl_context instance);
		partial void Deletemdl_context(mdl_context instance);
		partial void Insertmdl_context_temp(mdl_context_temp instance);
		partial void Updatemdl_context_temp(mdl_context_temp instance);
		partial void Deletemdl_context_temp(mdl_context_temp instance);
		partial void Insertmdl_course(mdl_course instance);
		partial void Updatemdl_course(mdl_course instance);
		partial void Deletemdl_course(mdl_course instance);
		partial void Insertmdl_course_allowed_module(mdl_course_allowed_module instance);
		partial void Updatemdl_course_allowed_module(mdl_course_allowed_module instance);
		partial void Deletemdl_course_allowed_module(mdl_course_allowed_module instance);
		partial void Insertmdl_course_category(mdl_course_category instance);
		partial void Updatemdl_course_category(mdl_course_category instance);
		partial void Deletemdl_course_category(mdl_course_category instance);
		partial void Insertmdl_course_display(mdl_course_display instance);
		partial void Updatemdl_course_display(mdl_course_display instance);
		partial void Deletemdl_course_display(mdl_course_display instance);
		partial void Insertmdl_course_meta(mdl_course_meta instance);
		partial void Updatemdl_course_meta(mdl_course_meta instance);
		partial void Deletemdl_course_meta(mdl_course_meta instance);
		partial void Insertmdl_course_module(mdl_course_module instance);
		partial void Updatemdl_course_module(mdl_course_module instance);
		partial void Deletemdl_course_module(mdl_course_module instance);
		partial void Insertmdl_course_request(mdl_course_request instance);
		partial void Updatemdl_course_request(mdl_course_request instance);
		partial void Deletemdl_course_request(mdl_course_request instance);
		partial void Insertmdl_course_section(mdl_course_section instance);
		partial void Updatemdl_course_section(mdl_course_section instance);
		partial void Deletemdl_course_section(mdl_course_section instance);
		partial void Insertmdl_data(mdl_data instance);
		partial void Updatemdl_data(mdl_data instance);
		partial void Deletemdl_data(mdl_data instance);
		partial void Insertmdl_data_comment(mdl_data_comment instance);
		partial void Updatemdl_data_comment(mdl_data_comment instance);
		partial void Deletemdl_data_comment(mdl_data_comment instance);
		partial void Insertmdl_data_content(mdl_data_content instance);
		partial void Updatemdl_data_content(mdl_data_content instance);
		partial void Deletemdl_data_content(mdl_data_content instance);
		partial void Insertmdl_data_field(mdl_data_field instance);
		partial void Updatemdl_data_field(mdl_data_field instance);
		partial void Deletemdl_data_field(mdl_data_field instance);
		partial void Insertmdl_data_rating(mdl_data_rating instance);
		partial void Updatemdl_data_rating(mdl_data_rating instance);
		partial void Deletemdl_data_rating(mdl_data_rating instance);
		partial void Insertmdl_data_record(mdl_data_record instance);
		partial void Updatemdl_data_record(mdl_data_record instance);
		partial void Deletemdl_data_record(mdl_data_record instance);
		partial void Insertmdl_enrol_authorize(mdl_enrol_authorize instance);
		partial void Updatemdl_enrol_authorize(mdl_enrol_authorize instance);
		partial void Deletemdl_enrol_authorize(mdl_enrol_authorize instance);
		partial void Insertmdl_enrol_authorize_refund(mdl_enrol_authorize_refund instance);
		partial void Updatemdl_enrol_authorize_refund(mdl_enrol_authorize_refund instance);
		partial void Deletemdl_enrol_authorize_refund(mdl_enrol_authorize_refund instance);
		partial void Insertmdl_enrol_paypal(mdl_enrol_paypal instance);
		partial void Updatemdl_enrol_paypal(mdl_enrol_paypal instance);
		partial void Deletemdl_enrol_paypal(mdl_enrol_paypal instance);
		partial void Insertmdl_event(mdl_event instance);
		partial void Updatemdl_event(mdl_event instance);
		partial void Deletemdl_event(mdl_event instance);
		partial void Insertmdl_events_handler(mdl_events_handler instance);
		partial void Updatemdl_events_handler(mdl_events_handler instance);
		partial void Deletemdl_events_handler(mdl_events_handler instance);
		partial void Insertmdl_events_queue(mdl_events_queue instance);
		partial void Updatemdl_events_queue(mdl_events_queue instance);
		partial void Deletemdl_events_queue(mdl_events_queue instance);
		partial void Insertmdl_events_queue_handler(mdl_events_queue_handler instance);
		partial void Updatemdl_events_queue_handler(mdl_events_queue_handler instance);
		partial void Deletemdl_events_queue_handler(mdl_events_queue_handler instance);
		partial void Insertmdl_forum(mdl_forum instance);
		partial void Updatemdl_forum(mdl_forum instance);
		partial void Deletemdl_forum(mdl_forum instance);
		partial void Insertmdl_forum_discussion(mdl_forum_discussion instance);
		partial void Updatemdl_forum_discussion(mdl_forum_discussion instance);
		partial void Deletemdl_forum_discussion(mdl_forum_discussion instance);
		partial void Insertmdl_forum_post(mdl_forum_post instance);
		partial void Updatemdl_forum_post(mdl_forum_post instance);
		partial void Deletemdl_forum_post(mdl_forum_post instance);
		partial void Insertmdl_forum_queue(mdl_forum_queue instance);
		partial void Updatemdl_forum_queue(mdl_forum_queue instance);
		partial void Deletemdl_forum_queue(mdl_forum_queue instance);
		partial void Insertmdl_forum_rating(mdl_forum_rating instance);
		partial void Updatemdl_forum_rating(mdl_forum_rating instance);
		partial void Deletemdl_forum_rating(mdl_forum_rating instance);
		partial void Insertmdl_forum_read(mdl_forum_read instance);
		partial void Updatemdl_forum_read(mdl_forum_read instance);
		partial void Deletemdl_forum_read(mdl_forum_read instance);
		partial void Insertmdl_forum_subscription(mdl_forum_subscription instance);
		partial void Updatemdl_forum_subscription(mdl_forum_subscription instance);
		partial void Deletemdl_forum_subscription(mdl_forum_subscription instance);
		partial void Insertmdl_forum_track_pref(mdl_forum_track_pref instance);
		partial void Updatemdl_forum_track_pref(mdl_forum_track_pref instance);
		partial void Deletemdl_forum_track_pref(mdl_forum_track_pref instance);
		partial void Insertmdl_glossary(mdl_glossary instance);
		partial void Updatemdl_glossary(mdl_glossary instance);
		partial void Deletemdl_glossary(mdl_glossary instance);
		partial void Insertmdl_glossary_alia(mdl_glossary_alia instance);
		partial void Updatemdl_glossary_alia(mdl_glossary_alia instance);
		partial void Deletemdl_glossary_alia(mdl_glossary_alia instance);
		partial void Insertmdl_glossary_category(mdl_glossary_category instance);
		partial void Updatemdl_glossary_category(mdl_glossary_category instance);
		partial void Deletemdl_glossary_category(mdl_glossary_category instance);
		partial void Insertmdl_glossary_comment(mdl_glossary_comment instance);
		partial void Updatemdl_glossary_comment(mdl_glossary_comment instance);
		partial void Deletemdl_glossary_comment(mdl_glossary_comment instance);
		partial void Insertmdl_glossary_entr(mdl_glossary_entr instance);
		partial void Updatemdl_glossary_entr(mdl_glossary_entr instance);
		partial void Deletemdl_glossary_entr(mdl_glossary_entr instance);
		partial void Insertmdl_glossary_entries_category(mdl_glossary_entries_category instance);
		partial void Updatemdl_glossary_entries_category(mdl_glossary_entries_category instance);
		partial void Deletemdl_glossary_entries_category(mdl_glossary_entries_category instance);
		partial void Insertmdl_glossary_format(mdl_glossary_format instance);
		partial void Updatemdl_glossary_format(mdl_glossary_format instance);
		partial void Deletemdl_glossary_format(mdl_glossary_format instance);
		partial void Insertmdl_glossary_rating(mdl_glossary_rating instance);
		partial void Updatemdl_glossary_rating(mdl_glossary_rating instance);
		partial void Deletemdl_glossary_rating(mdl_glossary_rating instance);
		partial void Insertmdl_grade_category(mdl_grade_category instance);
		partial void Updatemdl_grade_category(mdl_grade_category instance);
		partial void Deletemdl_grade_category(mdl_grade_category instance);
		partial void Insertmdl_grade_categories_history(mdl_grade_categories_history instance);
		partial void Updatemdl_grade_categories_history(mdl_grade_categories_history instance);
		partial void Deletemdl_grade_categories_history(mdl_grade_categories_history instance);
		partial void Insertmdl_grade_grade(mdl_grade_grade instance);
		partial void Updatemdl_grade_grade(mdl_grade_grade instance);
		partial void Deletemdl_grade_grade(mdl_grade_grade instance);
		partial void Insertmdl_grade_grades_history(mdl_grade_grades_history instance);
		partial void Updatemdl_grade_grades_history(mdl_grade_grades_history instance);
		partial void Deletemdl_grade_grades_history(mdl_grade_grades_history instance);
		partial void Insertmdl_grade_import_newitem(mdl_grade_import_newitem instance);
		partial void Updatemdl_grade_import_newitem(mdl_grade_import_newitem instance);
		partial void Deletemdl_grade_import_newitem(mdl_grade_import_newitem instance);
		partial void Insertmdl_grade_import_value(mdl_grade_import_value instance);
		partial void Updatemdl_grade_import_value(mdl_grade_import_value instance);
		partial void Deletemdl_grade_import_value(mdl_grade_import_value instance);
		partial void Insertmdl_grade_item(mdl_grade_item instance);
		partial void Updatemdl_grade_item(mdl_grade_item instance);
		partial void Deletemdl_grade_item(mdl_grade_item instance);
		partial void Insertmdl_grade_items_history(mdl_grade_items_history instance);
		partial void Updatemdl_grade_items_history(mdl_grade_items_history instance);
		partial void Deletemdl_grade_items_history(mdl_grade_items_history instance);
		partial void Insertmdl_grade_letter(mdl_grade_letter instance);
		partial void Updatemdl_grade_letter(mdl_grade_letter instance);
		partial void Deletemdl_grade_letter(mdl_grade_letter instance);
		partial void Insertmdl_grade_outcome(mdl_grade_outcome instance);
		partial void Updatemdl_grade_outcome(mdl_grade_outcome instance);
		partial void Deletemdl_grade_outcome(mdl_grade_outcome instance);
		partial void Insertmdl_grade_outcomes_course(mdl_grade_outcomes_course instance);
		partial void Updatemdl_grade_outcomes_course(mdl_grade_outcomes_course instance);
		partial void Deletemdl_grade_outcomes_course(mdl_grade_outcomes_course instance);
		partial void Insertmdl_grade_outcomes_history(mdl_grade_outcomes_history instance);
		partial void Updatemdl_grade_outcomes_history(mdl_grade_outcomes_history instance);
		partial void Deletemdl_grade_outcomes_history(mdl_grade_outcomes_history instance);
		partial void Insertmdl_grade_setting(mdl_grade_setting instance);
		partial void Updatemdl_grade_setting(mdl_grade_setting instance);
		partial void Deletemdl_grade_setting(mdl_grade_setting instance);
		partial void Insertmdl_grouping(mdl_grouping instance);
		partial void Updatemdl_grouping(mdl_grouping instance);
		partial void Deletemdl_grouping(mdl_grouping instance);
		partial void Insertmdl_groupings_group(mdl_groupings_group instance);
		partial void Updatemdl_groupings_group(mdl_groupings_group instance);
		partial void Deletemdl_groupings_group(mdl_groupings_group instance);
		partial void Insertmdl_group(mdl_group instance);
		partial void Updatemdl_group(mdl_group instance);
		partial void Deletemdl_group(mdl_group instance);
		partial void Insertmdl_groups_member(mdl_groups_member instance);
		partial void Updatemdl_groups_member(mdl_groups_member instance);
		partial void Deletemdl_groups_member(mdl_groups_member instance);
		partial void Insertmdl_hotpot(mdl_hotpot instance);
		partial void Updatemdl_hotpot(mdl_hotpot instance);
		partial void Deletemdl_hotpot(mdl_hotpot instance);
		partial void Insertmdl_hotpot_attempt(mdl_hotpot_attempt instance);
		partial void Updatemdl_hotpot_attempt(mdl_hotpot_attempt instance);
		partial void Deletemdl_hotpot_attempt(mdl_hotpot_attempt instance);
		partial void Insertmdl_hotpot_detail(mdl_hotpot_detail instance);
		partial void Updatemdl_hotpot_detail(mdl_hotpot_detail instance);
		partial void Deletemdl_hotpot_detail(mdl_hotpot_detail instance);
		partial void Insertmdl_hotpot_question(mdl_hotpot_question instance);
		partial void Updatemdl_hotpot_question(mdl_hotpot_question instance);
		partial void Deletemdl_hotpot_question(mdl_hotpot_question instance);
		partial void Insertmdl_hotpot_response(mdl_hotpot_response instance);
		partial void Updatemdl_hotpot_response(mdl_hotpot_response instance);
		partial void Deletemdl_hotpot_response(mdl_hotpot_response instance);
		partial void Insertmdl_hotpot_string(mdl_hotpot_string instance);
		partial void Updatemdl_hotpot_string(mdl_hotpot_string instance);
		partial void Deletemdl_hotpot_string(mdl_hotpot_string instance);
		partial void Insertmdl_journal(mdl_journal instance);
		partial void Updatemdl_journal(mdl_journal instance);
		partial void Deletemdl_journal(mdl_journal instance);
		partial void Insertmdl_journal_entr(mdl_journal_entr instance);
		partial void Updatemdl_journal_entr(mdl_journal_entr instance);
		partial void Deletemdl_journal_entr(mdl_journal_entr instance);
		partial void Insertmdl_label(mdl_label instance);
		partial void Updatemdl_label(mdl_label instance);
		partial void Deletemdl_label(mdl_label instance);
		partial void Insertmdl_lam(mdl_lam instance);
		partial void Updatemdl_lam(mdl_lam instance);
		partial void Deletemdl_lam(mdl_lam instance);
		partial void Insertmdl_lesson(mdl_lesson instance);
		partial void Updatemdl_lesson(mdl_lesson instance);
		partial void Deletemdl_lesson(mdl_lesson instance);
		partial void Insertmdl_lesson_answer(mdl_lesson_answer instance);
		partial void Updatemdl_lesson_answer(mdl_lesson_answer instance);
		partial void Deletemdl_lesson_answer(mdl_lesson_answer instance);
		partial void Insertmdl_lesson_attempt(mdl_lesson_attempt instance);
		partial void Updatemdl_lesson_attempt(mdl_lesson_attempt instance);
		partial void Deletemdl_lesson_attempt(mdl_lesson_attempt instance);
		partial void Insertmdl_lesson_branch(mdl_lesson_branch instance);
		partial void Updatemdl_lesson_branch(mdl_lesson_branch instance);
		partial void Deletemdl_lesson_branch(mdl_lesson_branch instance);
		partial void Insertmdl_lesson_default(mdl_lesson_default instance);
		partial void Updatemdl_lesson_default(mdl_lesson_default instance);
		partial void Deletemdl_lesson_default(mdl_lesson_default instance);
		partial void Insertmdl_lesson_grade(mdl_lesson_grade instance);
		partial void Updatemdl_lesson_grade(mdl_lesson_grade instance);
		partial void Deletemdl_lesson_grade(mdl_lesson_grade instance);
		partial void Insertmdl_lesson_high_score(mdl_lesson_high_score instance);
		partial void Updatemdl_lesson_high_score(mdl_lesson_high_score instance);
		partial void Deletemdl_lesson_high_score(mdl_lesson_high_score instance);
		partial void Insertmdl_lesson_page(mdl_lesson_page instance);
		partial void Updatemdl_lesson_page(mdl_lesson_page instance);
		partial void Deletemdl_lesson_page(mdl_lesson_page instance);
		partial void Insertmdl_lesson_timer(mdl_lesson_timer instance);
		partial void Updatemdl_lesson_timer(mdl_lesson_timer instance);
		partial void Deletemdl_lesson_timer(mdl_lesson_timer instance);
		partial void Insertmdl_log(mdl_log instance);
		partial void Updatemdl_log(mdl_log instance);
		partial void Deletemdl_log(mdl_log instance);
		partial void Insertmdl_log_display(mdl_log_display instance);
		partial void Updatemdl_log_display(mdl_log_display instance);
		partial void Deletemdl_log_display(mdl_log_display instance);
		partial void Insertmdl_message(mdl_message instance);
		partial void Updatemdl_message(mdl_message instance);
		partial void Deletemdl_message(mdl_message instance);
		partial void Insertmdl_message_contact(mdl_message_contact instance);
		partial void Updatemdl_message_contact(mdl_message_contact instance);
		partial void Deletemdl_message_contact(mdl_message_contact instance);
		partial void Insertmdl_message_read(mdl_message_read instance);
		partial void Updatemdl_message_read(mdl_message_read instance);
		partial void Deletemdl_message_read(mdl_message_read instance);
		partial void Insertmdl_mnet_application(mdl_mnet_application instance);
		partial void Updatemdl_mnet_application(mdl_mnet_application instance);
		partial void Deletemdl_mnet_application(mdl_mnet_application instance);
		partial void Insertmdl_mnet_enrol_assignment(mdl_mnet_enrol_assignment instance);
		partial void Updatemdl_mnet_enrol_assignment(mdl_mnet_enrol_assignment instance);
		partial void Deletemdl_mnet_enrol_assignment(mdl_mnet_enrol_assignment instance);
		partial void Insertmdl_mnet_enrol_course(mdl_mnet_enrol_course instance);
		partial void Updatemdl_mnet_enrol_course(mdl_mnet_enrol_course instance);
		partial void Deletemdl_mnet_enrol_course(mdl_mnet_enrol_course instance);
		partial void Insertmdl_mnet_host(mdl_mnet_host instance);
		partial void Updatemdl_mnet_host(mdl_mnet_host instance);
		partial void Deletemdl_mnet_host(mdl_mnet_host instance);
		partial void Insertmdl_mnet_host2service(mdl_mnet_host2service instance);
		partial void Updatemdl_mnet_host2service(mdl_mnet_host2service instance);
		partial void Deletemdl_mnet_host2service(mdl_mnet_host2service instance);
		partial void Insertmdl_mnet_log(mdl_mnet_log instance);
		partial void Updatemdl_mnet_log(mdl_mnet_log instance);
		partial void Deletemdl_mnet_log(mdl_mnet_log instance);
		partial void Insertmdl_mnet_rpc(mdl_mnet_rpc instance);
		partial void Updatemdl_mnet_rpc(mdl_mnet_rpc instance);
		partial void Deletemdl_mnet_rpc(mdl_mnet_rpc instance);
		partial void Insertmdl_mnet_service(mdl_mnet_service instance);
		partial void Updatemdl_mnet_service(mdl_mnet_service instance);
		partial void Deletemdl_mnet_service(mdl_mnet_service instance);
		partial void Insertmdl_mnet_service2rpc(mdl_mnet_service2rpc instance);
		partial void Updatemdl_mnet_service2rpc(mdl_mnet_service2rpc instance);
		partial void Deletemdl_mnet_service2rpc(mdl_mnet_service2rpc instance);
		partial void Insertmdl_mnet_session(mdl_mnet_session instance);
		partial void Updatemdl_mnet_session(mdl_mnet_session instance);
		partial void Deletemdl_mnet_session(mdl_mnet_session instance);
		partial void Insertmdl_mnet_sso_access_control(mdl_mnet_sso_access_control instance);
		partial void Updatemdl_mnet_sso_access_control(mdl_mnet_sso_access_control instance);
		partial void Deletemdl_mnet_sso_access_control(mdl_mnet_sso_access_control instance);
		partial void Insertmdl_module(mdl_module instance);
		partial void Updatemdl_module(mdl_module instance);
		partial void Deletemdl_module(mdl_module instance);
		partial void Insertmdl_post(mdl_post instance);
		partial void Updatemdl_post(mdl_post instance);
		partial void Deletemdl_post(mdl_post instance);
		partial void Insertmdl_question(mdl_question instance);
		partial void Updatemdl_question(mdl_question instance);
		partial void Deletemdl_question(mdl_question instance);
		partial void Insertmdl_question_answer(mdl_question_answer instance);
		partial void Updatemdl_question_answer(mdl_question_answer instance);
		partial void Deletemdl_question_answer(mdl_question_answer instance);
		partial void Insertmdl_question_attempt(mdl_question_attempt instance);
		partial void Updatemdl_question_attempt(mdl_question_attempt instance);
		partial void Deletemdl_question_attempt(mdl_question_attempt instance);
		partial void Insertmdl_question_calculated(mdl_question_calculated instance);
		partial void Updatemdl_question_calculated(mdl_question_calculated instance);
		partial void Deletemdl_question_calculated(mdl_question_calculated instance);
		partial void Insertmdl_question_category(mdl_question_category instance);
		partial void Updatemdl_question_category(mdl_question_category instance);
		partial void Deletemdl_question_category(mdl_question_category instance);
		partial void Insertmdl_question_dataset_definition(mdl_question_dataset_definition instance);
		partial void Updatemdl_question_dataset_definition(mdl_question_dataset_definition instance);
		partial void Deletemdl_question_dataset_definition(mdl_question_dataset_definition instance);
		partial void Insertmdl_question_dataset_item(mdl_question_dataset_item instance);
		partial void Updatemdl_question_dataset_item(mdl_question_dataset_item instance);
		partial void Deletemdl_question_dataset_item(mdl_question_dataset_item instance);
		partial void Insertmdl_question_dataset(mdl_question_dataset instance);
		partial void Updatemdl_question_dataset(mdl_question_dataset instance);
		partial void Deletemdl_question_dataset(mdl_question_dataset instance);
		partial void Insertmdl_question_match(mdl_question_match instance);
		partial void Updatemdl_question_match(mdl_question_match instance);
		partial void Deletemdl_question_match(mdl_question_match instance);
		partial void Insertmdl_question_match_sub(mdl_question_match_sub instance);
		partial void Updatemdl_question_match_sub(mdl_question_match_sub instance);
		partial void Deletemdl_question_match_sub(mdl_question_match_sub instance);
		partial void Insertmdl_question_multianswer(mdl_question_multianswer instance);
		partial void Updatemdl_question_multianswer(mdl_question_multianswer instance);
		partial void Deletemdl_question_multianswer(mdl_question_multianswer instance);
		partial void Insertmdl_question_multichoice(mdl_question_multichoice instance);
		partial void Updatemdl_question_multichoice(mdl_question_multichoice instance);
		partial void Deletemdl_question_multichoice(mdl_question_multichoice instance);
		partial void Insertmdl_question_numerical(mdl_question_numerical instance);
		partial void Updatemdl_question_numerical(mdl_question_numerical instance);
		partial void Deletemdl_question_numerical(mdl_question_numerical instance);
		partial void Insertmdl_question_numerical_unit(mdl_question_numerical_unit instance);
		partial void Updatemdl_question_numerical_unit(mdl_question_numerical_unit instance);
		partial void Deletemdl_question_numerical_unit(mdl_question_numerical_unit instance);
		partial void Insertmdl_question_randomsamatch(mdl_question_randomsamatch instance);
		partial void Updatemdl_question_randomsamatch(mdl_question_randomsamatch instance);
		partial void Deletemdl_question_randomsamatch(mdl_question_randomsamatch instance);
		partial void Insertmdl_question_session(mdl_question_session instance);
		partial void Updatemdl_question_session(mdl_question_session instance);
		partial void Deletemdl_question_session(mdl_question_session instance);
		partial void Insertmdl_question_shortanswer(mdl_question_shortanswer instance);
		partial void Updatemdl_question_shortanswer(mdl_question_shortanswer instance);
		partial void Deletemdl_question_shortanswer(mdl_question_shortanswer instance);
		partial void Insertmdl_question_state(mdl_question_state instance);
		partial void Updatemdl_question_state(mdl_question_state instance);
		partial void Deletemdl_question_state(mdl_question_state instance);
		partial void Insertmdl_question_truefalse(mdl_question_truefalse instance);
		partial void Updatemdl_question_truefalse(mdl_question_truefalse instance);
		partial void Deletemdl_question_truefalse(mdl_question_truefalse instance);
		partial void Insertmdl_quiz(mdl_quiz instance);
		partial void Updatemdl_quiz(mdl_quiz instance);
		partial void Deletemdl_quiz(mdl_quiz instance);
		partial void Insertmdl_quiz_attempt(mdl_quiz_attempt instance);
		partial void Updatemdl_quiz_attempt(mdl_quiz_attempt instance);
		partial void Deletemdl_quiz_attempt(mdl_quiz_attempt instance);
		partial void Insertmdl_quiz_feedback(mdl_quiz_feedback instance);
		partial void Updatemdl_quiz_feedback(mdl_quiz_feedback instance);
		partial void Deletemdl_quiz_feedback(mdl_quiz_feedback instance);
		partial void Insertmdl_quiz_grade(mdl_quiz_grade instance);
		partial void Updatemdl_quiz_grade(mdl_quiz_grade instance);
		partial void Deletemdl_quiz_grade(mdl_quiz_grade instance);
		partial void Insertmdl_quiz_question_instance(mdl_quiz_question_instance instance);
		partial void Updatemdl_quiz_question_instance(mdl_quiz_question_instance instance);
		partial void Deletemdl_quiz_question_instance(mdl_quiz_question_instance instance);
		partial void Insertmdl_quiz_question_version(mdl_quiz_question_version instance);
		partial void Updatemdl_quiz_question_version(mdl_quiz_question_version instance);
		partial void Deletemdl_quiz_question_version(mdl_quiz_question_version instance);
		partial void Insertmdl_resource(mdl_resource instance);
		partial void Updatemdl_resource(mdl_resource instance);
		partial void Deletemdl_resource(mdl_resource instance);
		partial void Insertmdl_role(mdl_role instance);
		partial void Updatemdl_role(mdl_role instance);
		partial void Deletemdl_role(mdl_role instance);
		partial void Insertmdl_role_allow_assign(mdl_role_allow_assign instance);
		partial void Updatemdl_role_allow_assign(mdl_role_allow_assign instance);
		partial void Deletemdl_role_allow_assign(mdl_role_allow_assign instance);
		partial void Insertmdl_role_allow_override(mdl_role_allow_override instance);
		partial void Updatemdl_role_allow_override(mdl_role_allow_override instance);
		partial void Deletemdl_role_allow_override(mdl_role_allow_override instance);
		partial void Insertmdl_role_assignment(mdl_role_assignment instance);
		partial void Updatemdl_role_assignment(mdl_role_assignment instance);
		partial void Deletemdl_role_assignment(mdl_role_assignment instance);
		partial void Insertmdl_role_capabilit(mdl_role_capabilit instance);
		partial void Updatemdl_role_capabilit(mdl_role_capabilit instance);
		partial void Deletemdl_role_capabilit(mdl_role_capabilit instance);
		partial void Insertmdl_role_name(mdl_role_name instance);
		partial void Updatemdl_role_name(mdl_role_name instance);
		partial void Deletemdl_role_name(mdl_role_name instance);
		partial void Insertmdl_role_sortorder(mdl_role_sortorder instance);
		partial void Updatemdl_role_sortorder(mdl_role_sortorder instance);
		partial void Deletemdl_role_sortorder(mdl_role_sortorder instance);
		partial void Insertmdl_scale(mdl_scale instance);
		partial void Updatemdl_scale(mdl_scale instance);
		partial void Deletemdl_scale(mdl_scale instance);
		partial void Insertmdl_scale_history(mdl_scale_history instance);
		partial void Updatemdl_scale_history(mdl_scale_history instance);
		partial void Deletemdl_scale_history(mdl_scale_history instance);
		partial void Insertmdl_scorm(mdl_scorm instance);
		partial void Updatemdl_scorm(mdl_scorm instance);
		partial void Deletemdl_scorm(mdl_scorm instance);
		partial void Insertmdl_scorm_scoe(mdl_scorm_scoe instance);
		partial void Updatemdl_scorm_scoe(mdl_scorm_scoe instance);
		partial void Deletemdl_scorm_scoe(mdl_scorm_scoe instance);
		partial void Insertmdl_scorm_scoes_data(mdl_scorm_scoes_data instance);
		partial void Updatemdl_scorm_scoes_data(mdl_scorm_scoes_data instance);
		partial void Deletemdl_scorm_scoes_data(mdl_scorm_scoes_data instance);
		partial void Insertmdl_scorm_scoes_track(mdl_scorm_scoes_track instance);
		partial void Updatemdl_scorm_scoes_track(mdl_scorm_scoes_track instance);
		partial void Deletemdl_scorm_scoes_track(mdl_scorm_scoes_track instance);
		partial void Insertmdl_scorm_seq_mapinfo(mdl_scorm_seq_mapinfo instance);
		partial void Updatemdl_scorm_seq_mapinfo(mdl_scorm_seq_mapinfo instance);
		partial void Deletemdl_scorm_seq_mapinfo(mdl_scorm_seq_mapinfo instance);
		partial void Insertmdl_scorm_seq_objective(mdl_scorm_seq_objective instance);
		partial void Updatemdl_scorm_seq_objective(mdl_scorm_seq_objective instance);
		partial void Deletemdl_scorm_seq_objective(mdl_scorm_seq_objective instance);
		partial void Insertmdl_scorm_seq_rolluprule(mdl_scorm_seq_rolluprule instance);
		partial void Updatemdl_scorm_seq_rolluprule(mdl_scorm_seq_rolluprule instance);
		partial void Deletemdl_scorm_seq_rolluprule(mdl_scorm_seq_rolluprule instance);
		partial void Insertmdl_scorm_seq_rolluprulecond(mdl_scorm_seq_rolluprulecond instance);
		partial void Updatemdl_scorm_seq_rolluprulecond(mdl_scorm_seq_rolluprulecond instance);
		partial void Deletemdl_scorm_seq_rolluprulecond(mdl_scorm_seq_rolluprulecond instance);
		partial void Insertmdl_scorm_seq_rulecond(mdl_scorm_seq_rulecond instance);
		partial void Updatemdl_scorm_seq_rulecond(mdl_scorm_seq_rulecond instance);
		partial void Deletemdl_scorm_seq_rulecond(mdl_scorm_seq_rulecond instance);
		partial void Insertmdl_scorm_seq_rulecond1(mdl_scorm_seq_rulecond1 instance);
		partial void Updatemdl_scorm_seq_rulecond1(mdl_scorm_seq_rulecond1 instance);
		partial void Deletemdl_scorm_seq_rulecond1(mdl_scorm_seq_rulecond1 instance);
		partial void Insertmdl_sessions2(mdl_sessions2 instance);
		partial void Updatemdl_sessions2(mdl_sessions2 instance);
		partial void Deletemdl_sessions2(mdl_sessions2 instance);
		partial void Insertmdl_stats_daily(mdl_stats_daily instance);
		partial void Updatemdl_stats_daily(mdl_stats_daily instance);
		partial void Deletemdl_stats_daily(mdl_stats_daily instance);
		partial void Insertmdl_stats_monthly(mdl_stats_monthly instance);
		partial void Updatemdl_stats_monthly(mdl_stats_monthly instance);
		partial void Deletemdl_stats_monthly(mdl_stats_monthly instance);
		partial void Insertmdl_stats_user_daily(mdl_stats_user_daily instance);
		partial void Updatemdl_stats_user_daily(mdl_stats_user_daily instance);
		partial void Deletemdl_stats_user_daily(mdl_stats_user_daily instance);
		partial void Insertmdl_stats_user_monthly(mdl_stats_user_monthly instance);
		partial void Updatemdl_stats_user_monthly(mdl_stats_user_monthly instance);
		partial void Deletemdl_stats_user_monthly(mdl_stats_user_monthly instance);
		partial void Insertmdl_stats_user_weekly(mdl_stats_user_weekly instance);
		partial void Updatemdl_stats_user_weekly(mdl_stats_user_weekly instance);
		partial void Deletemdl_stats_user_weekly(mdl_stats_user_weekly instance);
		partial void Insertmdl_stats_weekly(mdl_stats_weekly instance);
		partial void Updatemdl_stats_weekly(mdl_stats_weekly instance);
		partial void Deletemdl_stats_weekly(mdl_stats_weekly instance);
		partial void Insertmdl_survey(mdl_survey instance);
		partial void Updatemdl_survey(mdl_survey instance);
		partial void Deletemdl_survey(mdl_survey instance);
		partial void Insertmdl_survey_analysi(mdl_survey_analysi instance);
		partial void Updatemdl_survey_analysi(mdl_survey_analysi instance);
		partial void Deletemdl_survey_analysi(mdl_survey_analysi instance);
		partial void Insertmdl_survey_answer(mdl_survey_answer instance);
		partial void Updatemdl_survey_answer(mdl_survey_answer instance);
		partial void Deletemdl_survey_answer(mdl_survey_answer instance);
		partial void Insertmdl_survey_question(mdl_survey_question instance);
		partial void Updatemdl_survey_question(mdl_survey_question instance);
		partial void Deletemdl_survey_question(mdl_survey_question instance);
		partial void Insertmdl_tag(mdl_tag instance);
		partial void Updatemdl_tag(mdl_tag instance);
		partial void Deletemdl_tag(mdl_tag instance);
		partial void Insertmdl_tag_correlation(mdl_tag_correlation instance);
		partial void Updatemdl_tag_correlation(mdl_tag_correlation instance);
		partial void Deletemdl_tag_correlation(mdl_tag_correlation instance);
		partial void Insertmdl_tag_instance(mdl_tag_instance instance);
		partial void Updatemdl_tag_instance(mdl_tag_instance instance);
		partial void Deletemdl_tag_instance(mdl_tag_instance instance);
		partial void Insertmdl_timezone(mdl_timezone instance);
		partial void Updatemdl_timezone(mdl_timezone instance);
		partial void Deletemdl_timezone(mdl_timezone instance);
		partial void Insertmdl_user(mdl_user instance);
		partial void Updatemdl_user(mdl_user instance);
		partial void Deletemdl_user(mdl_user instance);
		partial void Insertmdl_user_info_category(mdl_user_info_category instance);
		partial void Updatemdl_user_info_category(mdl_user_info_category instance);
		partial void Deletemdl_user_info_category(mdl_user_info_category instance);
		partial void Insertmdl_user_info_data(mdl_user_info_data instance);
		partial void Updatemdl_user_info_data(mdl_user_info_data instance);
		partial void Deletemdl_user_info_data(mdl_user_info_data instance);
		partial void Insertmdl_user_info_field(mdl_user_info_field instance);
		partial void Updatemdl_user_info_field(mdl_user_info_field instance);
		partial void Deletemdl_user_info_field(mdl_user_info_field instance);
		partial void Insertmdl_user_lastacces(mdl_user_lastacces instance);
		partial void Updatemdl_user_lastacces(mdl_user_lastacces instance);
		partial void Deletemdl_user_lastacces(mdl_user_lastacces instance);
		partial void Insertmdl_user_preference(mdl_user_preference instance);
		partial void Updatemdl_user_preference(mdl_user_preference instance);
		partial void Deletemdl_user_preference(mdl_user_preference instance);
		partial void Insertmdl_user_private_key(mdl_user_private_key instance);
		partial void Updatemdl_user_private_key(mdl_user_private_key instance);
		partial void Deletemdl_user_private_key(mdl_user_private_key instance);
		partial void Insertmdl_webdav_lock(mdl_webdav_lock instance);
		partial void Updatemdl_webdav_lock(mdl_webdav_lock instance);
		partial void Deletemdl_webdav_lock(mdl_webdav_lock instance);
		partial void Insertmdl_wiki(mdl_wiki instance);
		partial void Updatemdl_wiki(mdl_wiki instance);
		partial void Deletemdl_wiki(mdl_wiki instance);
		partial void Insertmdl_wiki_entr(mdl_wiki_entr instance);
		partial void Updatemdl_wiki_entr(mdl_wiki_entr instance);
		partial void Deletemdl_wiki_entr(mdl_wiki_entr instance);
		partial void Insertmdl_wiki_lock(mdl_wiki_lock instance);
		partial void Updatemdl_wiki_lock(mdl_wiki_lock instance);
		partial void Deletemdl_wiki_lock(mdl_wiki_lock instance);
		partial void Insertmdl_wiki_page(mdl_wiki_page instance);
		partial void Updatemdl_wiki_page(mdl_wiki_page instance);
		partial void Deletemdl_wiki_page(mdl_wiki_page instance);
		partial void Insertmdl_workshop(mdl_workshop instance);
		partial void Updatemdl_workshop(mdl_workshop instance);
		partial void Deletemdl_workshop(mdl_workshop instance);
		partial void Insertmdl_workshop_assessment(mdl_workshop_assessment instance);
		partial void Updatemdl_workshop_assessment(mdl_workshop_assessment instance);
		partial void Deletemdl_workshop_assessment(mdl_workshop_assessment instance);
		partial void Insertmdl_workshop_comment(mdl_workshop_comment instance);
		partial void Updatemdl_workshop_comment(mdl_workshop_comment instance);
		partial void Deletemdl_workshop_comment(mdl_workshop_comment instance);
		partial void Insertmdl_workshop_element(mdl_workshop_element instance);
		partial void Updatemdl_workshop_element(mdl_workshop_element instance);
		partial void Deletemdl_workshop_element(mdl_workshop_element instance);
		partial void Insertmdl_workshop_grade(mdl_workshop_grade instance);
		partial void Updatemdl_workshop_grade(mdl_workshop_grade instance);
		partial void Deletemdl_workshop_grade(mdl_workshop_grade instance);
		partial void Insertmdl_workshop_rubric(mdl_workshop_rubric instance);
		partial void Updatemdl_workshop_rubric(mdl_workshop_rubric instance);
		partial void Deletemdl_workshop_rubric(mdl_workshop_rubric instance);
		partial void Insertmdl_workshop_stockcomment(mdl_workshop_stockcomment instance);
		partial void Updatemdl_workshop_stockcomment(mdl_workshop_stockcomment instance);
		partial void Deletemdl_workshop_stockcomment(mdl_workshop_stockcomment instance);
		partial void Insertmdl_workshop_submission(mdl_workshop_submission instance);
		partial void Updatemdl_workshop_submission(mdl_workshop_submission instance);
		partial void Deletemdl_workshop_submission(mdl_workshop_submission instance);
		#endregion

		public MoodleData() :
				base(@"User Id=lang;Password=ter_int;Host=88.86.116.101;Database=moodle59;Unicode=True;Persist Security Info=True", mappingSource)
		{
			OnCreated();
		}

		public MoodleData(string connection) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public MoodleData(System.Data.IDbConnection connection) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public MoodleData(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public MoodleData(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public Devart.Data.Linq.Table<adodb_logsql> adodb_logsqls
		{
			get
			{
				return this.GetTable<adodb_logsql>();
			}
		}

		public Devart.Data.Linq.Table<mdl_assignment> mdl_assignments
		{
			get
			{
				return this.GetTable<mdl_assignment>();
			}
		}

		public Devart.Data.Linq.Table<mdl_assignment_submission> mdl_assignment_submissions
		{
			get
			{
				return this.GetTable<mdl_assignment_submission>();
			}
		}

		public Devart.Data.Linq.Table<mdl_backup_config> mdl_backup_configs
		{
			get
			{
				return this.GetTable<mdl_backup_config>();
			}
		}

		public Devart.Data.Linq.Table<mdl_backup_course> mdl_backup_courses
		{
			get
			{
				return this.GetTable<mdl_backup_course>();
			}
		}

		public Devart.Data.Linq.Table<mdl_backup_file> mdl_backup_files
		{
			get
			{
				return this.GetTable<mdl_backup_file>();
			}
		}

		public Devart.Data.Linq.Table<mdl_backup_id> mdl_backup_ids
		{
			get
			{
				return this.GetTable<mdl_backup_id>();
			}
		}

		public Devart.Data.Linq.Table<mdl_backup_log> mdl_backup_logs
		{
			get
			{
				return this.GetTable<mdl_backup_log>();
			}
		}

		public Devart.Data.Linq.Table<mdl_block> mdl_blocks
		{
			get
			{
				return this.GetTable<mdl_block>();
			}
		}

		public Devart.Data.Linq.Table<mdl_block_instance> mdl_block_instances
		{
			get
			{
				return this.GetTable<mdl_block_instance>();
			}
		}

		public Devart.Data.Linq.Table<mdl_block_pinned> mdl_block_pinneds
		{
			get
			{
				return this.GetTable<mdl_block_pinned>();
			}
		}

		public Devart.Data.Linq.Table<mdl_block_rss_client> mdl_block_rss_clients
		{
			get
			{
				return this.GetTable<mdl_block_rss_client>();
			}
		}

		public Devart.Data.Linq.Table<mdl_block_search_document> mdl_block_search_documents
		{
			get
			{
				return this.GetTable<mdl_block_search_document>();
			}
		}

		public Devart.Data.Linq.Table<mdl_cache_filter> mdl_cache_filters
		{
			get
			{
				return this.GetTable<mdl_cache_filter>();
			}
		}

		public Devart.Data.Linq.Table<mdl_cache_flag> mdl_cache_flags
		{
			get
			{
				return this.GetTable<mdl_cache_flag>();
			}
		}

		public Devart.Data.Linq.Table<mdl_cache_text> mdl_cache_texts
		{
			get
			{
				return this.GetTable<mdl_cache_text>();
			}
		}

		public Devart.Data.Linq.Table<mdl_capabilit> mdl_capabilits
		{
			get
			{
				return this.GetTable<mdl_capabilit>();
			}
		}

		public Devart.Data.Linq.Table<mdl_chat> mdl_chats
		{
			get
			{
				return this.GetTable<mdl_chat>();
			}
		}

		public Devart.Data.Linq.Table<mdl_chat_message> mdl_chat_messages
		{
			get
			{
				return this.GetTable<mdl_chat_message>();
			}
		}

		public Devart.Data.Linq.Table<mdl_chat_user> mdl_chat_users
		{
			get
			{
				return this.GetTable<mdl_chat_user>();
			}
		}

		public Devart.Data.Linq.Table<mdl_choice> mdl_choices
		{
			get
			{
				return this.GetTable<mdl_choice>();
			}
		}

		public Devart.Data.Linq.Table<mdl_choice_answer> mdl_choice_answers
		{
			get
			{
				return this.GetTable<mdl_choice_answer>();
			}
		}

		public Devart.Data.Linq.Table<mdl_choice_option> mdl_choice_options
		{
			get
			{
				return this.GetTable<mdl_choice_option>();
			}
		}

		public Devart.Data.Linq.Table<mdl_config> mdl_configs
		{
			get
			{
				return this.GetTable<mdl_config>();
			}
		}

		public Devart.Data.Linq.Table<mdl_config_plugin> mdl_config_plugins
		{
			get
			{
				return this.GetTable<mdl_config_plugin>();
			}
		}

		public Devart.Data.Linq.Table<mdl_context> mdl_contexts
		{
			get
			{
				return this.GetTable<mdl_context>();
			}
		}

		public Devart.Data.Linq.Table<mdl_context_temp> mdl_context_temps
		{
			get
			{
				return this.GetTable<mdl_context_temp>();
			}
		}

		public Devart.Data.Linq.Table<mdl_course> mdl_courses
		{
			get
			{
				return this.GetTable<mdl_course>();
			}
		}

		public Devart.Data.Linq.Table<mdl_course_allowed_module> mdl_course_allowed_modules
		{
			get
			{
				return this.GetTable<mdl_course_allowed_module>();
			}
		}

		public Devart.Data.Linq.Table<mdl_course_category> mdl_course_categories
		{
			get
			{
				return this.GetTable<mdl_course_category>();
			}
		}

		public Devart.Data.Linq.Table<mdl_course_display> mdl_course_displays
		{
			get
			{
				return this.GetTable<mdl_course_display>();
			}
		}

		public Devart.Data.Linq.Table<mdl_course_meta> mdl_course_metas
		{
			get
			{
				return this.GetTable<mdl_course_meta>();
			}
		}

		public Devart.Data.Linq.Table<mdl_course_module> mdl_course_modules
		{
			get
			{
				return this.GetTable<mdl_course_module>();
			}
		}

		public Devart.Data.Linq.Table<mdl_course_request> mdl_course_requests
		{
			get
			{
				return this.GetTable<mdl_course_request>();
			}
		}

		public Devart.Data.Linq.Table<mdl_course_section> mdl_course_sections
		{
			get
			{
				return this.GetTable<mdl_course_section>();
			}
		}

		public Devart.Data.Linq.Table<mdl_data> mdl_datas
		{
			get
			{
				return this.GetTable<mdl_data>();
			}
		}

		public Devart.Data.Linq.Table<mdl_data_comment> mdl_data_comments
		{
			get
			{
				return this.GetTable<mdl_data_comment>();
			}
		}

		public Devart.Data.Linq.Table<mdl_data_content> mdl_data_contents
		{
			get
			{
				return this.GetTable<mdl_data_content>();
			}
		}

		public Devart.Data.Linq.Table<mdl_data_field> mdl_data_fields
		{
			get
			{
				return this.GetTable<mdl_data_field>();
			}
		}

		public Devart.Data.Linq.Table<mdl_data_rating> mdl_data_ratings
		{
			get
			{
				return this.GetTable<mdl_data_rating>();
			}
		}

		public Devart.Data.Linq.Table<mdl_data_record> mdl_data_records
		{
			get
			{
				return this.GetTable<mdl_data_record>();
			}
		}

		public Devart.Data.Linq.Table<mdl_enrol_authorize> mdl_enrol_authorizes
		{
			get
			{
				return this.GetTable<mdl_enrol_authorize>();
			}
		}

		public Devart.Data.Linq.Table<mdl_enrol_authorize_refund> mdl_enrol_authorize_refunds
		{
			get
			{
				return this.GetTable<mdl_enrol_authorize_refund>();
			}
		}

		public Devart.Data.Linq.Table<mdl_enrol_paypal> mdl_enrol_paypals
		{
			get
			{
				return this.GetTable<mdl_enrol_paypal>();
			}
		}

		public Devart.Data.Linq.Table<mdl_event> mdl_events
		{
			get
			{
				return this.GetTable<mdl_event>();
			}
		}

		public Devart.Data.Linq.Table<mdl_events_handler> mdl_events_handlers
		{
			get
			{
				return this.GetTable<mdl_events_handler>();
			}
		}

		public Devart.Data.Linq.Table<mdl_events_queue> mdl_events_queues
		{
			get
			{
				return this.GetTable<mdl_events_queue>();
			}
		}

		public Devart.Data.Linq.Table<mdl_events_queue_handler> mdl_events_queue_handlers
		{
			get
			{
				return this.GetTable<mdl_events_queue_handler>();
			}
		}

		public Devart.Data.Linq.Table<mdl_forum> mdl_forums
		{
			get
			{
				return this.GetTable<mdl_forum>();
			}
		}

		public Devart.Data.Linq.Table<mdl_forum_discussion> mdl_forum_discussions
		{
			get
			{
				return this.GetTable<mdl_forum_discussion>();
			}
		}

		public Devart.Data.Linq.Table<mdl_forum_post> mdl_forum_posts
		{
			get
			{
				return this.GetTable<mdl_forum_post>();
			}
		}

		public Devart.Data.Linq.Table<mdl_forum_queue> mdl_forum_queues
		{
			get
			{
				return this.GetTable<mdl_forum_queue>();
			}
		}

		public Devart.Data.Linq.Table<mdl_forum_rating> mdl_forum_ratings
		{
			get
			{
				return this.GetTable<mdl_forum_rating>();
			}
		}

		public Devart.Data.Linq.Table<mdl_forum_read> mdl_forum_reads
		{
			get
			{
				return this.GetTable<mdl_forum_read>();
			}
		}

		public Devart.Data.Linq.Table<mdl_forum_subscription> mdl_forum_subscriptions
		{
			get
			{
				return this.GetTable<mdl_forum_subscription>();
			}
		}

		public Devart.Data.Linq.Table<mdl_forum_track_pref> mdl_forum_track_prefs
		{
			get
			{
				return this.GetTable<mdl_forum_track_pref>();
			}
		}

		public Devart.Data.Linq.Table<mdl_glossary> mdl_glossaries
		{
			get
			{
				return this.GetTable<mdl_glossary>();
			}
		}

		public Devart.Data.Linq.Table<mdl_glossary_alia> mdl_glossary_alias
		{
			get
			{
				return this.GetTable<mdl_glossary_alia>();
			}
		}

		public Devart.Data.Linq.Table<mdl_glossary_category> mdl_glossary_categories
		{
			get
			{
				return this.GetTable<mdl_glossary_category>();
			}
		}

		public Devart.Data.Linq.Table<mdl_glossary_comment> mdl_glossary_comments
		{
			get
			{
				return this.GetTable<mdl_glossary_comment>();
			}
		}

		public Devart.Data.Linq.Table<mdl_glossary_entr> mdl_glossary_entrs
		{
			get
			{
				return this.GetTable<mdl_glossary_entr>();
			}
		}

		public Devart.Data.Linq.Table<mdl_glossary_entries_category> mdl_glossary_entries_categories
		{
			get
			{
				return this.GetTable<mdl_glossary_entries_category>();
			}
		}

		public Devart.Data.Linq.Table<mdl_glossary_format> mdl_glossary_formats
		{
			get
			{
				return this.GetTable<mdl_glossary_format>();
			}
		}

		public Devart.Data.Linq.Table<mdl_glossary_rating> mdl_glossary_ratings
		{
			get
			{
				return this.GetTable<mdl_glossary_rating>();
			}
		}

		public Devart.Data.Linq.Table<mdl_grade_category> mdl_grade_categories
		{
			get
			{
				return this.GetTable<mdl_grade_category>();
			}
		}

		public Devart.Data.Linq.Table<mdl_grade_categories_history> mdl_grade_categories_histories
		{
			get
			{
				return this.GetTable<mdl_grade_categories_history>();
			}
		}

		public Devart.Data.Linq.Table<mdl_grade_grade> mdl_grade_grades
		{
			get
			{
				return this.GetTable<mdl_grade_grade>();
			}
		}

		public Devart.Data.Linq.Table<mdl_grade_grades_history> mdl_grade_grades_histories
		{
			get
			{
				return this.GetTable<mdl_grade_grades_history>();
			}
		}

		public Devart.Data.Linq.Table<mdl_grade_import_newitem> mdl_grade_import_newitems
		{
			get
			{
				return this.GetTable<mdl_grade_import_newitem>();
			}
		}

		public Devart.Data.Linq.Table<mdl_grade_import_value> mdl_grade_import_values
		{
			get
			{
				return this.GetTable<mdl_grade_import_value>();
			}
		}

		public Devart.Data.Linq.Table<mdl_grade_item> mdl_grade_items
		{
			get
			{
				return this.GetTable<mdl_grade_item>();
			}
		}

		public Devart.Data.Linq.Table<mdl_grade_items_history> mdl_grade_items_histories
		{
			get
			{
				return this.GetTable<mdl_grade_items_history>();
			}
		}

		public Devart.Data.Linq.Table<mdl_grade_letter> mdl_grade_letters
		{
			get
			{
				return this.GetTable<mdl_grade_letter>();
			}
		}

		public Devart.Data.Linq.Table<mdl_grade_outcome> mdl_grade_outcomes
		{
			get
			{
				return this.GetTable<mdl_grade_outcome>();
			}
		}

		public Devart.Data.Linq.Table<mdl_grade_outcomes_course> mdl_grade_outcomes_courses
		{
			get
			{
				return this.GetTable<mdl_grade_outcomes_course>();
			}
		}

		public Devart.Data.Linq.Table<mdl_grade_outcomes_history> mdl_grade_outcomes_histories
		{
			get
			{
				return this.GetTable<mdl_grade_outcomes_history>();
			}
		}

		public Devart.Data.Linq.Table<mdl_grade_setting> mdl_grade_settings
		{
			get
			{
				return this.GetTable<mdl_grade_setting>();
			}
		}

		public Devart.Data.Linq.Table<mdl_grouping> mdl_groupings
		{
			get
			{
				return this.GetTable<mdl_grouping>();
			}
		}

		public Devart.Data.Linq.Table<mdl_groupings_group> mdl_groupings_groups
		{
			get
			{
				return this.GetTable<mdl_groupings_group>();
			}
		}

		public Devart.Data.Linq.Table<mdl_group> mdl_groups
		{
			get
			{
				return this.GetTable<mdl_group>();
			}
		}

		public Devart.Data.Linq.Table<mdl_groups_member> mdl_groups_members
		{
			get
			{
				return this.GetTable<mdl_groups_member>();
			}
		}

		public Devart.Data.Linq.Table<mdl_hotpot> mdl_hotpots
		{
			get
			{
				return this.GetTable<mdl_hotpot>();
			}
		}

		public Devart.Data.Linq.Table<mdl_hotpot_attempt> mdl_hotpot_attempts
		{
			get
			{
				return this.GetTable<mdl_hotpot_attempt>();
			}
		}

		public Devart.Data.Linq.Table<mdl_hotpot_detail> mdl_hotpot_details
		{
			get
			{
				return this.GetTable<mdl_hotpot_detail>();
			}
		}

		public Devart.Data.Linq.Table<mdl_hotpot_question> mdl_hotpot_questions
		{
			get
			{
				return this.GetTable<mdl_hotpot_question>();
			}
		}

		public Devart.Data.Linq.Table<mdl_hotpot_response> mdl_hotpot_responses
		{
			get
			{
				return this.GetTable<mdl_hotpot_response>();
			}
		}

		public Devart.Data.Linq.Table<mdl_hotpot_string> mdl_hotpot_strings
		{
			get
			{
				return this.GetTable<mdl_hotpot_string>();
			}
		}

		public Devart.Data.Linq.Table<mdl_journal> mdl_journals
		{
			get
			{
				return this.GetTable<mdl_journal>();
			}
		}

		public Devart.Data.Linq.Table<mdl_journal_entr> mdl_journal_entrs
		{
			get
			{
				return this.GetTable<mdl_journal_entr>();
			}
		}

		public Devart.Data.Linq.Table<mdl_label> mdl_labels
		{
			get
			{
				return this.GetTable<mdl_label>();
			}
		}

		public Devart.Data.Linq.Table<mdl_lam> mdl_lams
		{
			get
			{
				return this.GetTable<mdl_lam>();
			}
		}

		public Devart.Data.Linq.Table<mdl_lesson> mdl_lessons
		{
			get
			{
				return this.GetTable<mdl_lesson>();
			}
		}

		public Devart.Data.Linq.Table<mdl_lesson_answer> mdl_lesson_answers
		{
			get
			{
				return this.GetTable<mdl_lesson_answer>();
			}
		}

		public Devart.Data.Linq.Table<mdl_lesson_attempt> mdl_lesson_attempts
		{
			get
			{
				return this.GetTable<mdl_lesson_attempt>();
			}
		}

		public Devart.Data.Linq.Table<mdl_lesson_branch> mdl_lesson_branches
		{
			get
			{
				return this.GetTable<mdl_lesson_branch>();
			}
		}

		public Devart.Data.Linq.Table<mdl_lesson_default> mdl_lesson_defaults
		{
			get
			{
				return this.GetTable<mdl_lesson_default>();
			}
		}

		public Devart.Data.Linq.Table<mdl_lesson_grade> mdl_lesson_grades
		{
			get
			{
				return this.GetTable<mdl_lesson_grade>();
			}
		}

		public Devart.Data.Linq.Table<mdl_lesson_high_score> mdl_lesson_high_scores
		{
			get
			{
				return this.GetTable<mdl_lesson_high_score>();
			}
		}

		public Devart.Data.Linq.Table<mdl_lesson_page> mdl_lesson_pages
		{
			get
			{
				return this.GetTable<mdl_lesson_page>();
			}
		}

		public Devart.Data.Linq.Table<mdl_lesson_timer> mdl_lesson_timers
		{
			get
			{
				return this.GetTable<mdl_lesson_timer>();
			}
		}

		public Devart.Data.Linq.Table<mdl_log> mdl_logs
		{
			get
			{
				return this.GetTable<mdl_log>();
			}
		}

		public Devart.Data.Linq.Table<mdl_log_display> mdl_log_displays
		{
			get
			{
				return this.GetTable<mdl_log_display>();
			}
		}

		public Devart.Data.Linq.Table<mdl_message> mdl_messages
		{
			get
			{
				return this.GetTable<mdl_message>();
			}
		}

		public Devart.Data.Linq.Table<mdl_message_contact> mdl_message_contacts
		{
			get
			{
				return this.GetTable<mdl_message_contact>();
			}
		}

		public Devart.Data.Linq.Table<mdl_message_read> mdl_message_reads
		{
			get
			{
				return this.GetTable<mdl_message_read>();
			}
		}

		public Devart.Data.Linq.Table<mdl_mnet_application> mdl_mnet_applications
		{
			get
			{
				return this.GetTable<mdl_mnet_application>();
			}
		}

		public Devart.Data.Linq.Table<mdl_mnet_enrol_assignment> mdl_mnet_enrol_assignments
		{
			get
			{
				return this.GetTable<mdl_mnet_enrol_assignment>();
			}
		}

		public Devart.Data.Linq.Table<mdl_mnet_enrol_course> mdl_mnet_enrol_courses
		{
			get
			{
				return this.GetTable<mdl_mnet_enrol_course>();
			}
		}

		public Devart.Data.Linq.Table<mdl_mnet_host> mdl_mnet_hosts
		{
			get
			{
				return this.GetTable<mdl_mnet_host>();
			}
		}

		public Devart.Data.Linq.Table<mdl_mnet_host2service> mdl_mnet_host2services
		{
			get
			{
				return this.GetTable<mdl_mnet_host2service>();
			}
		}

		public Devart.Data.Linq.Table<mdl_mnet_log> mdl_mnet_logs
		{
			get
			{
				return this.GetTable<mdl_mnet_log>();
			}
		}

		public Devart.Data.Linq.Table<mdl_mnet_rpc> mdl_mnet_rpcs
		{
			get
			{
				return this.GetTable<mdl_mnet_rpc>();
			}
		}

		public Devart.Data.Linq.Table<mdl_mnet_service> mdl_mnet_services
		{
			get
			{
				return this.GetTable<mdl_mnet_service>();
			}
		}

		public Devart.Data.Linq.Table<mdl_mnet_service2rpc> mdl_mnet_service2rpcs
		{
			get
			{
				return this.GetTable<mdl_mnet_service2rpc>();
			}
		}

		public Devart.Data.Linq.Table<mdl_mnet_session> mdl_mnet_sessions
		{
			get
			{
				return this.GetTable<mdl_mnet_session>();
			}
		}

		public Devart.Data.Linq.Table<mdl_mnet_sso_access_control> mdl_mnet_sso_access_controls
		{
			get
			{
				return this.GetTable<mdl_mnet_sso_access_control>();
			}
		}

		public Devart.Data.Linq.Table<mdl_module> mdl_modules
		{
			get
			{
				return this.GetTable<mdl_module>();
			}
		}

		public Devart.Data.Linq.Table<mdl_post> mdl_posts
		{
			get
			{
				return this.GetTable<mdl_post>();
			}
		}

		public Devart.Data.Linq.Table<mdl_question> mdl_questions
		{
			get
			{
				return this.GetTable<mdl_question>();
			}
		}

		public Devart.Data.Linq.Table<mdl_question_answer> mdl_question_answers
		{
			get
			{
				return this.GetTable<mdl_question_answer>();
			}
		}

		public Devart.Data.Linq.Table<mdl_question_attempt> mdl_question_attempts
		{
			get
			{
				return this.GetTable<mdl_question_attempt>();
			}
		}

		public Devart.Data.Linq.Table<mdl_question_calculated> mdl_question_calculateds
		{
			get
			{
				return this.GetTable<mdl_question_calculated>();
			}
		}

		public Devart.Data.Linq.Table<mdl_question_category> mdl_question_categories
		{
			get
			{
				return this.GetTable<mdl_question_category>();
			}
		}

		public Devart.Data.Linq.Table<mdl_question_dataset_definition> mdl_question_dataset_definitions
		{
			get
			{
				return this.GetTable<mdl_question_dataset_definition>();
			}
		}

		public Devart.Data.Linq.Table<mdl_question_dataset_item> mdl_question_dataset_items
		{
			get
			{
				return this.GetTable<mdl_question_dataset_item>();
			}
		}

		public Devart.Data.Linq.Table<mdl_question_dataset> mdl_question_datasets
		{
			get
			{
				return this.GetTable<mdl_question_dataset>();
			}
		}

		public Devart.Data.Linq.Table<mdl_question_match> mdl_question_matches
		{
			get
			{
				return this.GetTable<mdl_question_match>();
			}
		}

		public Devart.Data.Linq.Table<mdl_question_match_sub> mdl_question_match_subs
		{
			get
			{
				return this.GetTable<mdl_question_match_sub>();
			}
		}

		public Devart.Data.Linq.Table<mdl_question_multianswer> mdl_question_multianswers
		{
			get
			{
				return this.GetTable<mdl_question_multianswer>();
			}
		}

		public Devart.Data.Linq.Table<mdl_question_multichoice> mdl_question_multichoices
		{
			get
			{
				return this.GetTable<mdl_question_multichoice>();
			}
		}

		public Devart.Data.Linq.Table<mdl_question_numerical> mdl_question_numericals
		{
			get
			{
				return this.GetTable<mdl_question_numerical>();
			}
		}

		public Devart.Data.Linq.Table<mdl_question_numerical_unit> mdl_question_numerical_units
		{
			get
			{
				return this.GetTable<mdl_question_numerical_unit>();
			}
		}

		public Devart.Data.Linq.Table<mdl_question_randomsamatch> mdl_question_randomsamatches
		{
			get
			{
				return this.GetTable<mdl_question_randomsamatch>();
			}
		}

		public Devart.Data.Linq.Table<mdl_question_session> mdl_question_sessions
		{
			get
			{
				return this.GetTable<mdl_question_session>();
			}
		}

		public Devart.Data.Linq.Table<mdl_question_shortanswer> mdl_question_shortanswers
		{
			get
			{
				return this.GetTable<mdl_question_shortanswer>();
			}
		}

		public Devart.Data.Linq.Table<mdl_question_state> mdl_question_states
		{
			get
			{
				return this.GetTable<mdl_question_state>();
			}
		}

		public Devart.Data.Linq.Table<mdl_question_truefalse> mdl_question_truefalses
		{
			get
			{
				return this.GetTable<mdl_question_truefalse>();
			}
		}

		public Devart.Data.Linq.Table<mdl_quiz> mdl_quizs
		{
			get
			{
				return this.GetTable<mdl_quiz>();
			}
		}

		public Devart.Data.Linq.Table<mdl_quiz_attempt> mdl_quiz_attempts
		{
			get
			{
				return this.GetTable<mdl_quiz_attempt>();
			}
		}

		public Devart.Data.Linq.Table<mdl_quiz_feedback> mdl_quiz_feedbacks
		{
			get
			{
				return this.GetTable<mdl_quiz_feedback>();
			}
		}

		public Devart.Data.Linq.Table<mdl_quiz_grade> mdl_quiz_grades
		{
			get
			{
				return this.GetTable<mdl_quiz_grade>();
			}
		}

		public Devart.Data.Linq.Table<mdl_quiz_question_instance> mdl_quiz_question_instances
		{
			get
			{
				return this.GetTable<mdl_quiz_question_instance>();
			}
		}

		public Devart.Data.Linq.Table<mdl_quiz_question_version> mdl_quiz_question_versions
		{
			get
			{
				return this.GetTable<mdl_quiz_question_version>();
			}
		}

		public Devart.Data.Linq.Table<mdl_resource> mdl_resources
		{
			get
			{
				return this.GetTable<mdl_resource>();
			}
		}

		public Devart.Data.Linq.Table<mdl_role> mdl_roles
		{
			get
			{
				return this.GetTable<mdl_role>();
			}
		}

		public Devart.Data.Linq.Table<mdl_role_allow_assign> mdl_role_allow_assigns
		{
			get
			{
				return this.GetTable<mdl_role_allow_assign>();
			}
		}

		public Devart.Data.Linq.Table<mdl_role_allow_override> mdl_role_allow_overrides
		{
			get
			{
				return this.GetTable<mdl_role_allow_override>();
			}
		}

		public Devart.Data.Linq.Table<mdl_role_assignment> mdl_role_assignments
		{
			get
			{
				return this.GetTable<mdl_role_assignment>();
			}
		}

		public Devart.Data.Linq.Table<mdl_role_capabilit> mdl_role_capabilits
		{
			get
			{
				return this.GetTable<mdl_role_capabilit>();
			}
		}

		public Devart.Data.Linq.Table<mdl_role_name> mdl_role_names
		{
			get
			{
				return this.GetTable<mdl_role_name>();
			}
		}

		public Devart.Data.Linq.Table<mdl_role_sortorder> mdl_role_sortorders
		{
			get
			{
				return this.GetTable<mdl_role_sortorder>();
			}
		}

		public Devart.Data.Linq.Table<mdl_scale> mdl_scales
		{
			get
			{
				return this.GetTable<mdl_scale>();
			}
		}

		public Devart.Data.Linq.Table<mdl_scale_history> mdl_scale_histories
		{
			get
			{
				return this.GetTable<mdl_scale_history>();
			}
		}

		public Devart.Data.Linq.Table<mdl_scorm> mdl_scorms
		{
			get
			{
				return this.GetTable<mdl_scorm>();
			}
		}

		public Devart.Data.Linq.Table<mdl_scorm_scoe> mdl_scorm_scoes
		{
			get
			{
				return this.GetTable<mdl_scorm_scoe>();
			}
		}

		public Devart.Data.Linq.Table<mdl_scorm_scoes_data> mdl_scorm_scoes_datas
		{
			get
			{
				return this.GetTable<mdl_scorm_scoes_data>();
			}
		}

		public Devart.Data.Linq.Table<mdl_scorm_scoes_track> mdl_scorm_scoes_tracks
		{
			get
			{
				return this.GetTable<mdl_scorm_scoes_track>();
			}
		}

		public Devart.Data.Linq.Table<mdl_scorm_seq_mapinfo> mdl_scorm_seq_mapinfos
		{
			get
			{
				return this.GetTable<mdl_scorm_seq_mapinfo>();
			}
		}

		public Devart.Data.Linq.Table<mdl_scorm_seq_objective> mdl_scorm_seq_objectives
		{
			get
			{
				return this.GetTable<mdl_scorm_seq_objective>();
			}
		}

		public Devart.Data.Linq.Table<mdl_scorm_seq_rolluprule> mdl_scorm_seq_rolluprules
		{
			get
			{
				return this.GetTable<mdl_scorm_seq_rolluprule>();
			}
		}

		public Devart.Data.Linq.Table<mdl_scorm_seq_rolluprulecond> mdl_scorm_seq_rollupruleconds
		{
			get
			{
				return this.GetTable<mdl_scorm_seq_rolluprulecond>();
			}
		}

		public Devart.Data.Linq.Table<mdl_scorm_seq_rulecond> mdl_scorm_seq_ruleconds
		{
			get
			{
				return this.GetTable<mdl_scorm_seq_rulecond>();
			}
		}

		public Devart.Data.Linq.Table<mdl_scorm_seq_rulecond1> mdl_scorm_seq_rulecond1s
		{
			get
			{
				return this.GetTable<mdl_scorm_seq_rulecond1>();
			}
		}

		public Devart.Data.Linq.Table<mdl_sessions2> mdl_sessions2s
		{
			get
			{
				return this.GetTable<mdl_sessions2>();
			}
		}

		public Devart.Data.Linq.Table<mdl_stats_daily> mdl_stats_dailies
		{
			get
			{
				return this.GetTable<mdl_stats_daily>();
			}
		}

		public Devart.Data.Linq.Table<mdl_stats_monthly> mdl_stats_monthlies
		{
			get
			{
				return this.GetTable<mdl_stats_monthly>();
			}
		}

		public Devart.Data.Linq.Table<mdl_stats_user_daily> mdl_stats_user_dailies
		{
			get
			{
				return this.GetTable<mdl_stats_user_daily>();
			}
		}

		public Devart.Data.Linq.Table<mdl_stats_user_monthly> mdl_stats_user_monthlies
		{
			get
			{
				return this.GetTable<mdl_stats_user_monthly>();
			}
		}

		public Devart.Data.Linq.Table<mdl_stats_user_weekly> mdl_stats_user_weeklies
		{
			get
			{
				return this.GetTable<mdl_stats_user_weekly>();
			}
		}

		public Devart.Data.Linq.Table<mdl_stats_weekly> mdl_stats_weeklies
		{
			get
			{
				return this.GetTable<mdl_stats_weekly>();
			}
		}

		public Devart.Data.Linq.Table<mdl_survey> mdl_surveys
		{
			get
			{
				return this.GetTable<mdl_survey>();
			}
		}

		public Devart.Data.Linq.Table<mdl_survey_analysi> mdl_survey_analysis
		{
			get
			{
				return this.GetTable<mdl_survey_analysi>();
			}
		}

		public Devart.Data.Linq.Table<mdl_survey_answer> mdl_survey_answers
		{
			get
			{
				return this.GetTable<mdl_survey_answer>();
			}
		}

		public Devart.Data.Linq.Table<mdl_survey_question> mdl_survey_questions
		{
			get
			{
				return this.GetTable<mdl_survey_question>();
			}
		}

		public Devart.Data.Linq.Table<mdl_tag> mdl_tags
		{
			get
			{
				return this.GetTable<mdl_tag>();
			}
		}

		public Devart.Data.Linq.Table<mdl_tag_correlation> mdl_tag_correlations
		{
			get
			{
				return this.GetTable<mdl_tag_correlation>();
			}
		}

		public Devart.Data.Linq.Table<mdl_tag_instance> mdl_tag_instances
		{
			get
			{
				return this.GetTable<mdl_tag_instance>();
			}
		}

		public Devart.Data.Linq.Table<mdl_timezone> mdl_timezones
		{
			get
			{
				return this.GetTable<mdl_timezone>();
			}
		}

		public Devart.Data.Linq.Table<mdl_user> mdl_users
		{
			get
			{
				return this.GetTable<mdl_user>();
			}
		}

		public Devart.Data.Linq.Table<mdl_user_info_category> mdl_user_info_categories
		{
			get
			{
				return this.GetTable<mdl_user_info_category>();
			}
		}

		public Devart.Data.Linq.Table<mdl_user_info_data> mdl_user_info_datas
		{
			get
			{
				return this.GetTable<mdl_user_info_data>();
			}
		}

		public Devart.Data.Linq.Table<mdl_user_info_field> mdl_user_info_fields
		{
			get
			{
				return this.GetTable<mdl_user_info_field>();
			}
		}

		public Devart.Data.Linq.Table<mdl_user_lastacces> mdl_user_lastacces
		{
			get
			{
				return this.GetTable<mdl_user_lastacces>();
			}
		}

		public Devart.Data.Linq.Table<mdl_user_preference> mdl_user_preferences
		{
			get
			{
				return this.GetTable<mdl_user_preference>();
			}
		}

		public Devart.Data.Linq.Table<mdl_user_private_key> mdl_user_private_keys
		{
			get
			{
				return this.GetTable<mdl_user_private_key>();
			}
		}

		public Devart.Data.Linq.Table<mdl_webdav_lock> mdl_webdav_locks
		{
			get
			{
				return this.GetTable<mdl_webdav_lock>();
			}
		}

		public Devart.Data.Linq.Table<mdl_wiki> mdl_wikis
		{
			get
			{
				return this.GetTable<mdl_wiki>();
			}
		}

		public Devart.Data.Linq.Table<mdl_wiki_entr> mdl_wiki_entrs
		{
			get
			{
				return this.GetTable<mdl_wiki_entr>();
			}
		}

		public Devart.Data.Linq.Table<mdl_wiki_lock> mdl_wiki_locks
		{
			get
			{
				return this.GetTable<mdl_wiki_lock>();
			}
		}

		public Devart.Data.Linq.Table<mdl_wiki_page> mdl_wiki_pages
		{
			get
			{
				return this.GetTable<mdl_wiki_page>();
			}
		}

		public Devart.Data.Linq.Table<mdl_workshop> mdl_workshops
		{
			get
			{
				return this.GetTable<mdl_workshop>();
			}
		}

		public Devart.Data.Linq.Table<mdl_workshop_assessment> mdl_workshop_assessments
		{
			get
			{
				return this.GetTable<mdl_workshop_assessment>();
			}
		}

		public Devart.Data.Linq.Table<mdl_workshop_comment> mdl_workshop_comments
		{
			get
			{
				return this.GetTable<mdl_workshop_comment>();
			}
		}

		public Devart.Data.Linq.Table<mdl_workshop_element> mdl_workshop_elements
		{
			get
			{
				return this.GetTable<mdl_workshop_element>();
			}
		}

		public Devart.Data.Linq.Table<mdl_workshop_grade> mdl_workshop_grades
		{
			get
			{
				return this.GetTable<mdl_workshop_grade>();
			}
		}

		public Devart.Data.Linq.Table<mdl_workshop_rubric> mdl_workshop_rubrics
		{
			get
			{
				return this.GetTable<mdl_workshop_rubric>();
			}
		}

		public Devart.Data.Linq.Table<mdl_workshop_stockcomment> mdl_workshop_stockcomments
		{
			get
			{
				return this.GetTable<mdl_workshop_stockcomment>();
			}
		}

		public Devart.Data.Linq.Table<mdl_workshop_submission> mdl_workshop_submissions
		{
			get
			{
				return this.GetTable<mdl_workshop_submission>();
			}
		}
	}

	[Table(Name = @"moodle59.adodb_logsql")]
	public partial class adodb_logsql : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private System.DateTime _created;

		private string _sql0;

		private string _sql1;

		private string _params;

		private string _tracer;

		private decimal _timer;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncreatedChanging(System.DateTime value);
		partial void OncreatedChanged();
		partial void Onsql0Changing(string value);
		partial void Onsql0Changed();
		partial void Onsql1Changing(string value);
		partial void Onsql1Changed();
		partial void OnparamsChanging(string value);
		partial void OnparamsChanged();
		partial void OntracerChanging(string value);
		partial void OntracerChanged();
		partial void OntimerChanging(decimal value);
		partial void OntimerChanged();
		#endregion

		public adodb_logsql()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_created", CanBeNull = false, DbType = "datetime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if (this._created != value)
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}

		[Column(Storage = "_sql0", CanBeNull = false, DbType = "varchar(750) NOT NULL")]
		public string sql0
		{
			get
			{
				return this._sql0;
			}
			set
			{
				if (this._sql0 != value)
				{
					this.Onsql0Changing(value);
					this.SendPropertyChanging();
					this._sql0 = value;
					this.SendPropertyChanged("sql0");
					this.Onsql0Changed();
				}
			}
		}

		[Column(Storage = "_sql1", DbType = "text")]
		public string sql1
		{
			get
			{
				return this._sql1;
			}
			set
			{
				if (this._sql1 != value)
				{
					this.Onsql1Changing(value);
					this.SendPropertyChanging();
					this._sql1 = value;
					this.SendPropertyChanged("sql1");
					this.Onsql1Changed();
				}
			}
		}

		[Column(Storage = "_params", DbType = "text")]
		public string @params
		{
			get
			{
				return this._params;
			}
			set
			{
				if (this._params != value)
				{
					this.OnparamsChanging(value);
					this.SendPropertyChanging();
					this._params = value;
					this.SendPropertyChanged("@params");
					this.OnparamsChanged();
				}
			}
		}

		[Column(Storage = "_tracer", DbType = "text")]
		public string tracer
		{
			get
			{
				return this._tracer;
			}
			set
			{
				if (this._tracer != value)
				{
					this.OntracerChanging(value);
					this.SendPropertyChanging();
					this._tracer = value;
					this.SendPropertyChanged("tracer");
					this.OntracerChanged();
				}
			}
		}

		[Column(Storage = "_timer", CanBeNull = false, DbType = "decimal(16,6) NOT NULL")]
		public decimal timer
		{
			get
			{
				return this._timer;
			}
			set
			{
				if (this._timer != value)
				{
					this.OntimerChanging(value);
					this.SendPropertyChanging();
					this._timer = value;
					this.SendPropertyChanged("timer");
					this.OntimerChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_assignment")]
	public partial class mdl_assignment : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private string _name;

		private string _description;

		private int _format;

		private string _assignmenttype;

		private byte _resubmit;

		private byte _preventlate;

		private byte _emailteachers;

		private System.Nullable<long> _var1;

		private System.Nullable<long> _var2;

		private System.Nullable<long> _var3;

		private System.Nullable<long> _var4;

		private System.Nullable<long> _var5;

		private decimal _maxbytes;

		private decimal _timedue;

		private decimal _timeavailable;

		private long _grade;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OndescriptionChanging(string value);
		partial void OndescriptionChanged();
		partial void OnformatChanging(int value);
		partial void OnformatChanged();
		partial void OnassignmenttypeChanging(string value);
		partial void OnassignmenttypeChanged();
		partial void OnresubmitChanging(byte value);
		partial void OnresubmitChanged();
		partial void OnpreventlateChanging(byte value);
		partial void OnpreventlateChanged();
		partial void OnemailteachersChanging(byte value);
		partial void OnemailteachersChanged();
		partial void Onvar1Changing(System.Nullable<long> value);
		partial void Onvar1Changed();
		partial void Onvar2Changing(System.Nullable<long> value);
		partial void Onvar2Changed();
		partial void Onvar3Changing(System.Nullable<long> value);
		partial void Onvar3Changed();
		partial void Onvar4Changing(System.Nullable<long> value);
		partial void Onvar4Changed();
		partial void Onvar5Changing(System.Nullable<long> value);
		partial void Onvar5Changed();
		partial void OnmaxbytesChanging(decimal value);
		partial void OnmaxbytesChanged();
		partial void OntimedueChanging(decimal value);
		partial void OntimedueChanged();
		partial void OntimeavailableChanging(decimal value);
		partial void OntimeavailableChanged();
		partial void OngradeChanging(long value);
		partial void OngradeChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_assignment()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_description", CanBeNull = false, DbType = "text NOT NULL")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if (this._description != value)
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}

		[Column(Storage = "_format", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int format
		{
			get
			{
				return this._format;
			}
			set
			{
				if (this._format != value)
				{
					this.OnformatChanging(value);
					this.SendPropertyChanging();
					this._format = value;
					this.SendPropertyChanged("format");
					this.OnformatChanged();
				}
			}
		}

		[Column(Storage = "_assignmenttype", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string assignmenttype
		{
			get
			{
				return this._assignmenttype;
			}
			set
			{
				if (this._assignmenttype != value)
				{
					this.OnassignmenttypeChanging(value);
					this.SendPropertyChanging();
					this._assignmenttype = value;
					this.SendPropertyChanged("assignmenttype");
					this.OnassignmenttypeChanged();
				}
			}
		}

		[Column(Storage = "_resubmit", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte resubmit
		{
			get
			{
				return this._resubmit;
			}
			set
			{
				if (this._resubmit != value)
				{
					this.OnresubmitChanging(value);
					this.SendPropertyChanging();
					this._resubmit = value;
					this.SendPropertyChanged("resubmit");
					this.OnresubmitChanged();
				}
			}
		}

		[Column(Storage = "_preventlate", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte preventlate
		{
			get
			{
				return this._preventlate;
			}
			set
			{
				if (this._preventlate != value)
				{
					this.OnpreventlateChanging(value);
					this.SendPropertyChanging();
					this._preventlate = value;
					this.SendPropertyChanged("preventlate");
					this.OnpreventlateChanged();
				}
			}
		}

		[Column(Storage = "_emailteachers", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte emailteachers
		{
			get
			{
				return this._emailteachers;
			}
			set
			{
				if (this._emailteachers != value)
				{
					this.OnemailteachersChanging(value);
					this.SendPropertyChanging();
					this._emailteachers = value;
					this.SendPropertyChanged("emailteachers");
					this.OnemailteachersChanged();
				}
			}
		}

		[Column(Storage = "_var1", DbType = "bigint(10)")]
		public System.Nullable<long> var1
		{
			get
			{
				return this._var1;
			}
			set
			{
				if (this._var1 != value)
				{
					this.Onvar1Changing(value);
					this.SendPropertyChanging();
					this._var1 = value;
					this.SendPropertyChanged("var1");
					this.Onvar1Changed();
				}
			}
		}

		[Column(Storage = "_var2", DbType = "bigint(10)")]
		public System.Nullable<long> var2
		{
			get
			{
				return this._var2;
			}
			set
			{
				if (this._var2 != value)
				{
					this.Onvar2Changing(value);
					this.SendPropertyChanging();
					this._var2 = value;
					this.SendPropertyChanged("var2");
					this.Onvar2Changed();
				}
			}
		}

		[Column(Storage = "_var3", DbType = "bigint(10)")]
		public System.Nullable<long> var3
		{
			get
			{
				return this._var3;
			}
			set
			{
				if (this._var3 != value)
				{
					this.Onvar3Changing(value);
					this.SendPropertyChanging();
					this._var3 = value;
					this.SendPropertyChanged("var3");
					this.Onvar3Changed();
				}
			}
		}

		[Column(Storage = "_var4", DbType = "bigint(10)")]
		public System.Nullable<long> var4
		{
			get
			{
				return this._var4;
			}
			set
			{
				if (this._var4 != value)
				{
					this.Onvar4Changing(value);
					this.SendPropertyChanging();
					this._var4 = value;
					this.SendPropertyChanged("var4");
					this.Onvar4Changed();
				}
			}
		}

		[Column(Storage = "_var5", DbType = "bigint(10)")]
		public System.Nullable<long> var5
		{
			get
			{
				return this._var5;
			}
			set
			{
				if (this._var5 != value)
				{
					this.Onvar5Changing(value);
					this.SendPropertyChanging();
					this._var5 = value;
					this.SendPropertyChanged("var5");
					this.Onvar5Changed();
				}
			}
		}

		[Column(Storage = "_maxbytes", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal maxbytes
		{
			get
			{
				return this._maxbytes;
			}
			set
			{
				if (this._maxbytes != value)
				{
					this.OnmaxbytesChanging(value);
					this.SendPropertyChanging();
					this._maxbytes = value;
					this.SendPropertyChanged("maxbytes");
					this.OnmaxbytesChanged();
				}
			}
		}

		[Column(Storage = "_timedue", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timedue
		{
			get
			{
				return this._timedue;
			}
			set
			{
				if (this._timedue != value)
				{
					this.OntimedueChanging(value);
					this.SendPropertyChanging();
					this._timedue = value;
					this.SendPropertyChanged("timedue");
					this.OntimedueChanged();
				}
			}
		}

		[Column(Storage = "_timeavailable", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeavailable
		{
			get
			{
				return this._timeavailable;
			}
			set
			{
				if (this._timeavailable != value)
				{
					this.OntimeavailableChanging(value);
					this.SendPropertyChanging();
					this._timeavailable = value;
					this.SendPropertyChanged("timeavailable");
					this.OntimeavailableChanged();
				}
			}
		}

		[Column(Storage = "_grade", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if (this._grade != value)
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_assignment_submissions")]
	public partial class mdl_assignment_submission : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _assignment;

		private decimal _userid;

		private decimal _timecreated;

		private decimal _timemodified;

		private decimal _numfiles;

		private string _data1;

		private string _data2;

		private long _grade;

		private string _submissioncomment;

		private int _format;

		private decimal _teacher;

		private decimal _timemarked;

		private byte _mailed;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnassignmentChanging(decimal value);
		partial void OnassignmentChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OntimecreatedChanging(decimal value);
		partial void OntimecreatedChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		partial void OnnumfilesChanging(decimal value);
		partial void OnnumfilesChanged();
		partial void Ondata1Changing(string value);
		partial void Ondata1Changed();
		partial void Ondata2Changing(string value);
		partial void Ondata2Changed();
		partial void OngradeChanging(long value);
		partial void OngradeChanged();
		partial void OnsubmissioncommentChanging(string value);
		partial void OnsubmissioncommentChanged();
		partial void OnformatChanging(int value);
		partial void OnformatChanged();
		partial void OnteacherChanging(decimal value);
		partial void OnteacherChanged();
		partial void OntimemarkedChanging(decimal value);
		partial void OntimemarkedChanged();
		partial void OnmailedChanging(byte value);
		partial void OnmailedChanged();
		#endregion

		public mdl_assignment_submission()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_assignment", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal assignment
		{
			get
			{
				return this._assignment;
			}
			set
			{
				if (this._assignment != value)
				{
					this.OnassignmentChanging(value);
					this.SendPropertyChanging();
					this._assignment = value;
					this.SendPropertyChanged("assignment");
					this.OnassignmentChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_numfiles", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal numfiles
		{
			get
			{
				return this._numfiles;
			}
			set
			{
				if (this._numfiles != value)
				{
					this.OnnumfilesChanging(value);
					this.SendPropertyChanging();
					this._numfiles = value;
					this.SendPropertyChanged("numfiles");
					this.OnnumfilesChanged();
				}
			}
		}

		[Column(Storage = "_data1", DbType = "text")]
		public string data1
		{
			get
			{
				return this._data1;
			}
			set
			{
				if (this._data1 != value)
				{
					this.Ondata1Changing(value);
					this.SendPropertyChanging();
					this._data1 = value;
					this.SendPropertyChanged("data1");
					this.Ondata1Changed();
				}
			}
		}

		[Column(Storage = "_data2", DbType = "text")]
		public string data2
		{
			get
			{
				return this._data2;
			}
			set
			{
				if (this._data2 != value)
				{
					this.Ondata2Changing(value);
					this.SendPropertyChanging();
					this._data2 = value;
					this.SendPropertyChanged("data2");
					this.Ondata2Changed();
				}
			}
		}

		[Column(Storage = "_grade", CanBeNull = false, DbType = "bigint(11) NOT NULL")]
		public long grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if (this._grade != value)
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}

		[Column(Storage = "_submissioncomment", CanBeNull = false, DbType = "text NOT NULL")]
		public string submissioncomment
		{
			get
			{
				return this._submissioncomment;
			}
			set
			{
				if (this._submissioncomment != value)
				{
					this.OnsubmissioncommentChanging(value);
					this.SendPropertyChanging();
					this._submissioncomment = value;
					this.SendPropertyChanged("submissioncomment");
					this.OnsubmissioncommentChanged();
				}
			}
		}

		[Column(Storage = "_format", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int format
		{
			get
			{
				return this._format;
			}
			set
			{
				if (this._format != value)
				{
					this.OnformatChanging(value);
					this.SendPropertyChanging();
					this._format = value;
					this.SendPropertyChanged("format");
					this.OnformatChanged();
				}
			}
		}

		[Column(Storage = "_teacher", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal teacher
		{
			get
			{
				return this._teacher;
			}
			set
			{
				if (this._teacher != value)
				{
					this.OnteacherChanging(value);
					this.SendPropertyChanging();
					this._teacher = value;
					this.SendPropertyChanged("teacher");
					this.OnteacherChanged();
				}
			}
		}

		[Column(Storage = "_timemarked", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemarked
		{
			get
			{
				return this._timemarked;
			}
			set
			{
				if (this._timemarked != value)
				{
					this.OntimemarkedChanging(value);
					this.SendPropertyChanging();
					this._timemarked = value;
					this.SendPropertyChanged("timemarked");
					this.OntimemarkedChanged();
				}
			}
		}

		[Column(Storage = "_mailed", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte mailed
		{
			get
			{
				return this._mailed;
			}
			set
			{
				if (this._mailed != value)
				{
					this.OnmailedChanging(value);
					this.SendPropertyChanging();
					this._mailed = value;
					this.SendPropertyChanged("mailed");
					this.OnmailedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_backup_config")]
	public partial class mdl_backup_config : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _name;

		private string _value;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnvalueChanging(string value);
		partial void OnvalueChanged();
		#endregion

		public mdl_backup_config()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_value", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if (this._value != value)
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_backup_courses")]
	public partial class mdl_backup_course : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _courseid;

		private decimal _laststarttime;

		private decimal _lastendtime;

		private string _laststatus;

		private decimal _nextstarttime;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OnlaststarttimeChanging(decimal value);
		partial void OnlaststarttimeChanged();
		partial void OnlastendtimeChanging(decimal value);
		partial void OnlastendtimeChanged();
		partial void OnlaststatusChanging(string value);
		partial void OnlaststatusChanged();
		partial void OnnextstarttimeChanging(decimal value);
		partial void OnnextstarttimeChanged();
		#endregion

		public mdl_backup_course()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_laststarttime", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal laststarttime
		{
			get
			{
				return this._laststarttime;
			}
			set
			{
				if (this._laststarttime != value)
				{
					this.OnlaststarttimeChanging(value);
					this.SendPropertyChanging();
					this._laststarttime = value;
					this.SendPropertyChanged("laststarttime");
					this.OnlaststarttimeChanged();
				}
			}
		}

		[Column(Storage = "_lastendtime", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal lastendtime
		{
			get
			{
				return this._lastendtime;
			}
			set
			{
				if (this._lastendtime != value)
				{
					this.OnlastendtimeChanging(value);
					this.SendPropertyChanging();
					this._lastendtime = value;
					this.SendPropertyChanged("lastendtime");
					this.OnlastendtimeChanged();
				}
			}
		}

		[Column(Storage = "_laststatus", CanBeNull = false, DbType = "varchar(3) NOT NULL")]
		public string laststatus
		{
			get
			{
				return this._laststatus;
			}
			set
			{
				if (this._laststatus != value)
				{
					this.OnlaststatusChanging(value);
					this.SendPropertyChanging();
					this._laststatus = value;
					this.SendPropertyChanged("laststatus");
					this.OnlaststatusChanged();
				}
			}
		}

		[Column(Storage = "_nextstarttime", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal nextstarttime
		{
			get
			{
				return this._nextstarttime;
			}
			set
			{
				if (this._nextstarttime != value)
				{
					this.OnnextstarttimeChanging(value);
					this.SendPropertyChanging();
					this._nextstarttime = value;
					this.SendPropertyChanged("nextstarttime");
					this.OnnextstarttimeChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_backup_files")]
	public partial class mdl_backup_file : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _backup_code;

		private string _file_type;

		private string _path;

		private decimal _old_id;

		private decimal _new_id;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void Onbackup_codeChanging(decimal value);
		partial void Onbackup_codeChanged();
		partial void Onfile_typeChanging(string value);
		partial void Onfile_typeChanged();
		partial void OnpathChanging(string value);
		partial void OnpathChanged();
		partial void Onold_idChanging(decimal value);
		partial void Onold_idChanged();
		partial void Onnew_idChanging(decimal value);
		partial void Onnew_idChanged();
		#endregion

		public mdl_backup_file()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_backup_code", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal backup_code
		{
			get
			{
				return this._backup_code;
			}
			set
			{
				if (this._backup_code != value)
				{
					this.Onbackup_codeChanging(value);
					this.SendPropertyChanging();
					this._backup_code = value;
					this.SendPropertyChanged("backup_code");
					this.Onbackup_codeChanged();
				}
			}
		}

		[Column(Storage = "_file_type", CanBeNull = false, DbType = "varchar(30) NOT NULL")]
		public string file_type
		{
			get
			{
				return this._file_type;
			}
			set
			{
				if (this._file_type != value)
				{
					this.Onfile_typeChanging(value);
					this.SendPropertyChanging();
					this._file_type = value;
					this.SendPropertyChanged("file_type");
					this.Onfile_typeChanged();
				}
			}
		}

		[Column(Storage = "_path", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if (this._path != value)
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}

		[Column(Storage = "_old_id", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal old_id
		{
			get
			{
				return this._old_id;
			}
			set
			{
				if (this._old_id != value)
				{
					this.Onold_idChanging(value);
					this.SendPropertyChanging();
					this._old_id = value;
					this.SendPropertyChanged("old_id");
					this.Onold_idChanged();
				}
			}
		}

		[Column(Storage = "_new_id", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal new_id
		{
			get
			{
				return this._new_id;
			}
			set
			{
				if (this._new_id != value)
				{
					this.Onnew_idChanging(value);
					this.SendPropertyChanging();
					this._new_id = value;
					this.SendPropertyChanged("new_id");
					this.Onnew_idChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_backup_ids")]
	public partial class mdl_backup_id : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _backup_code;

		private string _table_name;

		private decimal _old_id;

		private decimal _new_id;

		private string _info;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void Onbackup_codeChanging(decimal value);
		partial void Onbackup_codeChanged();
		partial void Ontable_nameChanging(string value);
		partial void Ontable_nameChanged();
		partial void Onold_idChanging(decimal value);
		partial void Onold_idChanged();
		partial void Onnew_idChanging(decimal value);
		partial void Onnew_idChanged();
		partial void OninfoChanging(string value);
		partial void OninfoChanged();
		#endregion

		public mdl_backup_id()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_backup_code", CanBeNull = false, DbType = "bigint(12) NOT NULL")]
		public decimal backup_code
		{
			get
			{
				return this._backup_code;
			}
			set
			{
				if (this._backup_code != value)
				{
					this.Onbackup_codeChanging(value);
					this.SendPropertyChanging();
					this._backup_code = value;
					this.SendPropertyChanged("backup_code");
					this.Onbackup_codeChanged();
				}
			}
		}

		[Column(Storage = "_table_name", CanBeNull = false, DbType = "varchar(90) NOT NULL")]
		public string table_name
		{
			get
			{
				return this._table_name;
			}
			set
			{
				if (this._table_name != value)
				{
					this.Ontable_nameChanging(value);
					this.SendPropertyChanging();
					this._table_name = value;
					this.SendPropertyChanged("table_name");
					this.Ontable_nameChanged();
				}
			}
		}

		[Column(Storage = "_old_id", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal old_id
		{
			get
			{
				return this._old_id;
			}
			set
			{
				if (this._old_id != value)
				{
					this.Onold_idChanging(value);
					this.SendPropertyChanging();
					this._old_id = value;
					this.SendPropertyChanged("old_id");
					this.Onold_idChanged();
				}
			}
		}

		[Column(Storage = "_new_id", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal new_id
		{
			get
			{
				return this._new_id;
			}
			set
			{
				if (this._new_id != value)
				{
					this.Onnew_idChanging(value);
					this.SendPropertyChanging();
					this._new_id = value;
					this.SendPropertyChanged("new_id");
					this.Onnew_idChanged();
				}
			}
		}

		[Column(Storage = "_info", CanBeNull = false, DbType = "mediumtext NOT NULL")]
		public string info
		{
			get
			{
				return this._info;
			}
			set
			{
				if (this._info != value)
				{
					this.OninfoChanging(value);
					this.SendPropertyChanging();
					this._info = value;
					this.SendPropertyChanged("info");
					this.OninfoChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_backup_log")]
	public partial class mdl_backup_log : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _courseid;

		private decimal _time;

		private decimal _laststarttime;

		private string _info;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OntimeChanging(decimal value);
		partial void OntimeChanged();
		partial void OnlaststarttimeChanging(decimal value);
		partial void OnlaststarttimeChanged();
		partial void OninfoChanging(string value);
		partial void OninfoChanged();
		#endregion

		public mdl_backup_log()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_time", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal time
		{
			get
			{
				return this._time;
			}
			set
			{
				if (this._time != value)
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}

		[Column(Storage = "_laststarttime", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal laststarttime
		{
			get
			{
				return this._laststarttime;
			}
			set
			{
				if (this._laststarttime != value)
				{
					this.OnlaststarttimeChanging(value);
					this.SendPropertyChanging();
					this._laststarttime = value;
					this.SendPropertyChanged("laststarttime");
					this.OnlaststarttimeChanged();
				}
			}
		}

		[Column(Storage = "_info", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string info
		{
			get
			{
				return this._info;
			}
			set
			{
				if (this._info != value)
				{
					this.OninfoChanging(value);
					this.SendPropertyChanging();
					this._info = value;
					this.SendPropertyChanged("info");
					this.OninfoChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_block")]
	public partial class mdl_block : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _name;

		private decimal _version;

		private decimal _cron;

		private decimal _lastcron;

		private short _visible;

		private short _multiple;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnversionChanging(decimal value);
		partial void OnversionChanged();
		partial void OncronChanging(decimal value);
		partial void OncronChanged();
		partial void OnlastcronChanging(decimal value);
		partial void OnlastcronChanged();
		partial void OnvisibleChanging(short value);
		partial void OnvisibleChanged();
		partial void OnmultipleChanging(short value);
		partial void OnmultipleChanged();
		#endregion

		public mdl_block()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(120) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_version", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal version
		{
			get
			{
				return this._version;
			}
			set
			{
				if (this._version != value)
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}

		[Column(Storage = "_cron", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal cron
		{
			get
			{
				return this._cron;
			}
			set
			{
				if (this._cron != value)
				{
					this.OncronChanging(value);
					this.SendPropertyChanging();
					this._cron = value;
					this.SendPropertyChanged("cron");
					this.OncronChanged();
				}
			}
		}

		[Column(Storage = "_lastcron", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal lastcron
		{
			get
			{
				return this._lastcron;
			}
			set
			{
				if (this._lastcron != value)
				{
					this.OnlastcronChanging(value);
					this.SendPropertyChanging();
					this._lastcron = value;
					this.SendPropertyChanged("lastcron");
					this.OnlastcronChanged();
				}
			}
		}

		[Column(Storage = "_visible", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short visible
		{
			get
			{
				return this._visible;
			}
			set
			{
				if (this._visible != value)
				{
					this.OnvisibleChanging(value);
					this.SendPropertyChanging();
					this._visible = value;
					this.SendPropertyChanged("visible");
					this.OnvisibleChanged();
				}
			}
		}

		[Column(Storage = "_multiple", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short multiple
		{
			get
			{
				return this._multiple;
			}
			set
			{
				if (this._multiple != value)
				{
					this.OnmultipleChanging(value);
					this.SendPropertyChanging();
					this._multiple = value;
					this.SendPropertyChanged("multiple");
					this.OnmultipleChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_block_instance")]
	public partial class mdl_block_instance : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _blockid;

		private decimal _pageid;

		private string _pagetype;

		private string _position;

		private short _weight;

		private short _visible;

		private string _configdata;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnblockidChanging(decimal value);
		partial void OnblockidChanged();
		partial void OnpageidChanging(decimal value);
		partial void OnpageidChanged();
		partial void OnpagetypeChanging(string value);
		partial void OnpagetypeChanged();
		partial void OnpositionChanging(string value);
		partial void OnpositionChanged();
		partial void OnweightChanging(short value);
		partial void OnweightChanged();
		partial void OnvisibleChanging(short value);
		partial void OnvisibleChanged();
		partial void OnconfigdataChanging(string value);
		partial void OnconfigdataChanged();
		#endregion

		public mdl_block_instance()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_blockid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal blockid
		{
			get
			{
				return this._blockid;
			}
			set
			{
				if (this._blockid != value)
				{
					this.OnblockidChanging(value);
					this.SendPropertyChanging();
					this._blockid = value;
					this.SendPropertyChanged("blockid");
					this.OnblockidChanged();
				}
			}
		}

		[Column(Storage = "_pageid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal pageid
		{
			get
			{
				return this._pageid;
			}
			set
			{
				if (this._pageid != value)
				{
					this.OnpageidChanging(value);
					this.SendPropertyChanging();
					this._pageid = value;
					this.SendPropertyChanged("pageid");
					this.OnpageidChanged();
				}
			}
		}

		[Column(Storage = "_pagetype", CanBeNull = false, DbType = "varchar(60) NOT NULL")]
		public string pagetype
		{
			get
			{
				return this._pagetype;
			}
			set
			{
				if (this._pagetype != value)
				{
					this.OnpagetypeChanging(value);
					this.SendPropertyChanging();
					this._pagetype = value;
					this.SendPropertyChanged("pagetype");
					this.OnpagetypeChanged();
				}
			}
		}

		[Column(Storage = "_position", CanBeNull = false, DbType = "varchar(30) NOT NULL")]
		public string position
		{
			get
			{
				return this._position;
			}
			set
			{
				if (this._position != value)
				{
					this.OnpositionChanging(value);
					this.SendPropertyChanging();
					this._position = value;
					this.SendPropertyChanged("position");
					this.OnpositionChanged();
				}
			}
		}

		[Column(Storage = "_weight", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public short weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if (this._weight != value)
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}

		[Column(Storage = "_visible", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short visible
		{
			get
			{
				return this._visible;
			}
			set
			{
				if (this._visible != value)
				{
					this.OnvisibleChanging(value);
					this.SendPropertyChanging();
					this._visible = value;
					this.SendPropertyChanged("visible");
					this.OnvisibleChanged();
				}
			}
		}

		[Column(Storage = "_configdata", DbType = "text")]
		public string configdata
		{
			get
			{
				return this._configdata;
			}
			set
			{
				if (this._configdata != value)
				{
					this.OnconfigdataChanging(value);
					this.SendPropertyChanging();
					this._configdata = value;
					this.SendPropertyChanged("configdata");
					this.OnconfigdataChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_block_pinned")]
	public partial class mdl_block_pinned : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _blockid;

		private string _pagetype;

		private string _position;

		private short _weight;

		private short _visible;

		private string _configdata;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnblockidChanging(decimal value);
		partial void OnblockidChanged();
		partial void OnpagetypeChanging(string value);
		partial void OnpagetypeChanged();
		partial void OnpositionChanging(string value);
		partial void OnpositionChanged();
		partial void OnweightChanging(short value);
		partial void OnweightChanged();
		partial void OnvisibleChanging(short value);
		partial void OnvisibleChanged();
		partial void OnconfigdataChanging(string value);
		partial void OnconfigdataChanged();
		#endregion

		public mdl_block_pinned()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_blockid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal blockid
		{
			get
			{
				return this._blockid;
			}
			set
			{
				if (this._blockid != value)
				{
					this.OnblockidChanging(value);
					this.SendPropertyChanging();
					this._blockid = value;
					this.SendPropertyChanged("blockid");
					this.OnblockidChanged();
				}
			}
		}

		[Column(Storage = "_pagetype", CanBeNull = false, DbType = "varchar(60) NOT NULL")]
		public string pagetype
		{
			get
			{
				return this._pagetype;
			}
			set
			{
				if (this._pagetype != value)
				{
					this.OnpagetypeChanging(value);
					this.SendPropertyChanging();
					this._pagetype = value;
					this.SendPropertyChanged("pagetype");
					this.OnpagetypeChanged();
				}
			}
		}

		[Column(Storage = "_position", CanBeNull = false, DbType = "varchar(30) NOT NULL")]
		public string position
		{
			get
			{
				return this._position;
			}
			set
			{
				if (this._position != value)
				{
					this.OnpositionChanging(value);
					this.SendPropertyChanging();
					this._position = value;
					this.SendPropertyChanged("position");
					this.OnpositionChanged();
				}
			}
		}

		[Column(Storage = "_weight", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public short weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if (this._weight != value)
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}

		[Column(Storage = "_visible", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short visible
		{
			get
			{
				return this._visible;
			}
			set
			{
				if (this._visible != value)
				{
					this.OnvisibleChanging(value);
					this.SendPropertyChanging();
					this._visible = value;
					this.SendPropertyChanged("visible");
					this.OnvisibleChanged();
				}
			}
		}

		[Column(Storage = "_configdata", CanBeNull = false, DbType = "text NOT NULL")]
		public string configdata
		{
			get
			{
				return this._configdata;
			}
			set
			{
				if (this._configdata != value)
				{
					this.OnconfigdataChanging(value);
					this.SendPropertyChanging();
					this._configdata = value;
					this.SendPropertyChanged("configdata");
					this.OnconfigdataChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_block_rss_client")]
	public partial class mdl_block_rss_client : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _userid;

		private string _title;

		private string _preferredtitle;

		private string _description;

		private byte _shared;

		private string _url;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OntitleChanging(string value);
		partial void OntitleChanged();
		partial void OnpreferredtitleChanging(string value);
		partial void OnpreferredtitleChanged();
		partial void OndescriptionChanging(string value);
		partial void OndescriptionChanged();
		partial void OnsharedChanging(byte value);
		partial void OnsharedChanged();
		partial void OnurlChanging(string value);
		partial void OnurlChanged();
		#endregion

		public mdl_block_rss_client()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_title", CanBeNull = false, DbType = "text NOT NULL")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if (this._title != value)
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}

		[Column(Storage = "_preferredtitle", CanBeNull = false, DbType = "varchar(192) NOT NULL")]
		public string preferredtitle
		{
			get
			{
				return this._preferredtitle;
			}
			set
			{
				if (this._preferredtitle != value)
				{
					this.OnpreferredtitleChanging(value);
					this.SendPropertyChanging();
					this._preferredtitle = value;
					this.SendPropertyChanged("preferredtitle");
					this.OnpreferredtitleChanged();
				}
			}
		}

		[Column(Storage = "_description", CanBeNull = false, DbType = "text NOT NULL")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if (this._description != value)
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}

		[Column(Storage = "_shared", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte shared
		{
			get
			{
				return this._shared;
			}
			set
			{
				if (this._shared != value)
				{
					this.OnsharedChanging(value);
					this.SendPropertyChanging();
					this._shared = value;
					this.SendPropertyChanged("shared");
					this.OnsharedChanged();
				}
			}
		}

		[Column(Storage = "_url", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if (this._url != value)
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_block_search_documents")]
	public partial class mdl_block_search_document : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _docid;

		private string _doctype;

		private string _itemtype;

		private string _title;

		private string _url;

		private decimal _docdate;

		private decimal _updated;

		private decimal _courseid;

		private decimal _groupid;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OndocidChanging(string value);
		partial void OndocidChanged();
		partial void OndoctypeChanging(string value);
		partial void OndoctypeChanged();
		partial void OnitemtypeChanging(string value);
		partial void OnitemtypeChanged();
		partial void OntitleChanging(string value);
		partial void OntitleChanged();
		partial void OnurlChanging(string value);
		partial void OnurlChanged();
		partial void OndocdateChanging(decimal value);
		partial void OndocdateChanged();
		partial void OnupdatedChanging(decimal value);
		partial void OnupdatedChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OngroupidChanging(decimal value);
		partial void OngroupidChanged();
		#endregion

		public mdl_block_search_document()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_docid", CanBeNull = false, DbType = "varchar(96) NOT NULL")]
		public string docid
		{
			get
			{
				return this._docid;
			}
			set
			{
				if (this._docid != value)
				{
					this.OndocidChanging(value);
					this.SendPropertyChanging();
					this._docid = value;
					this.SendPropertyChanged("docid");
					this.OndocidChanged();
				}
			}
		}

		[Column(Storage = "_doctype", CanBeNull = false, DbType = "varchar(96) NOT NULL")]
		public string doctype
		{
			get
			{
				return this._doctype;
			}
			set
			{
				if (this._doctype != value)
				{
					this.OndoctypeChanging(value);
					this.SendPropertyChanging();
					this._doctype = value;
					this.SendPropertyChanged("doctype");
					this.OndoctypeChanged();
				}
			}
		}

		[Column(Storage = "_itemtype", CanBeNull = false, DbType = "varchar(96) NOT NULL")]
		public string itemtype
		{
			get
			{
				return this._itemtype;
			}
			set
			{
				if (this._itemtype != value)
				{
					this.OnitemtypeChanging(value);
					this.SendPropertyChanging();
					this._itemtype = value;
					this.SendPropertyChanged("itemtype");
					this.OnitemtypeChanged();
				}
			}
		}

		[Column(Storage = "_title", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if (this._title != value)
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}

		[Column(Storage = "_url", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if (this._url != value)
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}

		[Column(Storage = "_docdate", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal docdate
		{
			get
			{
				return this._docdate;
			}
			set
			{
				if (this._docdate != value)
				{
					this.OndocdateChanging(value);
					this.SendPropertyChanging();
					this._docdate = value;
					this.SendPropertyChanged("docdate");
					this.OndocdateChanged();
				}
			}
		}

		[Column(Storage = "_updated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal updated
		{
			get
			{
				return this._updated;
			}
			set
			{
				if (this._updated != value)
				{
					this.OnupdatedChanging(value);
					this.SendPropertyChanging();
					this._updated = value;
					this.SendPropertyChanged("updated");
					this.OnupdatedChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_groupid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal groupid
		{
			get
			{
				return this._groupid;
			}
			set
			{
				if (this._groupid != value)
				{
					this.OngroupidChanging(value);
					this.SendPropertyChanging();
					this._groupid = value;
					this.SendPropertyChanged("groupid");
					this.OngroupidChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_cache_filters")]
	public partial class mdl_cache_filter : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _filter;

		private decimal _version;

		private string _md5key;

		private string _rawtext;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnfilterChanging(string value);
		partial void OnfilterChanged();
		partial void OnversionChanging(decimal value);
		partial void OnversionChanged();
		partial void Onmd5keyChanging(string value);
		partial void Onmd5keyChanged();
		partial void OnrawtextChanging(string value);
		partial void OnrawtextChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_cache_filter()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_filter", CanBeNull = false, DbType = "varchar(96) NOT NULL")]
		public string filter
		{
			get
			{
				return this._filter;
			}
			set
			{
				if (this._filter != value)
				{
					this.OnfilterChanging(value);
					this.SendPropertyChanging();
					this._filter = value;
					this.SendPropertyChanged("filter");
					this.OnfilterChanged();
				}
			}
		}

		[Column(Storage = "_version", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal version
		{
			get
			{
				return this._version;
			}
			set
			{
				if (this._version != value)
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}

		[Column(Storage = "_md5key", CanBeNull = false, DbType = "varchar(96) NOT NULL")]
		public string md5key
		{
			get
			{
				return this._md5key;
			}
			set
			{
				if (this._md5key != value)
				{
					this.Onmd5keyChanging(value);
					this.SendPropertyChanging();
					this._md5key = value;
					this.SendPropertyChanged("md5key");
					this.Onmd5keyChanged();
				}
			}
		}

		[Column(Storage = "_rawtext", CanBeNull = false, DbType = "text NOT NULL")]
		public string rawtext
		{
			get
			{
				return this._rawtext;
			}
			set
			{
				if (this._rawtext != value)
				{
					this.OnrawtextChanging(value);
					this.SendPropertyChanging();
					this._rawtext = value;
					this.SendPropertyChanged("rawtext");
					this.OnrawtextChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_cache_flags")]
	public partial class mdl_cache_flag : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _flagtype;

		private string _name;

		private decimal _timemodified;

		private string _value;

		private decimal _expiry;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnflagtypeChanging(string value);
		partial void OnflagtypeChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		partial void OnvalueChanging(string value);
		partial void OnvalueChanged();
		partial void OnexpiryChanging(decimal value);
		partial void OnexpiryChanged();
		#endregion

		public mdl_cache_flag()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_flagtype", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string flagtype
		{
			get
			{
				return this._flagtype;
			}
			set
			{
				if (this._flagtype != value)
				{
					this.OnflagtypeChanging(value);
					this.SendPropertyChanging();
					this._flagtype = value;
					this.SendPropertyChanged("flagtype");
					this.OnflagtypeChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_value", CanBeNull = false, DbType = "mediumtext NOT NULL")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if (this._value != value)
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}

		[Column(Storage = "_expiry", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal expiry
		{
			get
			{
				return this._expiry;
			}
			set
			{
				if (this._expiry != value)
				{
					this.OnexpiryChanging(value);
					this.SendPropertyChanging();
					this._expiry = value;
					this.SendPropertyChanged("expiry");
					this.OnexpiryChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_cache_text")]
	public partial class mdl_cache_text : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _md5key;

		private string _formattedtext;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void Onmd5keyChanging(string value);
		partial void Onmd5keyChanged();
		partial void OnformattedtextChanging(string value);
		partial void OnformattedtextChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_cache_text()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_md5key", CanBeNull = false, DbType = "varchar(96) NOT NULL")]
		public string md5key
		{
			get
			{
				return this._md5key;
			}
			set
			{
				if (this._md5key != value)
				{
					this.Onmd5keyChanging(value);
					this.SendPropertyChanging();
					this._md5key = value;
					this.SendPropertyChanged("md5key");
					this.Onmd5keyChanged();
				}
			}
		}

		[Column(Storage = "_formattedtext", CanBeNull = false, DbType = "longtext NOT NULL")]
		public string formattedtext
		{
			get
			{
				return this._formattedtext;
			}
			set
			{
				if (this._formattedtext != value)
				{
					this.OnformattedtextChanging(value);
					this.SendPropertyChanging();
					this._formattedtext = value;
					this.SendPropertyChanged("formattedtext");
					this.OnformattedtextChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_capabilities")]
	public partial class mdl_capabilit : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _name;

		private string _captype;

		private decimal _contextlevel;

		private string _component;

		private decimal _riskbitmask;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OncaptypeChanging(string value);
		partial void OncaptypeChanged();
		partial void OncontextlevelChanging(decimal value);
		partial void OncontextlevelChanged();
		partial void OncomponentChanging(string value);
		partial void OncomponentChanged();
		partial void OnriskbitmaskChanging(decimal value);
		partial void OnriskbitmaskChanged();
		#endregion

		public mdl_capabilit()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_captype", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string captype
		{
			get
			{
				return this._captype;
			}
			set
			{
				if (this._captype != value)
				{
					this.OncaptypeChanging(value);
					this.SendPropertyChanging();
					this._captype = value;
					this.SendPropertyChanged("captype");
					this.OncaptypeChanged();
				}
			}
		}

		[Column(Storage = "_contextlevel", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal contextlevel
		{
			get
			{
				return this._contextlevel;
			}
			set
			{
				if (this._contextlevel != value)
				{
					this.OncontextlevelChanging(value);
					this.SendPropertyChanging();
					this._contextlevel = value;
					this.SendPropertyChanged("contextlevel");
					this.OncontextlevelChanged();
				}
			}
		}

		[Column(Storage = "_component", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string component
		{
			get
			{
				return this._component;
			}
			set
			{
				if (this._component != value)
				{
					this.OncomponentChanging(value);
					this.SendPropertyChanging();
					this._component = value;
					this.SendPropertyChanged("component");
					this.OncomponentChanged();
				}
			}
		}

		[Column(Storage = "_riskbitmask", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal riskbitmask
		{
			get
			{
				return this._riskbitmask;
			}
			set
			{
				if (this._riskbitmask != value)
				{
					this.OnriskbitmaskChanging(value);
					this.SendPropertyChanging();
					this._riskbitmask = value;
					this.SendPropertyChanged("riskbitmask");
					this.OnriskbitmaskChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_chat")]
	public partial class mdl_chat : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private string _name;

		private string _intro;

		private long _keepdays;

		private short _studentlogs;

		private decimal _chattime;

		private short _schedule;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnintroChanging(string value);
		partial void OnintroChanged();
		partial void OnkeepdaysChanging(long value);
		partial void OnkeepdaysChanged();
		partial void OnstudentlogsChanging(short value);
		partial void OnstudentlogsChanged();
		partial void OnchattimeChanging(decimal value);
		partial void OnchattimeChanged();
		partial void OnscheduleChanging(short value);
		partial void OnscheduleChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_chat()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_intro", CanBeNull = false, DbType = "text NOT NULL")]
		public string intro
		{
			get
			{
				return this._intro;
			}
			set
			{
				if (this._intro != value)
				{
					this.OnintroChanging(value);
					this.SendPropertyChanging();
					this._intro = value;
					this.SendPropertyChanged("intro");
					this.OnintroChanged();
				}
			}
		}

		[Column(Storage = "_keepdays", CanBeNull = false, DbType = "bigint(11) NOT NULL")]
		public long keepdays
		{
			get
			{
				return this._keepdays;
			}
			set
			{
				if (this._keepdays != value)
				{
					this.OnkeepdaysChanging(value);
					this.SendPropertyChanging();
					this._keepdays = value;
					this.SendPropertyChanged("keepdays");
					this.OnkeepdaysChanged();
				}
			}
		}

		[Column(Storage = "_studentlogs", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public short studentlogs
		{
			get
			{
				return this._studentlogs;
			}
			set
			{
				if (this._studentlogs != value)
				{
					this.OnstudentlogsChanging(value);
					this.SendPropertyChanging();
					this._studentlogs = value;
					this.SendPropertyChanged("studentlogs");
					this.OnstudentlogsChanged();
				}
			}
		}

		[Column(Storage = "_chattime", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal chattime
		{
			get
			{
				return this._chattime;
			}
			set
			{
				if (this._chattime != value)
				{
					this.OnchattimeChanging(value);
					this.SendPropertyChanging();
					this._chattime = value;
					this.SendPropertyChanged("chattime");
					this.OnchattimeChanged();
				}
			}
		}

		[Column(Storage = "_schedule", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public short schedule
		{
			get
			{
				return this._schedule;
			}
			set
			{
				if (this._schedule != value)
				{
					this.OnscheduleChanging(value);
					this.SendPropertyChanging();
					this._schedule = value;
					this.SendPropertyChanged("schedule");
					this.OnscheduleChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_chat_messages")]
	public partial class mdl_chat_message : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private long _chatid;

		private long _userid;

		private long _groupid;

		private byte _system;

		private string _message;

		private decimal _timestamp;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnchatidChanging(long value);
		partial void OnchatidChanged();
		partial void OnuseridChanging(long value);
		partial void OnuseridChanged();
		partial void OngroupidChanging(long value);
		partial void OngroupidChanged();
		partial void OnsystemChanging(byte value);
		partial void OnsystemChanged();
		partial void OnmessageChanging(string value);
		partial void OnmessageChanged();
		partial void OntimestampChanging(decimal value);
		partial void OntimestampChanged();
		#endregion

		public mdl_chat_message()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_chatid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long chatid
		{
			get
			{
				return this._chatid;
			}
			set
			{
				if (this._chatid != value)
				{
					this.OnchatidChanging(value);
					this.SendPropertyChanging();
					this._chatid = value;
					this.SendPropertyChanged("chatid");
					this.OnchatidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_groupid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long groupid
		{
			get
			{
				return this._groupid;
			}
			set
			{
				if (this._groupid != value)
				{
					this.OngroupidChanging(value);
					this.SendPropertyChanging();
					this._groupid = value;
					this.SendPropertyChanged("groupid");
					this.OngroupidChanged();
				}
			}
		}

		[Column(Storage = "_system", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte system
		{
			get
			{
				return this._system;
			}
			set
			{
				if (this._system != value)
				{
					this.OnsystemChanging(value);
					this.SendPropertyChanging();
					this._system = value;
					this.SendPropertyChanged("system");
					this.OnsystemChanged();
				}
			}
		}

		[Column(Storage = "_message", CanBeNull = false, DbType = "text NOT NULL")]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if (this._message != value)
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}

		[Column(Storage = "_timestamp", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if (this._timestamp != value)
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_chat_users")]
	public partial class mdl_chat_user : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private long _chatid;

		private long _userid;

		private long _groupid;

		private string _version;

		private string _ip;

		private decimal _firstping;

		private decimal _lastping;

		private decimal _lastmessageping;

		private string _sid;

		private decimal _course;

		private string _lang;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnchatidChanging(long value);
		partial void OnchatidChanged();
		partial void OnuseridChanging(long value);
		partial void OnuseridChanged();
		partial void OngroupidChanging(long value);
		partial void OngroupidChanged();
		partial void OnversionChanging(string value);
		partial void OnversionChanged();
		partial void OnipChanging(string value);
		partial void OnipChanged();
		partial void OnfirstpingChanging(decimal value);
		partial void OnfirstpingChanged();
		partial void OnlastpingChanging(decimal value);
		partial void OnlastpingChanged();
		partial void OnlastmessagepingChanging(decimal value);
		partial void OnlastmessagepingChanged();
		partial void OnsidChanging(string value);
		partial void OnsidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnlangChanging(string value);
		partial void OnlangChanged();
		#endregion

		public mdl_chat_user()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_chatid", CanBeNull = false, DbType = "bigint(11) NOT NULL")]
		public long chatid
		{
			get
			{
				return this._chatid;
			}
			set
			{
				if (this._chatid != value)
				{
					this.OnchatidChanging(value);
					this.SendPropertyChanging();
					this._chatid = value;
					this.SendPropertyChanged("chatid");
					this.OnchatidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(11) NOT NULL")]
		public long userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_groupid", CanBeNull = false, DbType = "bigint(11) NOT NULL")]
		public long groupid
		{
			get
			{
				return this._groupid;
			}
			set
			{
				if (this._groupid != value)
				{
					this.OngroupidChanging(value);
					this.SendPropertyChanging();
					this._groupid = value;
					this.SendPropertyChanged("groupid");
					this.OngroupidChanged();
				}
			}
		}

		[Column(Storage = "_version", CanBeNull = false, DbType = "varchar(48) NOT NULL")]
		public string version
		{
			get
			{
				return this._version;
			}
			set
			{
				if (this._version != value)
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}

		[Column(Storage = "_ip", CanBeNull = false, DbType = "varchar(45) NOT NULL")]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if (this._ip != value)
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}

		[Column(Storage = "_firstping", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal firstping
		{
			get
			{
				return this._firstping;
			}
			set
			{
				if (this._firstping != value)
				{
					this.OnfirstpingChanging(value);
					this.SendPropertyChanging();
					this._firstping = value;
					this.SendPropertyChanged("firstping");
					this.OnfirstpingChanged();
				}
			}
		}

		[Column(Storage = "_lastping", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal lastping
		{
			get
			{
				return this._lastping;
			}
			set
			{
				if (this._lastping != value)
				{
					this.OnlastpingChanging(value);
					this.SendPropertyChanging();
					this._lastping = value;
					this.SendPropertyChanged("lastping");
					this.OnlastpingChanged();
				}
			}
		}

		[Column(Storage = "_lastmessageping", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal lastmessageping
		{
			get
			{
				return this._lastmessageping;
			}
			set
			{
				if (this._lastmessageping != value)
				{
					this.OnlastmessagepingChanging(value);
					this.SendPropertyChanging();
					this._lastmessageping = value;
					this.SendPropertyChanged("lastmessageping");
					this.OnlastmessagepingChanged();
				}
			}
		}

		[Column(Storage = "_sid", CanBeNull = false, DbType = "varchar(96) NOT NULL")]
		public string sid
		{
			get
			{
				return this._sid;
			}
			set
			{
				if (this._sid != value)
				{
					this.OnsidChanging(value);
					this.SendPropertyChanging();
					this._sid = value;
					this.SendPropertyChanged("sid");
					this.OnsidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_lang", CanBeNull = false, DbType = "varchar(90) NOT NULL")]
		public string lang
		{
			get
			{
				return this._lang;
			}
			set
			{
				if (this._lang != value)
				{
					this.OnlangChanging(value);
					this.SendPropertyChanging();
					this._lang = value;
					this.SendPropertyChanged("lang");
					this.OnlangChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_choice")]
	public partial class mdl_choice : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private string _name;

		private string _text;

		private byte _format;

		private byte _publish;

		private byte _showresults;

		private int _display;

		private byte _allowupdate;

		private byte _showunanswered;

		private byte _limitanswers;

		private decimal _timeopen;

		private decimal _timeclose;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OntextChanging(string value);
		partial void OntextChanged();
		partial void OnformatChanging(byte value);
		partial void OnformatChanged();
		partial void OnpublishChanging(byte value);
		partial void OnpublishChanged();
		partial void OnshowresultsChanging(byte value);
		partial void OnshowresultsChanged();
		partial void OndisplayChanging(int value);
		partial void OndisplayChanged();
		partial void OnallowupdateChanging(byte value);
		partial void OnallowupdateChanged();
		partial void OnshowunansweredChanging(byte value);
		partial void OnshowunansweredChanged();
		partial void OnlimitanswersChanging(byte value);
		partial void OnlimitanswersChanged();
		partial void OntimeopenChanging(decimal value);
		partial void OntimeopenChanged();
		partial void OntimecloseChanging(decimal value);
		partial void OntimecloseChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_choice()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_text", CanBeNull = false, DbType = "text NOT NULL")]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if (this._text != value)
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}

		[Column(Storage = "_format", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte format
		{
			get
			{
				return this._format;
			}
			set
			{
				if (this._format != value)
				{
					this.OnformatChanging(value);
					this.SendPropertyChanging();
					this._format = value;
					this.SendPropertyChanged("format");
					this.OnformatChanged();
				}
			}
		}

		[Column(Storage = "_publish", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte publish
		{
			get
			{
				return this._publish;
			}
			set
			{
				if (this._publish != value)
				{
					this.OnpublishChanging(value);
					this.SendPropertyChanging();
					this._publish = value;
					this.SendPropertyChanged("publish");
					this.OnpublishChanged();
				}
			}
		}

		[Column(Storage = "_showresults", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte showresults
		{
			get
			{
				return this._showresults;
			}
			set
			{
				if (this._showresults != value)
				{
					this.OnshowresultsChanging(value);
					this.SendPropertyChanging();
					this._showresults = value;
					this.SendPropertyChanged("showresults");
					this.OnshowresultsChanged();
				}
			}
		}

		[Column(Storage = "_display", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int display
		{
			get
			{
				return this._display;
			}
			set
			{
				if (this._display != value)
				{
					this.OndisplayChanging(value);
					this.SendPropertyChanging();
					this._display = value;
					this.SendPropertyChanged("display");
					this.OndisplayChanged();
				}
			}
		}

		[Column(Storage = "_allowupdate", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte allowupdate
		{
			get
			{
				return this._allowupdate;
			}
			set
			{
				if (this._allowupdate != value)
				{
					this.OnallowupdateChanging(value);
					this.SendPropertyChanging();
					this._allowupdate = value;
					this.SendPropertyChanged("allowupdate");
					this.OnallowupdateChanged();
				}
			}
		}

		[Column(Storage = "_showunanswered", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte showunanswered
		{
			get
			{
				return this._showunanswered;
			}
			set
			{
				if (this._showunanswered != value)
				{
					this.OnshowunansweredChanging(value);
					this.SendPropertyChanging();
					this._showunanswered = value;
					this.SendPropertyChanged("showunanswered");
					this.OnshowunansweredChanged();
				}
			}
		}

		[Column(Storage = "_limitanswers", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte limitanswers
		{
			get
			{
				return this._limitanswers;
			}
			set
			{
				if (this._limitanswers != value)
				{
					this.OnlimitanswersChanging(value);
					this.SendPropertyChanging();
					this._limitanswers = value;
					this.SendPropertyChanged("limitanswers");
					this.OnlimitanswersChanged();
				}
			}
		}

		[Column(Storage = "_timeopen", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeopen
		{
			get
			{
				return this._timeopen;
			}
			set
			{
				if (this._timeopen != value)
				{
					this.OntimeopenChanging(value);
					this.SendPropertyChanging();
					this._timeopen = value;
					this.SendPropertyChanged("timeopen");
					this.OntimeopenChanged();
				}
			}
		}

		[Column(Storage = "_timeclose", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeclose
		{
			get
			{
				return this._timeclose;
			}
			set
			{
				if (this._timeclose != value)
				{
					this.OntimecloseChanging(value);
					this.SendPropertyChanging();
					this._timeclose = value;
					this.SendPropertyChanged("timeclose");
					this.OntimecloseChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_choice_answers")]
	public partial class mdl_choice_answer : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _choiceid;

		private decimal _userid;

		private decimal _optionid;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnchoiceidChanging(decimal value);
		partial void OnchoiceidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnoptionidChanging(decimal value);
		partial void OnoptionidChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_choice_answer()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_choiceid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal choiceid
		{
			get
			{
				return this._choiceid;
			}
			set
			{
				if (this._choiceid != value)
				{
					this.OnchoiceidChanging(value);
					this.SendPropertyChanging();
					this._choiceid = value;
					this.SendPropertyChanged("choiceid");
					this.OnchoiceidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_optionid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal optionid
		{
			get
			{
				return this._optionid;
			}
			set
			{
				if (this._optionid != value)
				{
					this.OnoptionidChanging(value);
					this.SendPropertyChanging();
					this._optionid = value;
					this.SendPropertyChanged("optionid");
					this.OnoptionidChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_choice_options")]
	public partial class mdl_choice_option : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _choiceid;

		private string _text;

		private System.Nullable<decimal> _maxanswers;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnchoiceidChanging(decimal value);
		partial void OnchoiceidChanged();
		partial void OntextChanging(string value);
		partial void OntextChanged();
		partial void OnmaxanswersChanging(System.Nullable<decimal> value);
		partial void OnmaxanswersChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_choice_option()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_choiceid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal choiceid
		{
			get
			{
				return this._choiceid;
			}
			set
			{
				if (this._choiceid != value)
				{
					this.OnchoiceidChanging(value);
					this.SendPropertyChanging();
					this._choiceid = value;
					this.SendPropertyChanged("choiceid");
					this.OnchoiceidChanged();
				}
			}
		}

		[Column(Storage = "_text", DbType = "text")]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if (this._text != value)
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}

		[Column(Storage = "_maxanswers", DbType = "bigint(10)")]
		public System.Nullable<decimal> maxanswers
		{
			get
			{
				return this._maxanswers;
			}
			set
			{
				if (this._maxanswers != value)
				{
					this.OnmaxanswersChanging(value);
					this.SendPropertyChanging();
					this._maxanswers = value;
					this.SendPropertyChanged("maxanswers");
					this.OnmaxanswersChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_config")]
	public partial class mdl_config : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _name;

		private string _value;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnvalueChanging(string value);
		partial void OnvalueChanged();
		#endregion

		public mdl_config()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_value", CanBeNull = false, DbType = "text NOT NULL")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if (this._value != value)
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_config_plugins")]
	public partial class mdl_config_plugin : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _plugin;

		private string _name;

		private string _value;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnpluginChanging(string value);
		partial void OnpluginChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnvalueChanging(string value);
		partial void OnvalueChanged();
		#endregion

		public mdl_config_plugin()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_plugin", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string plugin
		{
			get
			{
				return this._plugin;
			}
			set
			{
				if (this._plugin != value)
				{
					this.OnpluginChanging(value);
					this.SendPropertyChanging();
					this._plugin = value;
					this.SendPropertyChanged("plugin");
					this.OnpluginChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_value", CanBeNull = false, DbType = "text NOT NULL")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if (this._value != value)
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_context")]
	public partial class mdl_context : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _contextlevel;

		private decimal _instanceid;

		private string _path;

		private byte _depth;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncontextlevelChanging(decimal value);
		partial void OncontextlevelChanged();
		partial void OninstanceidChanging(decimal value);
		partial void OninstanceidChanged();
		partial void OnpathChanging(string value);
		partial void OnpathChanged();
		partial void OndepthChanging(byte value);
		partial void OndepthChanged();
		#endregion

		public mdl_context()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_contextlevel", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal contextlevel
		{
			get
			{
				return this._contextlevel;
			}
			set
			{
				if (this._contextlevel != value)
				{
					this.OncontextlevelChanging(value);
					this.SendPropertyChanging();
					this._contextlevel = value;
					this.SendPropertyChanged("contextlevel");
					this.OncontextlevelChanged();
				}
			}
		}

		[Column(Storage = "_instanceid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal instanceid
		{
			get
			{
				return this._instanceid;
			}
			set
			{
				if (this._instanceid != value)
				{
					this.OninstanceidChanging(value);
					this.SendPropertyChanging();
					this._instanceid = value;
					this.SendPropertyChanged("instanceid");
					this.OninstanceidChanged();
				}
			}
		}

		[Column(Storage = "_path", DbType = "varchar(765)")]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if (this._path != value)
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}

		[Column(Storage = "_depth", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte depth
		{
			get
			{
				return this._depth;
			}
			set
			{
				if (this._depth != value)
				{
					this.OndepthChanging(value);
					this.SendPropertyChanging();
					this._depth = value;
					this.SendPropertyChanged("depth");
					this.OndepthChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_context_temp")]
	public partial class mdl_context_temp : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _path;

		private byte _depth;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnpathChanging(string value);
		partial void OnpathChanged();
		partial void OndepthChanging(byte value);
		partial void OndepthChanged();
		#endregion

		public mdl_context_temp()
		{
			OnCreated();
		}

		[Column(Storage = "_id", CanBeNull = false, DbType = "bigint(10) NOT NULL", IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_path", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if (this._path != value)
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}

		[Column(Storage = "_depth", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte depth
		{
			get
			{
				return this._depth;
			}
			set
			{
				if (this._depth != value)
				{
					this.OndepthChanging(value);
					this.SendPropertyChanging();
					this._depth = value;
					this.SendPropertyChanged("depth");
					this.OndepthChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_course")]
	public partial class mdl_course : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _category;

		private decimal _sortorder;

		private string _password;

		private string _fullname;

		private string _shortname;

		private string _idnumber;

		private string _summary;

		private string _format;

		private byte _showgrades;

		private string _modinfo;

		private int _newsitems;

		private string _teacher;

		private string _teachers;

		private string _student;

		private string _students;

		private byte _guest;

		private decimal _startdate;

		private decimal _enrolperiod;

		private int _numsections;

		private decimal _marker;

		private decimal _maxbytes;

		private int _showreports;

		private byte _visible;

		private byte _hiddensections;

		private int _groupmode;

		private int _groupmodeforce;

		private decimal _defaultgroupingid;

		private string _lang;

		private string _theme;

		private string _cost;

		private string _currency;

		private decimal _timecreated;

		private decimal _timemodified;

		private byte _metacourse;

		private byte _requested;

		private byte _restrictmodules;

		private byte _expirynotify;

		private decimal _expirythreshold;

		private byte _notifystudents;

		private byte _enrollable;

		private decimal _enrolstartdate;

		private decimal _enrolenddate;

		private string _enrol;

		private decimal _defaultrole;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncategoryChanging(decimal value);
		partial void OncategoryChanged();
		partial void OnsortorderChanging(decimal value);
		partial void OnsortorderChanged();
		partial void OnpasswordChanging(string value);
		partial void OnpasswordChanged();
		partial void OnfullnameChanging(string value);
		partial void OnfullnameChanged();
		partial void OnshortnameChanging(string value);
		partial void OnshortnameChanged();
		partial void OnidnumberChanging(string value);
		partial void OnidnumberChanged();
		partial void OnsummaryChanging(string value);
		partial void OnsummaryChanged();
		partial void OnformatChanging(string value);
		partial void OnformatChanged();
		partial void OnshowgradesChanging(byte value);
		partial void OnshowgradesChanged();
		partial void OnmodinfoChanging(string value);
		partial void OnmodinfoChanged();
		partial void OnnewsitemsChanging(int value);
		partial void OnnewsitemsChanged();
		partial void OnteacherChanging(string value);
		partial void OnteacherChanged();
		partial void OnteachersChanging(string value);
		partial void OnteachersChanged();
		partial void OnstudentChanging(string value);
		partial void OnstudentChanged();
		partial void OnstudentsChanging(string value);
		partial void OnstudentsChanged();
		partial void OnguestChanging(byte value);
		partial void OnguestChanged();
		partial void OnstartdateChanging(decimal value);
		partial void OnstartdateChanged();
		partial void OnenrolperiodChanging(decimal value);
		partial void OnenrolperiodChanged();
		partial void OnnumsectionsChanging(int value);
		partial void OnnumsectionsChanged();
		partial void OnmarkerChanging(decimal value);
		partial void OnmarkerChanged();
		partial void OnmaxbytesChanging(decimal value);
		partial void OnmaxbytesChanged();
		partial void OnshowreportsChanging(int value);
		partial void OnshowreportsChanged();
		partial void OnvisibleChanging(byte value);
		partial void OnvisibleChanged();
		partial void OnhiddensectionsChanging(byte value);
		partial void OnhiddensectionsChanged();
		partial void OngroupmodeChanging(int value);
		partial void OngroupmodeChanged();
		partial void OngroupmodeforceChanging(int value);
		partial void OngroupmodeforceChanged();
		partial void OndefaultgroupingidChanging(decimal value);
		partial void OndefaultgroupingidChanged();
		partial void OnlangChanging(string value);
		partial void OnlangChanged();
		partial void OnthemeChanging(string value);
		partial void OnthemeChanged();
		partial void OncostChanging(string value);
		partial void OncostChanged();
		partial void OncurrencyChanging(string value);
		partial void OncurrencyChanged();
		partial void OntimecreatedChanging(decimal value);
		partial void OntimecreatedChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		partial void OnmetacourseChanging(byte value);
		partial void OnmetacourseChanged();
		partial void OnrequestedChanging(byte value);
		partial void OnrequestedChanged();
		partial void OnrestrictmodulesChanging(byte value);
		partial void OnrestrictmodulesChanged();
		partial void OnexpirynotifyChanging(byte value);
		partial void OnexpirynotifyChanged();
		partial void OnexpirythresholdChanging(decimal value);
		partial void OnexpirythresholdChanged();
		partial void OnnotifystudentsChanging(byte value);
		partial void OnnotifystudentsChanged();
		partial void OnenrollableChanging(byte value);
		partial void OnenrollableChanged();
		partial void OnenrolstartdateChanging(decimal value);
		partial void OnenrolstartdateChanged();
		partial void OnenrolenddateChanging(decimal value);
		partial void OnenrolenddateChanged();
		partial void OnenrolChanging(string value);
		partial void OnenrolChanged();
		partial void OndefaultroleChanging(decimal value);
		partial void OndefaultroleChanged();
		#endregion

		public mdl_course()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_category", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal category
		{
			get
			{
				return this._category;
			}
			set
			{
				if (this._category != value)
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}

		[Column(Storage = "_sortorder", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal sortorder
		{
			get
			{
				return this._sortorder;
			}
			set
			{
				if (this._sortorder != value)
				{
					this.OnsortorderChanging(value);
					this.SendPropertyChanging();
					this._sortorder = value;
					this.SendPropertyChanged("sortorder");
					this.OnsortorderChanged();
				}
			}
		}

		[Column(Storage = "_password", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if (this._password != value)
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}

		[Column(Storage = "_fullname", CanBeNull = false, DbType = "varchar(762) NOT NULL")]
		public string fullname
		{
			get
			{
				return this._fullname;
			}
			set
			{
				if (this._fullname != value)
				{
					this.OnfullnameChanging(value);
					this.SendPropertyChanging();
					this._fullname = value;
					this.SendPropertyChanged("fullname");
					this.OnfullnameChanged();
				}
			}
		}

		[Column(Storage = "_shortname", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string shortname
		{
			get
			{
				return this._shortname;
			}
			set
			{
				if (this._shortname != value)
				{
					this.OnshortnameChanging(value);
					this.SendPropertyChanging();
					this._shortname = value;
					this.SendPropertyChanged("shortname");
					this.OnshortnameChanged();
				}
			}
		}

		[Column(Storage = "_idnumber", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string idnumber
		{
			get
			{
				return this._idnumber;
			}
			set
			{
				if (this._idnumber != value)
				{
					this.OnidnumberChanging(value);
					this.SendPropertyChanging();
					this._idnumber = value;
					this.SendPropertyChanged("idnumber");
					this.OnidnumberChanged();
				}
			}
		}

		[Column(Storage = "_summary", DbType = "text")]
		public string summary
		{
			get
			{
				return this._summary;
			}
			set
			{
				if (this._summary != value)
				{
					this.OnsummaryChanging(value);
					this.SendPropertyChanging();
					this._summary = value;
					this.SendPropertyChanged("summary");
					this.OnsummaryChanged();
				}
			}
		}

		[Column(Storage = "_format", CanBeNull = false, DbType = "varchar(30) NOT NULL")]
		public string format
		{
			get
			{
				return this._format;
			}
			set
			{
				if (this._format != value)
				{
					this.OnformatChanging(value);
					this.SendPropertyChanging();
					this._format = value;
					this.SendPropertyChanged("format");
					this.OnformatChanged();
				}
			}
		}

		[Column(Storage = "_showgrades", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte showgrades
		{
			get
			{
				return this._showgrades;
			}
			set
			{
				if (this._showgrades != value)
				{
					this.OnshowgradesChanging(value);
					this.SendPropertyChanging();
					this._showgrades = value;
					this.SendPropertyChanged("showgrades");
					this.OnshowgradesChanged();
				}
			}
		}

		[Column(Storage = "_modinfo", DbType = "longtext")]
		public string modinfo
		{
			get
			{
				return this._modinfo;
			}
			set
			{
				if (this._modinfo != value)
				{
					this.OnmodinfoChanging(value);
					this.SendPropertyChanging();
					this._modinfo = value;
					this.SendPropertyChanged("modinfo");
					this.OnmodinfoChanged();
				}
			}
		}

		[Column(Storage = "_newsitems", CanBeNull = false, DbType = "mediumint(5) NOT NULL")]
		public int newsitems
		{
			get
			{
				return this._newsitems;
			}
			set
			{
				if (this._newsitems != value)
				{
					this.OnnewsitemsChanging(value);
					this.SendPropertyChanging();
					this._newsitems = value;
					this.SendPropertyChanged("newsitems");
					this.OnnewsitemsChanged();
				}
			}
		}

		[Column(Storage = "_teacher", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string teacher
		{
			get
			{
				return this._teacher;
			}
			set
			{
				if (this._teacher != value)
				{
					this.OnteacherChanging(value);
					this.SendPropertyChanging();
					this._teacher = value;
					this.SendPropertyChanged("teacher");
					this.OnteacherChanged();
				}
			}
		}

		[Column(Storage = "_teachers", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string teachers
		{
			get
			{
				return this._teachers;
			}
			set
			{
				if (this._teachers != value)
				{
					this.OnteachersChanging(value);
					this.SendPropertyChanging();
					this._teachers = value;
					this.SendPropertyChanged("teachers");
					this.OnteachersChanged();
				}
			}
		}

		[Column(Storage = "_student", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string student
		{
			get
			{
				return this._student;
			}
			set
			{
				if (this._student != value)
				{
					this.OnstudentChanging(value);
					this.SendPropertyChanging();
					this._student = value;
					this.SendPropertyChanged("student");
					this.OnstudentChanged();
				}
			}
		}

		[Column(Storage = "_students", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string students
		{
			get
			{
				return this._students;
			}
			set
			{
				if (this._students != value)
				{
					this.OnstudentsChanging(value);
					this.SendPropertyChanging();
					this._students = value;
					this.SendPropertyChanged("students");
					this.OnstudentsChanged();
				}
			}
		}

		[Column(Storage = "_guest", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte guest
		{
			get
			{
				return this._guest;
			}
			set
			{
				if (this._guest != value)
				{
					this.OnguestChanging(value);
					this.SendPropertyChanging();
					this._guest = value;
					this.SendPropertyChanged("guest");
					this.OnguestChanged();
				}
			}
		}

		[Column(Storage = "_startdate", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal startdate
		{
			get
			{
				return this._startdate;
			}
			set
			{
				if (this._startdate != value)
				{
					this.OnstartdateChanging(value);
					this.SendPropertyChanging();
					this._startdate = value;
					this.SendPropertyChanged("startdate");
					this.OnstartdateChanged();
				}
			}
		}

		[Column(Storage = "_enrolperiod", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal enrolperiod
		{
			get
			{
				return this._enrolperiod;
			}
			set
			{
				if (this._enrolperiod != value)
				{
					this.OnenrolperiodChanging(value);
					this.SendPropertyChanging();
					this._enrolperiod = value;
					this.SendPropertyChanged("enrolperiod");
					this.OnenrolperiodChanged();
				}
			}
		}

		[Column(Storage = "_numsections", CanBeNull = false, DbType = "mediumint(5) NOT NULL")]
		public int numsections
		{
			get
			{
				return this._numsections;
			}
			set
			{
				if (this._numsections != value)
				{
					this.OnnumsectionsChanging(value);
					this.SendPropertyChanging();
					this._numsections = value;
					this.SendPropertyChanged("numsections");
					this.OnnumsectionsChanged();
				}
			}
		}

		[Column(Storage = "_marker", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal marker
		{
			get
			{
				return this._marker;
			}
			set
			{
				if (this._marker != value)
				{
					this.OnmarkerChanging(value);
					this.SendPropertyChanging();
					this._marker = value;
					this.SendPropertyChanged("marker");
					this.OnmarkerChanged();
				}
			}
		}

		[Column(Storage = "_maxbytes", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal maxbytes
		{
			get
			{
				return this._maxbytes;
			}
			set
			{
				if (this._maxbytes != value)
				{
					this.OnmaxbytesChanging(value);
					this.SendPropertyChanging();
					this._maxbytes = value;
					this.SendPropertyChanged("maxbytes");
					this.OnmaxbytesChanged();
				}
			}
		}

		[Column(Storage = "_showreports", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int showreports
		{
			get
			{
				return this._showreports;
			}
			set
			{
				if (this._showreports != value)
				{
					this.OnshowreportsChanging(value);
					this.SendPropertyChanging();
					this._showreports = value;
					this.SendPropertyChanged("showreports");
					this.OnshowreportsChanged();
				}
			}
		}

		[Column(Storage = "_visible", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte visible
		{
			get
			{
				return this._visible;
			}
			set
			{
				if (this._visible != value)
				{
					this.OnvisibleChanging(value);
					this.SendPropertyChanging();
					this._visible = value;
					this.SendPropertyChanged("visible");
					this.OnvisibleChanged();
				}
			}
		}

		[Column(Storage = "_hiddensections", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte hiddensections
		{
			get
			{
				return this._hiddensections;
			}
			set
			{
				if (this._hiddensections != value)
				{
					this.OnhiddensectionsChanging(value);
					this.SendPropertyChanging();
					this._hiddensections = value;
					this.SendPropertyChanged("hiddensections");
					this.OnhiddensectionsChanged();
				}
			}
		}

		[Column(Storage = "_groupmode", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int groupmode
		{
			get
			{
				return this._groupmode;
			}
			set
			{
				if (this._groupmode != value)
				{
					this.OngroupmodeChanging(value);
					this.SendPropertyChanging();
					this._groupmode = value;
					this.SendPropertyChanged("groupmode");
					this.OngroupmodeChanged();
				}
			}
		}

		[Column(Storage = "_groupmodeforce", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int groupmodeforce
		{
			get
			{
				return this._groupmodeforce;
			}
			set
			{
				if (this._groupmodeforce != value)
				{
					this.OngroupmodeforceChanging(value);
					this.SendPropertyChanging();
					this._groupmodeforce = value;
					this.SendPropertyChanged("groupmodeforce");
					this.OngroupmodeforceChanged();
				}
			}
		}

		[Column(Storage = "_defaultgroupingid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal defaultgroupingid
		{
			get
			{
				return this._defaultgroupingid;
			}
			set
			{
				if (this._defaultgroupingid != value)
				{
					this.OndefaultgroupingidChanging(value);
					this.SendPropertyChanging();
					this._defaultgroupingid = value;
					this.SendPropertyChanged("defaultgroupingid");
					this.OndefaultgroupingidChanged();
				}
			}
		}

		[Column(Storage = "_lang", CanBeNull = false, DbType = "varchar(90) NOT NULL")]
		public string lang
		{
			get
			{
				return this._lang;
			}
			set
			{
				if (this._lang != value)
				{
					this.OnlangChanging(value);
					this.SendPropertyChanging();
					this._lang = value;
					this.SendPropertyChanged("lang");
					this.OnlangChanged();
				}
			}
		}

		[Column(Storage = "_theme", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string theme
		{
			get
			{
				return this._theme;
			}
			set
			{
				if (this._theme != value)
				{
					this.OnthemeChanging(value);
					this.SendPropertyChanging();
					this._theme = value;
					this.SendPropertyChanged("theme");
					this.OnthemeChanged();
				}
			}
		}

		[Column(Storage = "_cost", CanBeNull = false, DbType = "varchar(30) NOT NULL")]
		public string cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if (this._cost != value)
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}

		[Column(Storage = "_currency", CanBeNull = false, DbType = "varchar(9) NOT NULL")]
		public string currency
		{
			get
			{
				return this._currency;
			}
			set
			{
				if (this._currency != value)
				{
					this.OncurrencyChanging(value);
					this.SendPropertyChanging();
					this._currency = value;
					this.SendPropertyChanged("currency");
					this.OncurrencyChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_metacourse", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte metacourse
		{
			get
			{
				return this._metacourse;
			}
			set
			{
				if (this._metacourse != value)
				{
					this.OnmetacourseChanging(value);
					this.SendPropertyChanging();
					this._metacourse = value;
					this.SendPropertyChanged("metacourse");
					this.OnmetacourseChanged();
				}
			}
		}

		[Column(Storage = "_requested", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte requested
		{
			get
			{
				return this._requested;
			}
			set
			{
				if (this._requested != value)
				{
					this.OnrequestedChanging(value);
					this.SendPropertyChanging();
					this._requested = value;
					this.SendPropertyChanged("requested");
					this.OnrequestedChanged();
				}
			}
		}

		[Column(Storage = "_restrictmodules", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte restrictmodules
		{
			get
			{
				return this._restrictmodules;
			}
			set
			{
				if (this._restrictmodules != value)
				{
					this.OnrestrictmodulesChanging(value);
					this.SendPropertyChanging();
					this._restrictmodules = value;
					this.SendPropertyChanged("restrictmodules");
					this.OnrestrictmodulesChanged();
				}
			}
		}

		[Column(Storage = "_expirynotify", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte expirynotify
		{
			get
			{
				return this._expirynotify;
			}
			set
			{
				if (this._expirynotify != value)
				{
					this.OnexpirynotifyChanging(value);
					this.SendPropertyChanging();
					this._expirynotify = value;
					this.SendPropertyChanged("expirynotify");
					this.OnexpirynotifyChanged();
				}
			}
		}

		[Column(Storage = "_expirythreshold", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal expirythreshold
		{
			get
			{
				return this._expirythreshold;
			}
			set
			{
				if (this._expirythreshold != value)
				{
					this.OnexpirythresholdChanging(value);
					this.SendPropertyChanging();
					this._expirythreshold = value;
					this.SendPropertyChanged("expirythreshold");
					this.OnexpirythresholdChanged();
				}
			}
		}

		[Column(Storage = "_notifystudents", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte notifystudents
		{
			get
			{
				return this._notifystudents;
			}
			set
			{
				if (this._notifystudents != value)
				{
					this.OnnotifystudentsChanging(value);
					this.SendPropertyChanging();
					this._notifystudents = value;
					this.SendPropertyChanged("notifystudents");
					this.OnnotifystudentsChanged();
				}
			}
		}

		[Column(Storage = "_enrollable", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte enrollable
		{
			get
			{
				return this._enrollable;
			}
			set
			{
				if (this._enrollable != value)
				{
					this.OnenrollableChanging(value);
					this.SendPropertyChanging();
					this._enrollable = value;
					this.SendPropertyChanged("enrollable");
					this.OnenrollableChanged();
				}
			}
		}

		[Column(Storage = "_enrolstartdate", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal enrolstartdate
		{
			get
			{
				return this._enrolstartdate;
			}
			set
			{
				if (this._enrolstartdate != value)
				{
					this.OnenrolstartdateChanging(value);
					this.SendPropertyChanging();
					this._enrolstartdate = value;
					this.SendPropertyChanged("enrolstartdate");
					this.OnenrolstartdateChanged();
				}
			}
		}

		[Column(Storage = "_enrolenddate", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal enrolenddate
		{
			get
			{
				return this._enrolenddate;
			}
			set
			{
				if (this._enrolenddate != value)
				{
					this.OnenrolenddateChanging(value);
					this.SendPropertyChanging();
					this._enrolenddate = value;
					this.SendPropertyChanged("enrolenddate");
					this.OnenrolenddateChanged();
				}
			}
		}

		[Column(Storage = "_enrol", CanBeNull = false, DbType = "varchar(60) NOT NULL")]
		public string enrol
		{
			get
			{
				return this._enrol;
			}
			set
			{
				if (this._enrol != value)
				{
					this.OnenrolChanging(value);
					this.SendPropertyChanging();
					this._enrol = value;
					this.SendPropertyChanged("enrol");
					this.OnenrolChanged();
				}
			}
		}

		[Column(Storage = "_defaultrole", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal defaultrole
		{
			get
			{
				return this._defaultrole;
			}
			set
			{
				if (this._defaultrole != value)
				{
					this.OndefaultroleChanging(value);
					this.SendPropertyChanging();
					this._defaultrole = value;
					this.SendPropertyChanged("defaultrole");
					this.OndefaultroleChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_course_allowed_modules")]
	public partial class mdl_course_allowed_module : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private decimal _module;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnmoduleChanging(decimal value);
		partial void OnmoduleChanged();
		#endregion

		public mdl_course_allowed_module()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_module", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal module
		{
			get
			{
				return this._module;
			}
			set
			{
				if (this._module != value)
				{
					this.OnmoduleChanging(value);
					this.SendPropertyChanging();
					this._module = value;
					this.SendPropertyChanged("module");
					this.OnmoduleChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_course_categories")]
	public partial class mdl_course_category : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _name;

		private string _description;

		private decimal _parent;

		private decimal _sortorder;

		private decimal _coursecount;

		private short _visible;

		private decimal _timemodified;

		private decimal _depth;

		private string _path;

		private string _theme;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OndescriptionChanging(string value);
		partial void OndescriptionChanged();
		partial void OnparentChanging(decimal value);
		partial void OnparentChanged();
		partial void OnsortorderChanging(decimal value);
		partial void OnsortorderChanged();
		partial void OncoursecountChanging(decimal value);
		partial void OncoursecountChanged();
		partial void OnvisibleChanging(short value);
		partial void OnvisibleChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		partial void OndepthChanging(decimal value);
		partial void OndepthChanged();
		partial void OnpathChanging(string value);
		partial void OnpathChanged();
		partial void OnthemeChanging(string value);
		partial void OnthemeChanged();
		#endregion

		public mdl_course_category()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_description", DbType = "text")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if (this._description != value)
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}

		[Column(Storage = "_parent", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if (this._parent != value)
				{
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}

		[Column(Storage = "_sortorder", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal sortorder
		{
			get
			{
				return this._sortorder;
			}
			set
			{
				if (this._sortorder != value)
				{
					this.OnsortorderChanging(value);
					this.SendPropertyChanging();
					this._sortorder = value;
					this.SendPropertyChanged("sortorder");
					this.OnsortorderChanged();
				}
			}
		}

		[Column(Storage = "_coursecount", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal coursecount
		{
			get
			{
				return this._coursecount;
			}
			set
			{
				if (this._coursecount != value)
				{
					this.OncoursecountChanging(value);
					this.SendPropertyChanging();
					this._coursecount = value;
					this.SendPropertyChanged("coursecount");
					this.OncoursecountChanged();
				}
			}
		}

		[Column(Storage = "_visible", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short visible
		{
			get
			{
				return this._visible;
			}
			set
			{
				if (this._visible != value)
				{
					this.OnvisibleChanging(value);
					this.SendPropertyChanging();
					this._visible = value;
					this.SendPropertyChanged("visible");
					this.OnvisibleChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_depth", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal depth
		{
			get
			{
				return this._depth;
			}
			set
			{
				if (this._depth != value)
				{
					this.OndepthChanging(value);
					this.SendPropertyChanging();
					this._depth = value;
					this.SendPropertyChanged("depth");
					this.OndepthChanged();
				}
			}
		}

		[Column(Storage = "_path", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if (this._path != value)
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}

		[Column(Storage = "_theme", DbType = "varchar(150)")]
		public string theme
		{
			get
			{
				return this._theme;
			}
			set
			{
				if (this._theme != value)
				{
					this.OnthemeChanging(value);
					this.SendPropertyChanging();
					this._theme = value;
					this.SendPropertyChanged("theme");
					this.OnthemeChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_course_display")]
	public partial class mdl_course_display : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private decimal _userid;

		private long _display;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OndisplayChanging(long value);
		partial void OndisplayChanged();
		#endregion

		public mdl_course_display()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_display", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long display
		{
			get
			{
				return this._display;
			}
			set
			{
				if (this._display != value)
				{
					this.OndisplayChanging(value);
					this.SendPropertyChanging();
					this._display = value;
					this.SendPropertyChanged("display");
					this.OndisplayChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_course_meta")]
	public partial class mdl_course_meta : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _parent_course;

		private decimal _child_course;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void Onparent_courseChanging(decimal value);
		partial void Onparent_courseChanged();
		partial void Onchild_courseChanging(decimal value);
		partial void Onchild_courseChanged();
		#endregion

		public mdl_course_meta()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_parent_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal parent_course
		{
			get
			{
				return this._parent_course;
			}
			set
			{
				if (this._parent_course != value)
				{
					this.Onparent_courseChanging(value);
					this.SendPropertyChanging();
					this._parent_course = value;
					this.SendPropertyChanged("parent_course");
					this.Onparent_courseChanged();
				}
			}
		}

		[Column(Storage = "_child_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal child_course
		{
			get
			{
				return this._child_course;
			}
			set
			{
				if (this._child_course != value)
				{
					this.Onchild_courseChanging(value);
					this.SendPropertyChanging();
					this._child_course = value;
					this.SendPropertyChanged("child_course");
					this.Onchild_courseChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_course_modules")]
	public partial class mdl_course_module : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private decimal _module;

		private decimal _instance;

		private decimal _section;

		private string _idnumber;

		private decimal _added;

		private short _score;

		private int _indent;

		private short _visible;

		private short _visibleold;

		private short _groupmode;

		private decimal _groupingid;

		private int _groupmembersonly;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnmoduleChanging(decimal value);
		partial void OnmoduleChanged();
		partial void OninstanceChanging(decimal value);
		partial void OninstanceChanged();
		partial void OnsectionChanging(decimal value);
		partial void OnsectionChanged();
		partial void OnidnumberChanging(string value);
		partial void OnidnumberChanged();
		partial void OnaddedChanging(decimal value);
		partial void OnaddedChanged();
		partial void OnscoreChanging(short value);
		partial void OnscoreChanged();
		partial void OnindentChanging(int value);
		partial void OnindentChanged();
		partial void OnvisibleChanging(short value);
		partial void OnvisibleChanged();
		partial void OnvisibleoldChanging(short value);
		partial void OnvisibleoldChanged();
		partial void OngroupmodeChanging(short value);
		partial void OngroupmodeChanged();
		partial void OngroupingidChanging(decimal value);
		partial void OngroupingidChanged();
		partial void OngroupmembersonlyChanging(int value);
		partial void OngroupmembersonlyChanged();
		#endregion

		public mdl_course_module()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_module", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal module
		{
			get
			{
				return this._module;
			}
			set
			{
				if (this._module != value)
				{
					this.OnmoduleChanging(value);
					this.SendPropertyChanging();
					this._module = value;
					this.SendPropertyChanged("module");
					this.OnmoduleChanged();
				}
			}
		}

		[Column(Storage = "_instance", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal instance
		{
			get
			{
				return this._instance;
			}
			set
			{
				if (this._instance != value)
				{
					this.OninstanceChanging(value);
					this.SendPropertyChanging();
					this._instance = value;
					this.SendPropertyChanged("instance");
					this.OninstanceChanged();
				}
			}
		}

		[Column(Storage = "_section", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal section
		{
			get
			{
				return this._section;
			}
			set
			{
				if (this._section != value)
				{
					this.OnsectionChanging(value);
					this.SendPropertyChanging();
					this._section = value;
					this.SendPropertyChanged("section");
					this.OnsectionChanged();
				}
			}
		}

		[Column(Storage = "_idnumber", DbType = "varchar(300)")]
		public string idnumber
		{
			get
			{
				return this._idnumber;
			}
			set
			{
				if (this._idnumber != value)
				{
					this.OnidnumberChanging(value);
					this.SendPropertyChanging();
					this._idnumber = value;
					this.SendPropertyChanged("idnumber");
					this.OnidnumberChanged();
				}
			}
		}

		[Column(Storage = "_added", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal added
		{
			get
			{
				return this._added;
			}
			set
			{
				if (this._added != value)
				{
					this.OnaddedChanging(value);
					this.SendPropertyChanging();
					this._added = value;
					this.SendPropertyChanged("added");
					this.OnaddedChanged();
				}
			}
		}

		[Column(Storage = "_score", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public short score
		{
			get
			{
				return this._score;
			}
			set
			{
				if (this._score != value)
				{
					this.OnscoreChanging(value);
					this.SendPropertyChanging();
					this._score = value;
					this.SendPropertyChanged("score");
					this.OnscoreChanged();
				}
			}
		}

		[Column(Storage = "_indent", CanBeNull = false, DbType = "mediumint(5) NOT NULL")]
		public int indent
		{
			get
			{
				return this._indent;
			}
			set
			{
				if (this._indent != value)
				{
					this.OnindentChanging(value);
					this.SendPropertyChanging();
					this._indent = value;
					this.SendPropertyChanged("indent");
					this.OnindentChanged();
				}
			}
		}

		[Column(Storage = "_visible", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short visible
		{
			get
			{
				return this._visible;
			}
			set
			{
				if (this._visible != value)
				{
					this.OnvisibleChanging(value);
					this.SendPropertyChanging();
					this._visible = value;
					this.SendPropertyChanged("visible");
					this.OnvisibleChanged();
				}
			}
		}

		[Column(Storage = "_visibleold", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short visibleold
		{
			get
			{
				return this._visibleold;
			}
			set
			{
				if (this._visibleold != value)
				{
					this.OnvisibleoldChanging(value);
					this.SendPropertyChanging();
					this._visibleold = value;
					this.SendPropertyChanged("visibleold");
					this.OnvisibleoldChanged();
				}
			}
		}

		[Column(Storage = "_groupmode", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public short groupmode
		{
			get
			{
				return this._groupmode;
			}
			set
			{
				if (this._groupmode != value)
				{
					this.OngroupmodeChanging(value);
					this.SendPropertyChanging();
					this._groupmode = value;
					this.SendPropertyChanged("groupmode");
					this.OngroupmodeChanged();
				}
			}
		}

		[Column(Storage = "_groupingid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal groupingid
		{
			get
			{
				return this._groupingid;
			}
			set
			{
				if (this._groupingid != value)
				{
					this.OngroupingidChanging(value);
					this.SendPropertyChanging();
					this._groupingid = value;
					this.SendPropertyChanged("groupingid");
					this.OngroupingidChanged();
				}
			}
		}

		[Column(Storage = "_groupmembersonly", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int groupmembersonly
		{
			get
			{
				return this._groupmembersonly;
			}
			set
			{
				if (this._groupmembersonly != value)
				{
					this.OngroupmembersonlyChanging(value);
					this.SendPropertyChanging();
					this._groupmembersonly = value;
					this.SendPropertyChanged("groupmembersonly");
					this.OngroupmembersonlyChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_course_request")]
	public partial class mdl_course_request : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _fullname;

		private string _shortname;

		private string _summary;

		private string _reason;

		private decimal _requester;

		private string _password;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnfullnameChanging(string value);
		partial void OnfullnameChanged();
		partial void OnshortnameChanging(string value);
		partial void OnshortnameChanged();
		partial void OnsummaryChanging(string value);
		partial void OnsummaryChanged();
		partial void OnreasonChanging(string value);
		partial void OnreasonChanged();
		partial void OnrequesterChanging(decimal value);
		partial void OnrequesterChanged();
		partial void OnpasswordChanging(string value);
		partial void OnpasswordChanged();
		#endregion

		public mdl_course_request()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_fullname", CanBeNull = false, DbType = "varchar(762) NOT NULL")]
		public string fullname
		{
			get
			{
				return this._fullname;
			}
			set
			{
				if (this._fullname != value)
				{
					this.OnfullnameChanging(value);
					this.SendPropertyChanging();
					this._fullname = value;
					this.SendPropertyChanged("fullname");
					this.OnfullnameChanged();
				}
			}
		}

		[Column(Storage = "_shortname", CanBeNull = false, DbType = "varchar(45) NOT NULL")]
		public string shortname
		{
			get
			{
				return this._shortname;
			}
			set
			{
				if (this._shortname != value)
				{
					this.OnshortnameChanging(value);
					this.SendPropertyChanging();
					this._shortname = value;
					this.SendPropertyChanged("shortname");
					this.OnshortnameChanged();
				}
			}
		}

		[Column(Storage = "_summary", CanBeNull = false, DbType = "text NOT NULL")]
		public string summary
		{
			get
			{
				return this._summary;
			}
			set
			{
				if (this._summary != value)
				{
					this.OnsummaryChanging(value);
					this.SendPropertyChanging();
					this._summary = value;
					this.SendPropertyChanged("summary");
					this.OnsummaryChanged();
				}
			}
		}

		[Column(Storage = "_reason", CanBeNull = false, DbType = "text NOT NULL")]
		public string reason
		{
			get
			{
				return this._reason;
			}
			set
			{
				if (this._reason != value)
				{
					this.OnreasonChanging(value);
					this.SendPropertyChanging();
					this._reason = value;
					this.SendPropertyChanged("reason");
					this.OnreasonChanged();
				}
			}
		}

		[Column(Storage = "_requester", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal requester
		{
			get
			{
				return this._requester;
			}
			set
			{
				if (this._requester != value)
				{
					this.OnrequesterChanging(value);
					this.SendPropertyChanging();
					this._requester = value;
					this.SendPropertyChanged("requester");
					this.OnrequesterChanged();
				}
			}
		}

		[Column(Storage = "_password", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if (this._password != value)
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_course_sections")]
	public partial class mdl_course_section : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private decimal _section;

		private string _summary;

		private string _sequence;

		private short _visible;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnsectionChanging(decimal value);
		partial void OnsectionChanged();
		partial void OnsummaryChanging(string value);
		partial void OnsummaryChanged();
		partial void OnsequenceChanging(string value);
		partial void OnsequenceChanged();
		partial void OnvisibleChanging(short value);
		partial void OnvisibleChanged();
		#endregion

		public mdl_course_section()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_section", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal section
		{
			get
			{
				return this._section;
			}
			set
			{
				if (this._section != value)
				{
					this.OnsectionChanging(value);
					this.SendPropertyChanging();
					this._section = value;
					this.SendPropertyChanged("section");
					this.OnsectionChanged();
				}
			}
		}

		[Column(Storage = "_summary", DbType = "text")]
		public string summary
		{
			get
			{
				return this._summary;
			}
			set
			{
				if (this._summary != value)
				{
					this.OnsummaryChanging(value);
					this.SendPropertyChanging();
					this._summary = value;
					this.SendPropertyChanged("summary");
					this.OnsummaryChanged();
				}
			}
		}

		[Column(Storage = "_sequence", DbType = "text")]
		public string sequence
		{
			get
			{
				return this._sequence;
			}
			set
			{
				if (this._sequence != value)
				{
					this.OnsequenceChanging(value);
					this.SendPropertyChanging();
					this._sequence = value;
					this.SendPropertyChanged("sequence");
					this.OnsequenceChanged();
				}
			}
		}

		[Column(Storage = "_visible", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short visible
		{
			get
			{
				return this._visible;
			}
			set
			{
				if (this._visible != value)
				{
					this.OnvisibleChanging(value);
					this.SendPropertyChanging();
					this._visible = value;
					this.SendPropertyChanged("visible");
					this.OnvisibleChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_data")]
	public partial class mdl_data : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private string _name;

		private string _intro;

		private int _comments;

		private decimal _timeavailablefrom;

		private decimal _timeavailableto;

		private decimal _timeviewfrom;

		private decimal _timeviewto;

		private long _requiredentries;

		private long _requiredentriestoview;

		private long _maxentries;

		private int _rssarticles;

		private string _singletemplate;

		private string _listtemplate;

		private string _listtemplateheader;

		private string _listtemplatefooter;

		private string _addtemplate;

		private string _rsstemplate;

		private string _rsstitletemplate;

		private string _csstemplate;

		private string _jstemplate;

		private string _asearchtemplate;

		private int _approval;

		private long _scale;

		private decimal _assessed;

		private decimal _defaultsort;

		private int _defaultsortdir;

		private int _editany;

		private System.Nullable<long> _notification;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnintroChanging(string value);
		partial void OnintroChanged();
		partial void OncommentsChanging(int value);
		partial void OncommentsChanged();
		partial void OntimeavailablefromChanging(decimal value);
		partial void OntimeavailablefromChanged();
		partial void OntimeavailabletoChanging(decimal value);
		partial void OntimeavailabletoChanged();
		partial void OntimeviewfromChanging(decimal value);
		partial void OntimeviewfromChanged();
		partial void OntimeviewtoChanging(decimal value);
		partial void OntimeviewtoChanged();
		partial void OnrequiredentriesChanging(long value);
		partial void OnrequiredentriesChanged();
		partial void OnrequiredentriestoviewChanging(long value);
		partial void OnrequiredentriestoviewChanged();
		partial void OnmaxentriesChanging(long value);
		partial void OnmaxentriesChanged();
		partial void OnrssarticlesChanging(int value);
		partial void OnrssarticlesChanged();
		partial void OnsingletemplateChanging(string value);
		partial void OnsingletemplateChanged();
		partial void OnlisttemplateChanging(string value);
		partial void OnlisttemplateChanged();
		partial void OnlisttemplateheaderChanging(string value);
		partial void OnlisttemplateheaderChanged();
		partial void OnlisttemplatefooterChanging(string value);
		partial void OnlisttemplatefooterChanged();
		partial void OnaddtemplateChanging(string value);
		partial void OnaddtemplateChanged();
		partial void OnrsstemplateChanging(string value);
		partial void OnrsstemplateChanged();
		partial void OnrsstitletemplateChanging(string value);
		partial void OnrsstitletemplateChanged();
		partial void OncsstemplateChanging(string value);
		partial void OncsstemplateChanged();
		partial void OnjstemplateChanging(string value);
		partial void OnjstemplateChanged();
		partial void OnasearchtemplateChanging(string value);
		partial void OnasearchtemplateChanged();
		partial void OnapprovalChanging(int value);
		partial void OnapprovalChanged();
		partial void OnscaleChanging(long value);
		partial void OnscaleChanged();
		partial void OnassessedChanging(decimal value);
		partial void OnassessedChanged();
		partial void OndefaultsortChanging(decimal value);
		partial void OndefaultsortChanged();
		partial void OndefaultsortdirChanging(int value);
		partial void OndefaultsortdirChanged();
		partial void OneditanyChanging(int value);
		partial void OneditanyChanged();
		partial void OnnotificationChanging(System.Nullable<long> value);
		partial void OnnotificationChanged();
		#endregion

		public mdl_data()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_intro", CanBeNull = false, DbType = "text NOT NULL")]
		public string intro
		{
			get
			{
				return this._intro;
			}
			set
			{
				if (this._intro != value)
				{
					this.OnintroChanging(value);
					this.SendPropertyChanging();
					this._intro = value;
					this.SendPropertyChanged("intro");
					this.OnintroChanged();
				}
			}
		}

		[Column(Storage = "_comments", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if (this._comments != value)
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}

		[Column(Storage = "_timeavailablefrom", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeavailablefrom
		{
			get
			{
				return this._timeavailablefrom;
			}
			set
			{
				if (this._timeavailablefrom != value)
				{
					this.OntimeavailablefromChanging(value);
					this.SendPropertyChanging();
					this._timeavailablefrom = value;
					this.SendPropertyChanged("timeavailablefrom");
					this.OntimeavailablefromChanged();
				}
			}
		}

		[Column(Storage = "_timeavailableto", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeavailableto
		{
			get
			{
				return this._timeavailableto;
			}
			set
			{
				if (this._timeavailableto != value)
				{
					this.OntimeavailabletoChanging(value);
					this.SendPropertyChanging();
					this._timeavailableto = value;
					this.SendPropertyChanged("timeavailableto");
					this.OntimeavailabletoChanged();
				}
			}
		}

		[Column(Storage = "_timeviewfrom", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeviewfrom
		{
			get
			{
				return this._timeviewfrom;
			}
			set
			{
				if (this._timeviewfrom != value)
				{
					this.OntimeviewfromChanging(value);
					this.SendPropertyChanging();
					this._timeviewfrom = value;
					this.SendPropertyChanged("timeviewfrom");
					this.OntimeviewfromChanged();
				}
			}
		}

		[Column(Storage = "_timeviewto", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeviewto
		{
			get
			{
				return this._timeviewto;
			}
			set
			{
				if (this._timeviewto != value)
				{
					this.OntimeviewtoChanging(value);
					this.SendPropertyChanging();
					this._timeviewto = value;
					this.SendPropertyChanged("timeviewto");
					this.OntimeviewtoChanged();
				}
			}
		}

		[Column(Storage = "_requiredentries", CanBeNull = false, DbType = "int(8) NOT NULL")]
		public long requiredentries
		{
			get
			{
				return this._requiredentries;
			}
			set
			{
				if (this._requiredentries != value)
				{
					this.OnrequiredentriesChanging(value);
					this.SendPropertyChanging();
					this._requiredentries = value;
					this.SendPropertyChanged("requiredentries");
					this.OnrequiredentriesChanged();
				}
			}
		}

		[Column(Storage = "_requiredentriestoview", CanBeNull = false, DbType = "int(8) NOT NULL")]
		public long requiredentriestoview
		{
			get
			{
				return this._requiredentriestoview;
			}
			set
			{
				if (this._requiredentriestoview != value)
				{
					this.OnrequiredentriestoviewChanging(value);
					this.SendPropertyChanging();
					this._requiredentriestoview = value;
					this.SendPropertyChanged("requiredentriestoview");
					this.OnrequiredentriestoviewChanged();
				}
			}
		}

		[Column(Storage = "_maxentries", CanBeNull = false, DbType = "int(8) NOT NULL")]
		public long maxentries
		{
			get
			{
				return this._maxentries;
			}
			set
			{
				if (this._maxentries != value)
				{
					this.OnmaxentriesChanging(value);
					this.SendPropertyChanging();
					this._maxentries = value;
					this.SendPropertyChanged("maxentries");
					this.OnmaxentriesChanged();
				}
			}
		}

		[Column(Storage = "_rssarticles", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int rssarticles
		{
			get
			{
				return this._rssarticles;
			}
			set
			{
				if (this._rssarticles != value)
				{
					this.OnrssarticlesChanging(value);
					this.SendPropertyChanging();
					this._rssarticles = value;
					this.SendPropertyChanged("rssarticles");
					this.OnrssarticlesChanged();
				}
			}
		}

		[Column(Storage = "_singletemplate", DbType = "text")]
		public string singletemplate
		{
			get
			{
				return this._singletemplate;
			}
			set
			{
				if (this._singletemplate != value)
				{
					this.OnsingletemplateChanging(value);
					this.SendPropertyChanging();
					this._singletemplate = value;
					this.SendPropertyChanged("singletemplate");
					this.OnsingletemplateChanged();
				}
			}
		}

		[Column(Storage = "_listtemplate", DbType = "text")]
		public string listtemplate
		{
			get
			{
				return this._listtemplate;
			}
			set
			{
				if (this._listtemplate != value)
				{
					this.OnlisttemplateChanging(value);
					this.SendPropertyChanging();
					this._listtemplate = value;
					this.SendPropertyChanged("listtemplate");
					this.OnlisttemplateChanged();
				}
			}
		}

		[Column(Storage = "_listtemplateheader", DbType = "text")]
		public string listtemplateheader
		{
			get
			{
				return this._listtemplateheader;
			}
			set
			{
				if (this._listtemplateheader != value)
				{
					this.OnlisttemplateheaderChanging(value);
					this.SendPropertyChanging();
					this._listtemplateheader = value;
					this.SendPropertyChanged("listtemplateheader");
					this.OnlisttemplateheaderChanged();
				}
			}
		}

		[Column(Storage = "_listtemplatefooter", DbType = "text")]
		public string listtemplatefooter
		{
			get
			{
				return this._listtemplatefooter;
			}
			set
			{
				if (this._listtemplatefooter != value)
				{
					this.OnlisttemplatefooterChanging(value);
					this.SendPropertyChanging();
					this._listtemplatefooter = value;
					this.SendPropertyChanged("listtemplatefooter");
					this.OnlisttemplatefooterChanged();
				}
			}
		}

		[Column(Storage = "_addtemplate", DbType = "text")]
		public string addtemplate
		{
			get
			{
				return this._addtemplate;
			}
			set
			{
				if (this._addtemplate != value)
				{
					this.OnaddtemplateChanging(value);
					this.SendPropertyChanging();
					this._addtemplate = value;
					this.SendPropertyChanged("addtemplate");
					this.OnaddtemplateChanged();
				}
			}
		}

		[Column(Storage = "_rsstemplate", DbType = "text")]
		public string rsstemplate
		{
			get
			{
				return this._rsstemplate;
			}
			set
			{
				if (this._rsstemplate != value)
				{
					this.OnrsstemplateChanging(value);
					this.SendPropertyChanging();
					this._rsstemplate = value;
					this.SendPropertyChanged("rsstemplate");
					this.OnrsstemplateChanged();
				}
			}
		}

		[Column(Storage = "_rsstitletemplate", DbType = "text")]
		public string rsstitletemplate
		{
			get
			{
				return this._rsstitletemplate;
			}
			set
			{
				if (this._rsstitletemplate != value)
				{
					this.OnrsstitletemplateChanging(value);
					this.SendPropertyChanging();
					this._rsstitletemplate = value;
					this.SendPropertyChanged("rsstitletemplate");
					this.OnrsstitletemplateChanged();
				}
			}
		}

		[Column(Storage = "_csstemplate", DbType = "text")]
		public string csstemplate
		{
			get
			{
				return this._csstemplate;
			}
			set
			{
				if (this._csstemplate != value)
				{
					this.OncsstemplateChanging(value);
					this.SendPropertyChanging();
					this._csstemplate = value;
					this.SendPropertyChanged("csstemplate");
					this.OncsstemplateChanged();
				}
			}
		}

		[Column(Storage = "_jstemplate", DbType = "text")]
		public string jstemplate
		{
			get
			{
				return this._jstemplate;
			}
			set
			{
				if (this._jstemplate != value)
				{
					this.OnjstemplateChanging(value);
					this.SendPropertyChanging();
					this._jstemplate = value;
					this.SendPropertyChanged("jstemplate");
					this.OnjstemplateChanged();
				}
			}
		}

		[Column(Storage = "_asearchtemplate", DbType = "text")]
		public string asearchtemplate
		{
			get
			{
				return this._asearchtemplate;
			}
			set
			{
				if (this._asearchtemplate != value)
				{
					this.OnasearchtemplateChanging(value);
					this.SendPropertyChanging();
					this._asearchtemplate = value;
					this.SendPropertyChanged("asearchtemplate");
					this.OnasearchtemplateChanged();
				}
			}
		}

		[Column(Storage = "_approval", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int approval
		{
			get
			{
				return this._approval;
			}
			set
			{
				if (this._approval != value)
				{
					this.OnapprovalChanging(value);
					this.SendPropertyChanging();
					this._approval = value;
					this.SendPropertyChanged("approval");
					this.OnapprovalChanged();
				}
			}
		}

		[Column(Storage = "_scale", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long scale
		{
			get
			{
				return this._scale;
			}
			set
			{
				if (this._scale != value)
				{
					this.OnscaleChanging(value);
					this.SendPropertyChanging();
					this._scale = value;
					this.SendPropertyChanged("scale");
					this.OnscaleChanged();
				}
			}
		}

		[Column(Storage = "_assessed", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal assessed
		{
			get
			{
				return this._assessed;
			}
			set
			{
				if (this._assessed != value)
				{
					this.OnassessedChanging(value);
					this.SendPropertyChanging();
					this._assessed = value;
					this.SendPropertyChanged("assessed");
					this.OnassessedChanged();
				}
			}
		}

		[Column(Storage = "_defaultsort", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal defaultsort
		{
			get
			{
				return this._defaultsort;
			}
			set
			{
				if (this._defaultsort != value)
				{
					this.OndefaultsortChanging(value);
					this.SendPropertyChanging();
					this._defaultsort = value;
					this.SendPropertyChanged("defaultsort");
					this.OndefaultsortChanged();
				}
			}
		}

		[Column(Storage = "_defaultsortdir", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int defaultsortdir
		{
			get
			{
				return this._defaultsortdir;
			}
			set
			{
				if (this._defaultsortdir != value)
				{
					this.OndefaultsortdirChanging(value);
					this.SendPropertyChanging();
					this._defaultsortdir = value;
					this.SendPropertyChanged("defaultsortdir");
					this.OndefaultsortdirChanged();
				}
			}
		}

		[Column(Storage = "_editany", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int editany
		{
			get
			{
				return this._editany;
			}
			set
			{
				if (this._editany != value)
				{
					this.OneditanyChanging(value);
					this.SendPropertyChanging();
					this._editany = value;
					this.SendPropertyChanged("editany");
					this.OneditanyChanged();
				}
			}
		}

		[Column(Storage = "_notification", DbType = "bigint(10)")]
		public System.Nullable<long> notification
		{
			get
			{
				return this._notification;
			}
			set
			{
				if (this._notification != value)
				{
					this.OnnotificationChanging(value);
					this.SendPropertyChanging();
					this._notification = value;
					this.SendPropertyChanged("notification");
					this.OnnotificationChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_data_comments")]
	public partial class mdl_data_comment : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _userid;

		private decimal _recordid;

		private string _content;

		private byte _format;

		private decimal _created;

		private decimal _modified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnrecordidChanging(decimal value);
		partial void OnrecordidChanged();
		partial void OncontentChanging(string value);
		partial void OncontentChanged();
		partial void OnformatChanging(byte value);
		partial void OnformatChanged();
		partial void OncreatedChanging(decimal value);
		partial void OncreatedChanged();
		partial void OnmodifiedChanging(decimal value);
		partial void OnmodifiedChanged();
		#endregion

		public mdl_data_comment()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_recordid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal recordid
		{
			get
			{
				return this._recordid;
			}
			set
			{
				if (this._recordid != value)
				{
					this.OnrecordidChanging(value);
					this.SendPropertyChanging();
					this._recordid = value;
					this.SendPropertyChanged("recordid");
					this.OnrecordidChanged();
				}
			}
		}

		[Column(Storage = "_content", CanBeNull = false, DbType = "text NOT NULL")]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if (this._content != value)
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}

		[Column(Storage = "_format", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte format
		{
			get
			{
				return this._format;
			}
			set
			{
				if (this._format != value)
				{
					this.OnformatChanging(value);
					this.SendPropertyChanging();
					this._format = value;
					this.SendPropertyChanged("format");
					this.OnformatChanged();
				}
			}
		}

		[Column(Storage = "_created", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal created
		{
			get
			{
				return this._created;
			}
			set
			{
				if (this._created != value)
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}

		[Column(Storage = "_modified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if (this._modified != value)
				{
					this.OnmodifiedChanging(value);
					this.SendPropertyChanging();
					this._modified = value;
					this.SendPropertyChanged("modified");
					this.OnmodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_data_content")]
	public partial class mdl_data_content : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _fieldid;

		private decimal _recordid;

		private string _content;

		private string _content1;

		private string _content2;

		private string _content3;

		private string _content4;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnfieldidChanging(decimal value);
		partial void OnfieldidChanged();
		partial void OnrecordidChanging(decimal value);
		partial void OnrecordidChanged();
		partial void OncontentChanging(string value);
		partial void OncontentChanged();
		partial void Oncontent1Changing(string value);
		partial void Oncontent1Changed();
		partial void Oncontent2Changing(string value);
		partial void Oncontent2Changed();
		partial void Oncontent3Changing(string value);
		partial void Oncontent3Changed();
		partial void Oncontent4Changing(string value);
		partial void Oncontent4Changed();
		#endregion

		public mdl_data_content()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_fieldid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal fieldid
		{
			get
			{
				return this._fieldid;
			}
			set
			{
				if (this._fieldid != value)
				{
					this.OnfieldidChanging(value);
					this.SendPropertyChanging();
					this._fieldid = value;
					this.SendPropertyChanged("fieldid");
					this.OnfieldidChanged();
				}
			}
		}

		[Column(Storage = "_recordid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal recordid
		{
			get
			{
				return this._recordid;
			}
			set
			{
				if (this._recordid != value)
				{
					this.OnrecordidChanging(value);
					this.SendPropertyChanging();
					this._recordid = value;
					this.SendPropertyChanged("recordid");
					this.OnrecordidChanged();
				}
			}
		}

		[Column(Storage = "_content", DbType = "longtext")]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if (this._content != value)
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}

		[Column(Storage = "_content1", DbType = "longtext")]
		public string content1
		{
			get
			{
				return this._content1;
			}
			set
			{
				if (this._content1 != value)
				{
					this.Oncontent1Changing(value);
					this.SendPropertyChanging();
					this._content1 = value;
					this.SendPropertyChanged("content1");
					this.Oncontent1Changed();
				}
			}
		}

		[Column(Storage = "_content2", DbType = "longtext")]
		public string content2
		{
			get
			{
				return this._content2;
			}
			set
			{
				if (this._content2 != value)
				{
					this.Oncontent2Changing(value);
					this.SendPropertyChanging();
					this._content2 = value;
					this.SendPropertyChanged("content2");
					this.Oncontent2Changed();
				}
			}
		}

		[Column(Storage = "_content3", DbType = "longtext")]
		public string content3
		{
			get
			{
				return this._content3;
			}
			set
			{
				if (this._content3 != value)
				{
					this.Oncontent3Changing(value);
					this.SendPropertyChanging();
					this._content3 = value;
					this.SendPropertyChanged("content3");
					this.Oncontent3Changed();
				}
			}
		}

		[Column(Storage = "_content4", DbType = "longtext")]
		public string content4
		{
			get
			{
				return this._content4;
			}
			set
			{
				if (this._content4 != value)
				{
					this.Oncontent4Changing(value);
					this.SendPropertyChanging();
					this._content4 = value;
					this.SendPropertyChanged("content4");
					this.Oncontent4Changed();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_data_fields")]
	public partial class mdl_data_field : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _dataid;

		private string _type;

		private string _name;

		private string _description;

		private string _param1;

		private string _param2;

		private string _param3;

		private string _param4;

		private string _param5;

		private string _param6;

		private string _param7;

		private string _param8;

		private string _param9;

		private string _param10;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OndataidChanging(decimal value);
		partial void OndataidChanged();
		partial void OntypeChanging(string value);
		partial void OntypeChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OndescriptionChanging(string value);
		partial void OndescriptionChanged();
		partial void Onparam1Changing(string value);
		partial void Onparam1Changed();
		partial void Onparam2Changing(string value);
		partial void Onparam2Changed();
		partial void Onparam3Changing(string value);
		partial void Onparam3Changed();
		partial void Onparam4Changing(string value);
		partial void Onparam4Changed();
		partial void Onparam5Changing(string value);
		partial void Onparam5Changed();
		partial void Onparam6Changing(string value);
		partial void Onparam6Changed();
		partial void Onparam7Changing(string value);
		partial void Onparam7Changed();
		partial void Onparam8Changing(string value);
		partial void Onparam8Changed();
		partial void Onparam9Changing(string value);
		partial void Onparam9Changed();
		partial void Onparam10Changing(string value);
		partial void Onparam10Changed();
		#endregion

		public mdl_data_field()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_dataid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal dataid
		{
			get
			{
				return this._dataid;
			}
			set
			{
				if (this._dataid != value)
				{
					this.OndataidChanging(value);
					this.SendPropertyChanging();
					this._dataid = value;
					this.SendPropertyChanged("dataid");
					this.OndataidChanged();
				}
			}
		}

		[Column(Storage = "_type", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if (this._type != value)
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_description", CanBeNull = false, DbType = "text NOT NULL")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if (this._description != value)
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}

		[Column(Storage = "_param1", DbType = "text")]
		public string param1
		{
			get
			{
				return this._param1;
			}
			set
			{
				if (this._param1 != value)
				{
					this.Onparam1Changing(value);
					this.SendPropertyChanging();
					this._param1 = value;
					this.SendPropertyChanged("param1");
					this.Onparam1Changed();
				}
			}
		}

		[Column(Storage = "_param2", DbType = "text")]
		public string param2
		{
			get
			{
				return this._param2;
			}
			set
			{
				if (this._param2 != value)
				{
					this.Onparam2Changing(value);
					this.SendPropertyChanging();
					this._param2 = value;
					this.SendPropertyChanged("param2");
					this.Onparam2Changed();
				}
			}
		}

		[Column(Storage = "_param3", DbType = "text")]
		public string param3
		{
			get
			{
				return this._param3;
			}
			set
			{
				if (this._param3 != value)
				{
					this.Onparam3Changing(value);
					this.SendPropertyChanging();
					this._param3 = value;
					this.SendPropertyChanged("param3");
					this.Onparam3Changed();
				}
			}
		}

		[Column(Storage = "_param4", DbType = "text")]
		public string param4
		{
			get
			{
				return this._param4;
			}
			set
			{
				if (this._param4 != value)
				{
					this.Onparam4Changing(value);
					this.SendPropertyChanging();
					this._param4 = value;
					this.SendPropertyChanged("param4");
					this.Onparam4Changed();
				}
			}
		}

		[Column(Storage = "_param5", DbType = "text")]
		public string param5
		{
			get
			{
				return this._param5;
			}
			set
			{
				if (this._param5 != value)
				{
					this.Onparam5Changing(value);
					this.SendPropertyChanging();
					this._param5 = value;
					this.SendPropertyChanged("param5");
					this.Onparam5Changed();
				}
			}
		}

		[Column(Storage = "_param6", DbType = "text")]
		public string param6
		{
			get
			{
				return this._param6;
			}
			set
			{
				if (this._param6 != value)
				{
					this.Onparam6Changing(value);
					this.SendPropertyChanging();
					this._param6 = value;
					this.SendPropertyChanged("param6");
					this.Onparam6Changed();
				}
			}
		}

		[Column(Storage = "_param7", DbType = "text")]
		public string param7
		{
			get
			{
				return this._param7;
			}
			set
			{
				if (this._param7 != value)
				{
					this.Onparam7Changing(value);
					this.SendPropertyChanging();
					this._param7 = value;
					this.SendPropertyChanged("param7");
					this.Onparam7Changed();
				}
			}
		}

		[Column(Storage = "_param8", DbType = "text")]
		public string param8
		{
			get
			{
				return this._param8;
			}
			set
			{
				if (this._param8 != value)
				{
					this.Onparam8Changing(value);
					this.SendPropertyChanging();
					this._param8 = value;
					this.SendPropertyChanged("param8");
					this.Onparam8Changed();
				}
			}
		}

		[Column(Storage = "_param9", DbType = "text")]
		public string param9
		{
			get
			{
				return this._param9;
			}
			set
			{
				if (this._param9 != value)
				{
					this.Onparam9Changing(value);
					this.SendPropertyChanging();
					this._param9 = value;
					this.SendPropertyChanged("param9");
					this.Onparam9Changed();
				}
			}
		}

		[Column(Storage = "_param10", DbType = "text")]
		public string param10
		{
			get
			{
				return this._param10;
			}
			set
			{
				if (this._param10 != value)
				{
					this.Onparam10Changing(value);
					this.SendPropertyChanging();
					this._param10 = value;
					this.SendPropertyChanged("param10");
					this.Onparam10Changed();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_data_ratings")]
	public partial class mdl_data_rating : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _userid;

		private decimal _recordid;

		private decimal _rating;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnrecordidChanging(decimal value);
		partial void OnrecordidChanged();
		partial void OnratingChanging(decimal value);
		partial void OnratingChanged();
		#endregion

		public mdl_data_rating()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_recordid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal recordid
		{
			get
			{
				return this._recordid;
			}
			set
			{
				if (this._recordid != value)
				{
					this.OnrecordidChanging(value);
					this.SendPropertyChanging();
					this._recordid = value;
					this.SendPropertyChanged("recordid");
					this.OnrecordidChanged();
				}
			}
		}

		[Column(Storage = "_rating", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal rating
		{
			get
			{
				return this._rating;
			}
			set
			{
				if (this._rating != value)
				{
					this.OnratingChanging(value);
					this.SendPropertyChanging();
					this._rating = value;
					this.SendPropertyChanged("rating");
					this.OnratingChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_data_records")]
	public partial class mdl_data_record : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _userid;

		private decimal _groupid;

		private decimal _dataid;

		private decimal _timecreated;

		private decimal _timemodified;

		private int _approved;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OngroupidChanging(decimal value);
		partial void OngroupidChanged();
		partial void OndataidChanging(decimal value);
		partial void OndataidChanged();
		partial void OntimecreatedChanging(decimal value);
		partial void OntimecreatedChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		partial void OnapprovedChanging(int value);
		partial void OnapprovedChanged();
		#endregion

		public mdl_data_record()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_groupid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal groupid
		{
			get
			{
				return this._groupid;
			}
			set
			{
				if (this._groupid != value)
				{
					this.OngroupidChanging(value);
					this.SendPropertyChanging();
					this._groupid = value;
					this.SendPropertyChanged("groupid");
					this.OngroupidChanged();
				}
			}
		}

		[Column(Storage = "_dataid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal dataid
		{
			get
			{
				return this._dataid;
			}
			set
			{
				if (this._dataid != value)
				{
					this.OndataidChanging(value);
					this.SendPropertyChanging();
					this._dataid = value;
					this.SendPropertyChanged("dataid");
					this.OndataidChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_approved", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int approved
		{
			get
			{
				return this._approved;
			}
			set
			{
				if (this._approved != value)
				{
					this.OnapprovedChanging(value);
					this.SendPropertyChanging();
					this._approved = value;
					this.SendPropertyChanged("approved");
					this.OnapprovedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_enrol_authorize")]
	public partial class mdl_enrol_authorize : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _paymentmethod;

		private int _refundinfo;

		private string _ccname;

		private decimal _courseid;

		private decimal _userid;

		private decimal _transid;

		private decimal _status;

		private decimal _timecreated;

		private decimal _settletime;

		private string _amount;

		private string _currency;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnpaymentmethodChanging(string value);
		partial void OnpaymentmethodChanged();
		partial void OnrefundinfoChanging(int value);
		partial void OnrefundinfoChanged();
		partial void OnccnameChanging(string value);
		partial void OnccnameChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OntransidChanging(decimal value);
		partial void OntransidChanged();
		partial void OnstatusChanging(decimal value);
		partial void OnstatusChanged();
		partial void OntimecreatedChanging(decimal value);
		partial void OntimecreatedChanged();
		partial void OnsettletimeChanging(decimal value);
		partial void OnsettletimeChanged();
		partial void OnamountChanging(string value);
		partial void OnamountChanged();
		partial void OncurrencyChanging(string value);
		partial void OncurrencyChanged();
		#endregion

		public mdl_enrol_authorize()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_paymentmethod", CanBeNull = false, DbType = "enum NOT NULL")]
		public string paymentmethod
		{
			get
			{
				return this._paymentmethod;
			}
			set
			{
				if (this._paymentmethod != value)
				{
					this.OnpaymentmethodChanging(value);
					this.SendPropertyChanging();
					this._paymentmethod = value;
					this.SendPropertyChanged("paymentmethod");
					this.OnpaymentmethodChanged();
				}
			}
		}

		[Column(Storage = "_refundinfo", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int refundinfo
		{
			get
			{
				return this._refundinfo;
			}
			set
			{
				if (this._refundinfo != value)
				{
					this.OnrefundinfoChanging(value);
					this.SendPropertyChanging();
					this._refundinfo = value;
					this.SendPropertyChanged("refundinfo");
					this.OnrefundinfoChanged();
				}
			}
		}

		[Column(Storage = "_ccname", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string ccname
		{
			get
			{
				return this._ccname;
			}
			set
			{
				if (this._ccname != value)
				{
					this.OnccnameChanging(value);
					this.SendPropertyChanging();
					this._ccname = value;
					this.SendPropertyChanged("ccname");
					this.OnccnameChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_transid", CanBeNull = false, DbType = "bigint(20) NOT NULL")]
		public decimal transid
		{
			get
			{
				return this._transid;
			}
			set
			{
				if (this._transid != value)
				{
					this.OntransidChanging(value);
					this.SendPropertyChanging();
					this._transid = value;
					this.SendPropertyChanged("transid");
					this.OntransidChanged();
				}
			}
		}

		[Column(Storage = "_status", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal status
		{
			get
			{
				return this._status;
			}
			set
			{
				if (this._status != value)
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_settletime", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal settletime
		{
			get
			{
				return this._settletime;
			}
			set
			{
				if (this._settletime != value)
				{
					this.OnsettletimeChanging(value);
					this.SendPropertyChanging();
					this._settletime = value;
					this.SendPropertyChanged("settletime");
					this.OnsettletimeChanged();
				}
			}
		}

		[Column(Storage = "_amount", CanBeNull = false, DbType = "varchar(30) NOT NULL")]
		public string amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if (this._amount != value)
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}

		[Column(Storage = "_currency", CanBeNull = false, DbType = "varchar(9) NOT NULL")]
		public string currency
		{
			get
			{
				return this._currency;
			}
			set
			{
				if (this._currency != value)
				{
					this.OncurrencyChanging(value);
					this.SendPropertyChanging();
					this._currency = value;
					this.SendPropertyChanged("currency");
					this.OncurrencyChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_enrol_authorize_refunds")]
	public partial class mdl_enrol_authorize_refund : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _orderid;

		private byte _status;

		private string _amount;

		private System.Nullable<decimal> _transid;

		private decimal _settletime;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnorderidChanging(decimal value);
		partial void OnorderidChanged();
		partial void OnstatusChanging(byte value);
		partial void OnstatusChanged();
		partial void OnamountChanging(string value);
		partial void OnamountChanged();
		partial void OntransidChanging(System.Nullable<decimal> value);
		partial void OntransidChanged();
		partial void OnsettletimeChanging(decimal value);
		partial void OnsettletimeChanged();
		#endregion

		public mdl_enrol_authorize_refund()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_orderid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal orderid
		{
			get
			{
				return this._orderid;
			}
			set
			{
				if (this._orderid != value)
				{
					this.OnorderidChanging(value);
					this.SendPropertyChanging();
					this._orderid = value;
					this.SendPropertyChanged("orderid");
					this.OnorderidChanged();
				}
			}
		}

		[Column(Storage = "_status", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if (this._status != value)
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}

		[Column(Storage = "_amount", CanBeNull = false, DbType = "varchar(30) NOT NULL")]
		public string amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if (this._amount != value)
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}

		[Column(Storage = "_transid", DbType = "bigint(20)")]
		public System.Nullable<decimal> transid
		{
			get
			{
				return this._transid;
			}
			set
			{
				if (this._transid != value)
				{
					this.OntransidChanging(value);
					this.SendPropertyChanging();
					this._transid = value;
					this.SendPropertyChanged("transid");
					this.OntransidChanged();
				}
			}
		}

		[Column(Storage = "_settletime", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal settletime
		{
			get
			{
				return this._settletime;
			}
			set
			{
				if (this._settletime != value)
				{
					this.OnsettletimeChanging(value);
					this.SendPropertyChanging();
					this._settletime = value;
					this.SendPropertyChanged("settletime");
					this.OnsettletimeChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_enrol_paypal")]
	public partial class mdl_enrol_paypal : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _business;

		private string _receiver_email;

		private string _receiver_id;

		private string _item_name;

		private decimal _courseid;

		private decimal _userid;

		private string _memo;

		private string _tax;

		private string _option_name1;

		private string _option_selection1_x;

		private string _option_name2;

		private string _option_selection2_x;

		private string _payment_status;

		private string _pending_reason;

		private string _reason_code;

		private string _txn_id;

		private string _parent_txn_id;

		private string _payment_type;

		private decimal _timeupdated;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnbusinessChanging(string value);
		partial void OnbusinessChanged();
		partial void Onreceiver_emailChanging(string value);
		partial void Onreceiver_emailChanged();
		partial void Onreceiver_idChanging(string value);
		partial void Onreceiver_idChanged();
		partial void Onitem_nameChanging(string value);
		partial void Onitem_nameChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnmemoChanging(string value);
		partial void OnmemoChanged();
		partial void OntaxChanging(string value);
		partial void OntaxChanged();
		partial void Onoption_name1Changing(string value);
		partial void Onoption_name1Changed();
		partial void Onoption_selection1_xChanging(string value);
		partial void Onoption_selection1_xChanged();
		partial void Onoption_name2Changing(string value);
		partial void Onoption_name2Changed();
		partial void Onoption_selection2_xChanging(string value);
		partial void Onoption_selection2_xChanged();
		partial void Onpayment_statusChanging(string value);
		partial void Onpayment_statusChanged();
		partial void Onpending_reasonChanging(string value);
		partial void Onpending_reasonChanged();
		partial void Onreason_codeChanging(string value);
		partial void Onreason_codeChanged();
		partial void Ontxn_idChanging(string value);
		partial void Ontxn_idChanged();
		partial void Onparent_txn_idChanging(string value);
		partial void Onparent_txn_idChanged();
		partial void Onpayment_typeChanging(string value);
		partial void Onpayment_typeChanged();
		partial void OntimeupdatedChanging(decimal value);
		partial void OntimeupdatedChanged();
		#endregion

		public mdl_enrol_paypal()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_business", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string business
		{
			get
			{
				return this._business;
			}
			set
			{
				if (this._business != value)
				{
					this.OnbusinessChanging(value);
					this.SendPropertyChanging();
					this._business = value;
					this.SendPropertyChanged("business");
					this.OnbusinessChanged();
				}
			}
		}

		[Column(Storage = "_receiver_email", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string receiver_email
		{
			get
			{
				return this._receiver_email;
			}
			set
			{
				if (this._receiver_email != value)
				{
					this.Onreceiver_emailChanging(value);
					this.SendPropertyChanging();
					this._receiver_email = value;
					this.SendPropertyChanged("receiver_email");
					this.Onreceiver_emailChanged();
				}
			}
		}

		[Column(Storage = "_receiver_id", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string receiver_id
		{
			get
			{
				return this._receiver_id;
			}
			set
			{
				if (this._receiver_id != value)
				{
					this.Onreceiver_idChanging(value);
					this.SendPropertyChanging();
					this._receiver_id = value;
					this.SendPropertyChanged("receiver_id");
					this.Onreceiver_idChanged();
				}
			}
		}

		[Column(Storage = "_item_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string item_name
		{
			get
			{
				return this._item_name;
			}
			set
			{
				if (this._item_name != value)
				{
					this.Onitem_nameChanging(value);
					this.SendPropertyChanging();
					this._item_name = value;
					this.SendPropertyChanged("item_name");
					this.Onitem_nameChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_memo", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string memo
		{
			get
			{
				return this._memo;
			}
			set
			{
				if (this._memo != value)
				{
					this.OnmemoChanging(value);
					this.SendPropertyChanging();
					this._memo = value;
					this.SendPropertyChanged("memo");
					this.OnmemoChanged();
				}
			}
		}

		[Column(Storage = "_tax", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string tax
		{
			get
			{
				return this._tax;
			}
			set
			{
				if (this._tax != value)
				{
					this.OntaxChanging(value);
					this.SendPropertyChanging();
					this._tax = value;
					this.SendPropertyChanged("tax");
					this.OntaxChanged();
				}
			}
		}

		[Column(Storage = "_option_name1", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string option_name1
		{
			get
			{
				return this._option_name1;
			}
			set
			{
				if (this._option_name1 != value)
				{
					this.Onoption_name1Changing(value);
					this.SendPropertyChanging();
					this._option_name1 = value;
					this.SendPropertyChanged("option_name1");
					this.Onoption_name1Changed();
				}
			}
		}

		[Column(Storage = "_option_selection1_x", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string option_selection1_x
		{
			get
			{
				return this._option_selection1_x;
			}
			set
			{
				if (this._option_selection1_x != value)
				{
					this.Onoption_selection1_xChanging(value);
					this.SendPropertyChanging();
					this._option_selection1_x = value;
					this.SendPropertyChanged("option_selection1_x");
					this.Onoption_selection1_xChanged();
				}
			}
		}

		[Column(Storage = "_option_name2", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string option_name2
		{
			get
			{
				return this._option_name2;
			}
			set
			{
				if (this._option_name2 != value)
				{
					this.Onoption_name2Changing(value);
					this.SendPropertyChanging();
					this._option_name2 = value;
					this.SendPropertyChanged("option_name2");
					this.Onoption_name2Changed();
				}
			}
		}

		[Column(Storage = "_option_selection2_x", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string option_selection2_x
		{
			get
			{
				return this._option_selection2_x;
			}
			set
			{
				if (this._option_selection2_x != value)
				{
					this.Onoption_selection2_xChanging(value);
					this.SendPropertyChanging();
					this._option_selection2_x = value;
					this.SendPropertyChanged("option_selection2_x");
					this.Onoption_selection2_xChanged();
				}
			}
		}

		[Column(Storage = "_payment_status", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string payment_status
		{
			get
			{
				return this._payment_status;
			}
			set
			{
				if (this._payment_status != value)
				{
					this.Onpayment_statusChanging(value);
					this.SendPropertyChanging();
					this._payment_status = value;
					this.SendPropertyChanged("payment_status");
					this.Onpayment_statusChanged();
				}
			}
		}

		[Column(Storage = "_pending_reason", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string pending_reason
		{
			get
			{
				return this._pending_reason;
			}
			set
			{
				if (this._pending_reason != value)
				{
					this.Onpending_reasonChanging(value);
					this.SendPropertyChanging();
					this._pending_reason = value;
					this.SendPropertyChanged("pending_reason");
					this.Onpending_reasonChanged();
				}
			}
		}

		[Column(Storage = "_reason_code", CanBeNull = false, DbType = "varchar(90) NOT NULL")]
		public string reason_code
		{
			get
			{
				return this._reason_code;
			}
			set
			{
				if (this._reason_code != value)
				{
					this.Onreason_codeChanging(value);
					this.SendPropertyChanging();
					this._reason_code = value;
					this.SendPropertyChanged("reason_code");
					this.Onreason_codeChanged();
				}
			}
		}

		[Column(Storage = "_txn_id", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string txn_id
		{
			get
			{
				return this._txn_id;
			}
			set
			{
				if (this._txn_id != value)
				{
					this.Ontxn_idChanging(value);
					this.SendPropertyChanging();
					this._txn_id = value;
					this.SendPropertyChanged("txn_id");
					this.Ontxn_idChanged();
				}
			}
		}

		[Column(Storage = "_parent_txn_id", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string parent_txn_id
		{
			get
			{
				return this._parent_txn_id;
			}
			set
			{
				if (this._parent_txn_id != value)
				{
					this.Onparent_txn_idChanging(value);
					this.SendPropertyChanging();
					this._parent_txn_id = value;
					this.SendPropertyChanged("parent_txn_id");
					this.Onparent_txn_idChanged();
				}
			}
		}

		[Column(Storage = "_payment_type", CanBeNull = false, DbType = "varchar(90) NOT NULL")]
		public string payment_type
		{
			get
			{
				return this._payment_type;
			}
			set
			{
				if (this._payment_type != value)
				{
					this.Onpayment_typeChanging(value);
					this.SendPropertyChanging();
					this._payment_type = value;
					this.SendPropertyChanged("payment_type");
					this.Onpayment_typeChanged();
				}
			}
		}

		[Column(Storage = "_timeupdated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeupdated
		{
			get
			{
				return this._timeupdated;
			}
			set
			{
				if (this._timeupdated != value)
				{
					this.OntimeupdatedChanging(value);
					this.SendPropertyChanging();
					this._timeupdated = value;
					this.SendPropertyChanged("timeupdated");
					this.OntimeupdatedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_event")]
	public partial class mdl_event : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _name;

		private string _description;

		private int _format;

		private decimal _courseid;

		private decimal _groupid;

		private decimal _userid;

		private decimal _repeatid;

		private string _modulename;

		private decimal _instance;

		private string _eventtype;

		private decimal _timestart;

		private decimal _timeduration;

		private short _visible;

		private string _uuid;

		private decimal _sequence;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OndescriptionChanging(string value);
		partial void OndescriptionChanged();
		partial void OnformatChanging(int value);
		partial void OnformatChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OngroupidChanging(decimal value);
		partial void OngroupidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnrepeatidChanging(decimal value);
		partial void OnrepeatidChanged();
		partial void OnmodulenameChanging(string value);
		partial void OnmodulenameChanged();
		partial void OninstanceChanging(decimal value);
		partial void OninstanceChanged();
		partial void OneventtypeChanging(string value);
		partial void OneventtypeChanged();
		partial void OntimestartChanging(decimal value);
		partial void OntimestartChanged();
		partial void OntimedurationChanging(decimal value);
		partial void OntimedurationChanged();
		partial void OnvisibleChanging(short value);
		partial void OnvisibleChanged();
		partial void OnuuidChanging(string value);
		partial void OnuuidChanged();
		partial void OnsequenceChanging(decimal value);
		partial void OnsequenceChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_event()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_description", CanBeNull = false, DbType = "text NOT NULL")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if (this._description != value)
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}

		[Column(Storage = "_format", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int format
		{
			get
			{
				return this._format;
			}
			set
			{
				if (this._format != value)
				{
					this.OnformatChanging(value);
					this.SendPropertyChanging();
					this._format = value;
					this.SendPropertyChanged("format");
					this.OnformatChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_groupid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal groupid
		{
			get
			{
				return this._groupid;
			}
			set
			{
				if (this._groupid != value)
				{
					this.OngroupidChanging(value);
					this.SendPropertyChanging();
					this._groupid = value;
					this.SendPropertyChanged("groupid");
					this.OngroupidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_repeatid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal repeatid
		{
			get
			{
				return this._repeatid;
			}
			set
			{
				if (this._repeatid != value)
				{
					this.OnrepeatidChanging(value);
					this.SendPropertyChanging();
					this._repeatid = value;
					this.SendPropertyChanged("repeatid");
					this.OnrepeatidChanged();
				}
			}
		}

		[Column(Storage = "_modulename", CanBeNull = false, DbType = "varchar(60) NOT NULL")]
		public string modulename
		{
			get
			{
				return this._modulename;
			}
			set
			{
				if (this._modulename != value)
				{
					this.OnmodulenameChanging(value);
					this.SendPropertyChanging();
					this._modulename = value;
					this.SendPropertyChanged("modulename");
					this.OnmodulenameChanged();
				}
			}
		}

		[Column(Storage = "_instance", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal instance
		{
			get
			{
				return this._instance;
			}
			set
			{
				if (this._instance != value)
				{
					this.OninstanceChanging(value);
					this.SendPropertyChanging();
					this._instance = value;
					this.SendPropertyChanged("instance");
					this.OninstanceChanged();
				}
			}
		}

		[Column(Storage = "_eventtype", CanBeNull = false, DbType = "varchar(60) NOT NULL")]
		public string eventtype
		{
			get
			{
				return this._eventtype;
			}
			set
			{
				if (this._eventtype != value)
				{
					this.OneventtypeChanging(value);
					this.SendPropertyChanging();
					this._eventtype = value;
					this.SendPropertyChanged("eventtype");
					this.OneventtypeChanged();
				}
			}
		}

		[Column(Storage = "_timestart", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timestart
		{
			get
			{
				return this._timestart;
			}
			set
			{
				if (this._timestart != value)
				{
					this.OntimestartChanging(value);
					this.SendPropertyChanging();
					this._timestart = value;
					this.SendPropertyChanged("timestart");
					this.OntimestartChanged();
				}
			}
		}

		[Column(Storage = "_timeduration", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeduration
		{
			get
			{
				return this._timeduration;
			}
			set
			{
				if (this._timeduration != value)
				{
					this.OntimedurationChanging(value);
					this.SendPropertyChanging();
					this._timeduration = value;
					this.SendPropertyChanged("timeduration");
					this.OntimedurationChanged();
				}
			}
		}

		[Column(Storage = "_visible", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public short visible
		{
			get
			{
				return this._visible;
			}
			set
			{
				if (this._visible != value)
				{
					this.OnvisibleChanging(value);
					this.SendPropertyChanging();
					this._visible = value;
					this.SendPropertyChanged("visible");
					this.OnvisibleChanged();
				}
			}
		}

		[Column(Storage = "_uuid", CanBeNull = false, DbType = "varchar(108) NOT NULL")]
		public string uuid
		{
			get
			{
				return this._uuid;
			}
			set
			{
				if (this._uuid != value)
				{
					this.OnuuidChanging(value);
					this.SendPropertyChanging();
					this._uuid = value;
					this.SendPropertyChanged("uuid");
					this.OnuuidChanged();
				}
			}
		}

		[Column(Storage = "_sequence", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal sequence
		{
			get
			{
				return this._sequence;
			}
			set
			{
				if (this._sequence != value)
				{
					this.OnsequenceChanging(value);
					this.SendPropertyChanging();
					this._sequence = value;
					this.SendPropertyChanged("sequence");
					this.OnsequenceChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_events_handlers")]
	public partial class mdl_events_handler : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _eventname;

		private string _handlermodule;

		private string _handlerfile;

		private string _handlerfunction;

		private string _schedule;

		private decimal _status;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OneventnameChanging(string value);
		partial void OneventnameChanged();
		partial void OnhandlermoduleChanging(string value);
		partial void OnhandlermoduleChanged();
		partial void OnhandlerfileChanging(string value);
		partial void OnhandlerfileChanged();
		partial void OnhandlerfunctionChanging(string value);
		partial void OnhandlerfunctionChanged();
		partial void OnscheduleChanging(string value);
		partial void OnscheduleChanged();
		partial void OnstatusChanging(decimal value);
		partial void OnstatusChanged();
		#endregion

		public mdl_events_handler()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_eventname", CanBeNull = false, DbType = "varchar(498) NOT NULL")]
		public string eventname
		{
			get
			{
				return this._eventname;
			}
			set
			{
				if (this._eventname != value)
				{
					this.OneventnameChanging(value);
					this.SendPropertyChanging();
					this._eventname = value;
					this.SendPropertyChanged("eventname");
					this.OneventnameChanged();
				}
			}
		}

		[Column(Storage = "_handlermodule", CanBeNull = false, DbType = "varchar(498) NOT NULL")]
		public string handlermodule
		{
			get
			{
				return this._handlermodule;
			}
			set
			{
				if (this._handlermodule != value)
				{
					this.OnhandlermoduleChanging(value);
					this.SendPropertyChanging();
					this._handlermodule = value;
					this.SendPropertyChanged("handlermodule");
					this.OnhandlermoduleChanged();
				}
			}
		}

		[Column(Storage = "_handlerfile", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string handlerfile
		{
			get
			{
				return this._handlerfile;
			}
			set
			{
				if (this._handlerfile != value)
				{
					this.OnhandlerfileChanging(value);
					this.SendPropertyChanging();
					this._handlerfile = value;
					this.SendPropertyChanged("handlerfile");
					this.OnhandlerfileChanged();
				}
			}
		}

		[Column(Storage = "_handlerfunction", DbType = "mediumtext")]
		public string handlerfunction
		{
			get
			{
				return this._handlerfunction;
			}
			set
			{
				if (this._handlerfunction != value)
				{
					this.OnhandlerfunctionChanging(value);
					this.SendPropertyChanging();
					this._handlerfunction = value;
					this.SendPropertyChanged("handlerfunction");
					this.OnhandlerfunctionChanged();
				}
			}
		}

		[Column(Storage = "_schedule", DbType = "varchar(765)")]
		public string schedule
		{
			get
			{
				return this._schedule;
			}
			set
			{
				if (this._schedule != value)
				{
					this.OnscheduleChanging(value);
					this.SendPropertyChanging();
					this._schedule = value;
					this.SendPropertyChanged("schedule");
					this.OnscheduleChanged();
				}
			}
		}

		[Column(Storage = "_status", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal status
		{
			get
			{
				return this._status;
			}
			set
			{
				if (this._status != value)
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_events_queue")]
	public partial class mdl_events_queue : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _eventdata;

		private string _stackdump;

		private System.Nullable<decimal> _userid;

		private decimal _timecreated;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OneventdataChanging(string value);
		partial void OneventdataChanged();
		partial void OnstackdumpChanging(string value);
		partial void OnstackdumpChanged();
		partial void OnuseridChanging(System.Nullable<decimal> value);
		partial void OnuseridChanged();
		partial void OntimecreatedChanging(decimal value);
		partial void OntimecreatedChanged();
		#endregion

		public mdl_events_queue()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_eventdata", CanBeNull = false, DbType = "longtext NOT NULL")]
		public string eventdata
		{
			get
			{
				return this._eventdata;
			}
			set
			{
				if (this._eventdata != value)
				{
					this.OneventdataChanging(value);
					this.SendPropertyChanging();
					this._eventdata = value;
					this.SendPropertyChanged("eventdata");
					this.OneventdataChanged();
				}
			}
		}

		[Column(Storage = "_stackdump", DbType = "mediumtext")]
		public string stackdump
		{
			get
			{
				return this._stackdump;
			}
			set
			{
				if (this._stackdump != value)
				{
					this.OnstackdumpChanging(value);
					this.SendPropertyChanging();
					this._stackdump = value;
					this.SendPropertyChanged("stackdump");
					this.OnstackdumpChanged();
				}
			}
		}

		[Column(Storage = "_userid", DbType = "bigint(10)")]
		public System.Nullable<decimal> userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_events_queue_handlers")]
	public partial class mdl_events_queue_handler : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _queuedeventid;

		private decimal _handlerid;

		private System.Nullable<long> _status;

		private string _errormessage;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnqueuedeventidChanging(decimal value);
		partial void OnqueuedeventidChanged();
		partial void OnhandleridChanging(decimal value);
		partial void OnhandleridChanged();
		partial void OnstatusChanging(System.Nullable<long> value);
		partial void OnstatusChanged();
		partial void OnerrormessageChanging(string value);
		partial void OnerrormessageChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_events_queue_handler()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_queuedeventid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal queuedeventid
		{
			get
			{
				return this._queuedeventid;
			}
			set
			{
				if (this._queuedeventid != value)
				{
					this.OnqueuedeventidChanging(value);
					this.SendPropertyChanging();
					this._queuedeventid = value;
					this.SendPropertyChanged("queuedeventid");
					this.OnqueuedeventidChanged();
				}
			}
		}

		[Column(Storage = "_handlerid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal handlerid
		{
			get
			{
				return this._handlerid;
			}
			set
			{
				if (this._handlerid != value)
				{
					this.OnhandleridChanging(value);
					this.SendPropertyChanging();
					this._handlerid = value;
					this.SendPropertyChanged("handlerid");
					this.OnhandleridChanged();
				}
			}
		}

		[Column(Storage = "_status", DbType = "bigint(10)")]
		public System.Nullable<long> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if (this._status != value)
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}

		[Column(Storage = "_errormessage", DbType = "mediumtext")]
		public string errormessage
		{
			get
			{
				return this._errormessage;
			}
			set
			{
				if (this._errormessage != value)
				{
					this.OnerrormessageChanging(value);
					this.SendPropertyChanging();
					this._errormessage = value;
					this.SendPropertyChanged("errormessage");
					this.OnerrormessageChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_forum")]
	public partial class mdl_forum : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private string _type;

		private string _name;

		private string _intro;

		private decimal _assessed;

		private decimal _assesstimestart;

		private decimal _assesstimefinish;

		private long _scale;

		private decimal _maxbytes;

		private byte _forcesubscribe;

		private byte _trackingtype;

		private byte _rsstype;

		private byte _rssarticles;

		private decimal _timemodified;

		private decimal _warnafter;

		private decimal _blockafter;

		private decimal _blockperiod;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OntypeChanging(string value);
		partial void OntypeChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnintroChanging(string value);
		partial void OnintroChanged();
		partial void OnassessedChanging(decimal value);
		partial void OnassessedChanged();
		partial void OnassesstimestartChanging(decimal value);
		partial void OnassesstimestartChanged();
		partial void OnassesstimefinishChanging(decimal value);
		partial void OnassesstimefinishChanged();
		partial void OnscaleChanging(long value);
		partial void OnscaleChanged();
		partial void OnmaxbytesChanging(decimal value);
		partial void OnmaxbytesChanged();
		partial void OnforcesubscribeChanging(byte value);
		partial void OnforcesubscribeChanged();
		partial void OntrackingtypeChanging(byte value);
		partial void OntrackingtypeChanged();
		partial void OnrsstypeChanging(byte value);
		partial void OnrsstypeChanged();
		partial void OnrssarticlesChanging(byte value);
		partial void OnrssarticlesChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		partial void OnwarnafterChanging(decimal value);
		partial void OnwarnafterChanged();
		partial void OnblockafterChanging(decimal value);
		partial void OnblockafterChanged();
		partial void OnblockperiodChanging(decimal value);
		partial void OnblockperiodChanged();
		#endregion

		public mdl_forum()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_type", CanBeNull = false, DbType = "enum NOT NULL")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if (this._type != value)
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_intro", CanBeNull = false, DbType = "text NOT NULL")]
		public string intro
		{
			get
			{
				return this._intro;
			}
			set
			{
				if (this._intro != value)
				{
					this.OnintroChanging(value);
					this.SendPropertyChanging();
					this._intro = value;
					this.SendPropertyChanged("intro");
					this.OnintroChanged();
				}
			}
		}

		[Column(Storage = "_assessed", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal assessed
		{
			get
			{
				return this._assessed;
			}
			set
			{
				if (this._assessed != value)
				{
					this.OnassessedChanging(value);
					this.SendPropertyChanging();
					this._assessed = value;
					this.SendPropertyChanged("assessed");
					this.OnassessedChanged();
				}
			}
		}

		[Column(Storage = "_assesstimestart", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal assesstimestart
		{
			get
			{
				return this._assesstimestart;
			}
			set
			{
				if (this._assesstimestart != value)
				{
					this.OnassesstimestartChanging(value);
					this.SendPropertyChanging();
					this._assesstimestart = value;
					this.SendPropertyChanged("assesstimestart");
					this.OnassesstimestartChanged();
				}
			}
		}

		[Column(Storage = "_assesstimefinish", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal assesstimefinish
		{
			get
			{
				return this._assesstimefinish;
			}
			set
			{
				if (this._assesstimefinish != value)
				{
					this.OnassesstimefinishChanging(value);
					this.SendPropertyChanging();
					this._assesstimefinish = value;
					this.SendPropertyChanged("assesstimefinish");
					this.OnassesstimefinishChanged();
				}
			}
		}

		[Column(Storage = "_scale", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long scale
		{
			get
			{
				return this._scale;
			}
			set
			{
				if (this._scale != value)
				{
					this.OnscaleChanging(value);
					this.SendPropertyChanging();
					this._scale = value;
					this.SendPropertyChanged("scale");
					this.OnscaleChanged();
				}
			}
		}

		[Column(Storage = "_maxbytes", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal maxbytes
		{
			get
			{
				return this._maxbytes;
			}
			set
			{
				if (this._maxbytes != value)
				{
					this.OnmaxbytesChanging(value);
					this.SendPropertyChanging();
					this._maxbytes = value;
					this.SendPropertyChanged("maxbytes");
					this.OnmaxbytesChanged();
				}
			}
		}

		[Column(Storage = "_forcesubscribe", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte forcesubscribe
		{
			get
			{
				return this._forcesubscribe;
			}
			set
			{
				if (this._forcesubscribe != value)
				{
					this.OnforcesubscribeChanging(value);
					this.SendPropertyChanging();
					this._forcesubscribe = value;
					this.SendPropertyChanged("forcesubscribe");
					this.OnforcesubscribeChanged();
				}
			}
		}

		[Column(Storage = "_trackingtype", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte trackingtype
		{
			get
			{
				return this._trackingtype;
			}
			set
			{
				if (this._trackingtype != value)
				{
					this.OntrackingtypeChanging(value);
					this.SendPropertyChanging();
					this._trackingtype = value;
					this.SendPropertyChanged("trackingtype");
					this.OntrackingtypeChanged();
				}
			}
		}

		[Column(Storage = "_rsstype", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte rsstype
		{
			get
			{
				return this._rsstype;
			}
			set
			{
				if (this._rsstype != value)
				{
					this.OnrsstypeChanging(value);
					this.SendPropertyChanging();
					this._rsstype = value;
					this.SendPropertyChanged("rsstype");
					this.OnrsstypeChanged();
				}
			}
		}

		[Column(Storage = "_rssarticles", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte rssarticles
		{
			get
			{
				return this._rssarticles;
			}
			set
			{
				if (this._rssarticles != value)
				{
					this.OnrssarticlesChanging(value);
					this.SendPropertyChanging();
					this._rssarticles = value;
					this.SendPropertyChanged("rssarticles");
					this.OnrssarticlesChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_warnafter", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal warnafter
		{
			get
			{
				return this._warnafter;
			}
			set
			{
				if (this._warnafter != value)
				{
					this.OnwarnafterChanging(value);
					this.SendPropertyChanging();
					this._warnafter = value;
					this.SendPropertyChanged("warnafter");
					this.OnwarnafterChanged();
				}
			}
		}

		[Column(Storage = "_blockafter", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal blockafter
		{
			get
			{
				return this._blockafter;
			}
			set
			{
				if (this._blockafter != value)
				{
					this.OnblockafterChanging(value);
					this.SendPropertyChanging();
					this._blockafter = value;
					this.SendPropertyChanged("blockafter");
					this.OnblockafterChanged();
				}
			}
		}

		[Column(Storage = "_blockperiod", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal blockperiod
		{
			get
			{
				return this._blockperiod;
			}
			set
			{
				if (this._blockperiod != value)
				{
					this.OnblockperiodChanging(value);
					this.SendPropertyChanging();
					this._blockperiod = value;
					this.SendPropertyChanged("blockperiod");
					this.OnblockperiodChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_forum_discussions")]
	public partial class mdl_forum_discussion : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private decimal _forum;

		private string _name;

		private decimal _firstpost;

		private decimal _userid;

		private long _groupid;

		private short _assessed;

		private decimal _timemodified;

		private decimal _usermodified;

		private decimal _timestart;

		private decimal _timeend;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnforumChanging(decimal value);
		partial void OnforumChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnfirstpostChanging(decimal value);
		partial void OnfirstpostChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OngroupidChanging(long value);
		partial void OngroupidChanged();
		partial void OnassessedChanging(short value);
		partial void OnassessedChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		partial void OnusermodifiedChanging(decimal value);
		partial void OnusermodifiedChanged();
		partial void OntimestartChanging(decimal value);
		partial void OntimestartChanged();
		partial void OntimeendChanging(decimal value);
		partial void OntimeendChanged();
		#endregion

		public mdl_forum_discussion()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_forum", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal forum
		{
			get
			{
				return this._forum;
			}
			set
			{
				if (this._forum != value)
				{
					this.OnforumChanging(value);
					this.SendPropertyChanging();
					this._forum = value;
					this.SendPropertyChanged("forum");
					this.OnforumChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_firstpost", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal firstpost
		{
			get
			{
				return this._firstpost;
			}
			set
			{
				if (this._firstpost != value)
				{
					this.OnfirstpostChanging(value);
					this.SendPropertyChanging();
					this._firstpost = value;
					this.SendPropertyChanged("firstpost");
					this.OnfirstpostChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_groupid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long groupid
		{
			get
			{
				return this._groupid;
			}
			set
			{
				if (this._groupid != value)
				{
					this.OngroupidChanging(value);
					this.SendPropertyChanging();
					this._groupid = value;
					this.SendPropertyChanged("groupid");
					this.OngroupidChanged();
				}
			}
		}

		[Column(Storage = "_assessed", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short assessed
		{
			get
			{
				return this._assessed;
			}
			set
			{
				if (this._assessed != value)
				{
					this.OnassessedChanging(value);
					this.SendPropertyChanging();
					this._assessed = value;
					this.SendPropertyChanged("assessed");
					this.OnassessedChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_usermodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal usermodified
		{
			get
			{
				return this._usermodified;
			}
			set
			{
				if (this._usermodified != value)
				{
					this.OnusermodifiedChanging(value);
					this.SendPropertyChanging();
					this._usermodified = value;
					this.SendPropertyChanged("usermodified");
					this.OnusermodifiedChanged();
				}
			}
		}

		[Column(Storage = "_timestart", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timestart
		{
			get
			{
				return this._timestart;
			}
			set
			{
				if (this._timestart != value)
				{
					this.OntimestartChanging(value);
					this.SendPropertyChanging();
					this._timestart = value;
					this.SendPropertyChanged("timestart");
					this.OntimestartChanged();
				}
			}
		}

		[Column(Storage = "_timeend", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeend
		{
			get
			{
				return this._timeend;
			}
			set
			{
				if (this._timeend != value)
				{
					this.OntimeendChanging(value);
					this.SendPropertyChanging();
					this._timeend = value;
					this.SendPropertyChanged("timeend");
					this.OntimeendChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_forum_posts")]
	public partial class mdl_forum_post : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _discussion;

		private decimal _parent;

		private decimal _userid;

		private decimal _created;

		private decimal _modified;

		private byte _mailed;

		private string _subject;

		private string _message;

		private short _format;

		private string _attachment;

		private short _totalscore;

		private decimal _mailnow;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OndiscussionChanging(decimal value);
		partial void OndiscussionChanged();
		partial void OnparentChanging(decimal value);
		partial void OnparentChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OncreatedChanging(decimal value);
		partial void OncreatedChanged();
		partial void OnmodifiedChanging(decimal value);
		partial void OnmodifiedChanged();
		partial void OnmailedChanging(byte value);
		partial void OnmailedChanged();
		partial void OnsubjectChanging(string value);
		partial void OnsubjectChanged();
		partial void OnmessageChanging(string value);
		partial void OnmessageChanged();
		partial void OnformatChanging(short value);
		partial void OnformatChanged();
		partial void OnattachmentChanging(string value);
		partial void OnattachmentChanged();
		partial void OntotalscoreChanging(short value);
		partial void OntotalscoreChanged();
		partial void OnmailnowChanging(decimal value);
		partial void OnmailnowChanged();
		#endregion

		public mdl_forum_post()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_discussion", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal discussion
		{
			get
			{
				return this._discussion;
			}
			set
			{
				if (this._discussion != value)
				{
					this.OndiscussionChanging(value);
					this.SendPropertyChanging();
					this._discussion = value;
					this.SendPropertyChanged("discussion");
					this.OndiscussionChanged();
				}
			}
		}

		[Column(Storage = "_parent", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if (this._parent != value)
				{
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_created", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal created
		{
			get
			{
				return this._created;
			}
			set
			{
				if (this._created != value)
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}

		[Column(Storage = "_modified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if (this._modified != value)
				{
					this.OnmodifiedChanging(value);
					this.SendPropertyChanging();
					this._modified = value;
					this.SendPropertyChanged("modified");
					this.OnmodifiedChanged();
				}
			}
		}

		[Column(Storage = "_mailed", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte mailed
		{
			get
			{
				return this._mailed;
			}
			set
			{
				if (this._mailed != value)
				{
					this.OnmailedChanging(value);
					this.SendPropertyChanging();
					this._mailed = value;
					this.SendPropertyChanged("mailed");
					this.OnmailedChanged();
				}
			}
		}

		[Column(Storage = "_subject", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if (this._subject != value)
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}

		[Column(Storage = "_message", CanBeNull = false, DbType = "text NOT NULL")]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if (this._message != value)
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}

		[Column(Storage = "_format", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public short format
		{
			get
			{
				return this._format;
			}
			set
			{
				if (this._format != value)
				{
					this.OnformatChanging(value);
					this.SendPropertyChanging();
					this._format = value;
					this.SendPropertyChanged("format");
					this.OnformatChanged();
				}
			}
		}

		[Column(Storage = "_attachment", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string attachment
		{
			get
			{
				return this._attachment;
			}
			set
			{
				if (this._attachment != value)
				{
					this.OnattachmentChanging(value);
					this.SendPropertyChanging();
					this._attachment = value;
					this.SendPropertyChanged("attachment");
					this.OnattachmentChanged();
				}
			}
		}

		[Column(Storage = "_totalscore", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public short totalscore
		{
			get
			{
				return this._totalscore;
			}
			set
			{
				if (this._totalscore != value)
				{
					this.OntotalscoreChanging(value);
					this.SendPropertyChanging();
					this._totalscore = value;
					this.SendPropertyChanged("totalscore");
					this.OntotalscoreChanged();
				}
			}
		}

		[Column(Storage = "_mailnow", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal mailnow
		{
			get
			{
				return this._mailnow;
			}
			set
			{
				if (this._mailnow != value)
				{
					this.OnmailnowChanging(value);
					this.SendPropertyChanging();
					this._mailnow = value;
					this.SendPropertyChanged("mailnow");
					this.OnmailnowChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_forum_queue")]
	public partial class mdl_forum_queue : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _userid;

		private decimal _discussionid;

		private decimal _postid;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OndiscussionidChanging(decimal value);
		partial void OndiscussionidChanged();
		partial void OnpostidChanging(decimal value);
		partial void OnpostidChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_forum_queue()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_discussionid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal discussionid
		{
			get
			{
				return this._discussionid;
			}
			set
			{
				if (this._discussionid != value)
				{
					this.OndiscussionidChanging(value);
					this.SendPropertyChanging();
					this._discussionid = value;
					this.SendPropertyChanged("discussionid");
					this.OndiscussionidChanged();
				}
			}
		}

		[Column(Storage = "_postid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal postid
		{
			get
			{
				return this._postid;
			}
			set
			{
				if (this._postid != value)
				{
					this.OnpostidChanging(value);
					this.SendPropertyChanging();
					this._postid = value;
					this.SendPropertyChanged("postid");
					this.OnpostidChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_forum_ratings")]
	public partial class mdl_forum_rating : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _userid;

		private decimal _post;

		private decimal _time;

		private short _rating;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnpostChanging(decimal value);
		partial void OnpostChanged();
		partial void OntimeChanging(decimal value);
		partial void OntimeChanged();
		partial void OnratingChanging(short value);
		partial void OnratingChanged();
		#endregion

		public mdl_forum_rating()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_post", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal post
		{
			get
			{
				return this._post;
			}
			set
			{
				if (this._post != value)
				{
					this.OnpostChanging(value);
					this.SendPropertyChanging();
					this._post = value;
					this.SendPropertyChanged("post");
					this.OnpostChanged();
				}
			}
		}

		[Column(Storage = "_time", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal time
		{
			get
			{
				return this._time;
			}
			set
			{
				if (this._time != value)
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}

		[Column(Storage = "_rating", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public short rating
		{
			get
			{
				return this._rating;
			}
			set
			{
				if (this._rating != value)
				{
					this.OnratingChanging(value);
					this.SendPropertyChanging();
					this._rating = value;
					this.SendPropertyChanged("rating");
					this.OnratingChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_forum_read")]
	public partial class mdl_forum_read : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _userid;

		private decimal _forumid;

		private decimal _discussionid;

		private decimal _postid;

		private decimal _firstread;

		private decimal _lastread;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnforumidChanging(decimal value);
		partial void OnforumidChanged();
		partial void OndiscussionidChanging(decimal value);
		partial void OndiscussionidChanged();
		partial void OnpostidChanging(decimal value);
		partial void OnpostidChanged();
		partial void OnfirstreadChanging(decimal value);
		partial void OnfirstreadChanged();
		partial void OnlastreadChanging(decimal value);
		partial void OnlastreadChanged();
		#endregion

		public mdl_forum_read()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_forumid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal forumid
		{
			get
			{
				return this._forumid;
			}
			set
			{
				if (this._forumid != value)
				{
					this.OnforumidChanging(value);
					this.SendPropertyChanging();
					this._forumid = value;
					this.SendPropertyChanged("forumid");
					this.OnforumidChanged();
				}
			}
		}

		[Column(Storage = "_discussionid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal discussionid
		{
			get
			{
				return this._discussionid;
			}
			set
			{
				if (this._discussionid != value)
				{
					this.OndiscussionidChanging(value);
					this.SendPropertyChanging();
					this._discussionid = value;
					this.SendPropertyChanged("discussionid");
					this.OndiscussionidChanged();
				}
			}
		}

		[Column(Storage = "_postid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal postid
		{
			get
			{
				return this._postid;
			}
			set
			{
				if (this._postid != value)
				{
					this.OnpostidChanging(value);
					this.SendPropertyChanging();
					this._postid = value;
					this.SendPropertyChanged("postid");
					this.OnpostidChanged();
				}
			}
		}

		[Column(Storage = "_firstread", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal firstread
		{
			get
			{
				return this._firstread;
			}
			set
			{
				if (this._firstread != value)
				{
					this.OnfirstreadChanging(value);
					this.SendPropertyChanging();
					this._firstread = value;
					this.SendPropertyChanged("firstread");
					this.OnfirstreadChanged();
				}
			}
		}

		[Column(Storage = "_lastread", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal lastread
		{
			get
			{
				return this._lastread;
			}
			set
			{
				if (this._lastread != value)
				{
					this.OnlastreadChanging(value);
					this.SendPropertyChanging();
					this._lastread = value;
					this.SendPropertyChanged("lastread");
					this.OnlastreadChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_forum_subscriptions")]
	public partial class mdl_forum_subscription : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _userid;

		private decimal _forum;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnforumChanging(decimal value);
		partial void OnforumChanged();
		#endregion

		public mdl_forum_subscription()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_forum", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal forum
		{
			get
			{
				return this._forum;
			}
			set
			{
				if (this._forum != value)
				{
					this.OnforumChanging(value);
					this.SendPropertyChanging();
					this._forum = value;
					this.SendPropertyChanged("forum");
					this.OnforumChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_forum_track_prefs")]
	public partial class mdl_forum_track_pref : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _userid;

		private decimal _forumid;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnforumidChanging(decimal value);
		partial void OnforumidChanged();
		#endregion

		public mdl_forum_track_pref()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_forumid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal forumid
		{
			get
			{
				return this._forumid;
			}
			set
			{
				if (this._forumid != value)
				{
					this.OnforumidChanging(value);
					this.SendPropertyChanging();
					this._forumid = value;
					this.SendPropertyChanged("forumid");
					this.OnforumidChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_glossary")]
	public partial class mdl_glossary : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private string _name;

		private string _intro;

		private byte _allowduplicatedentries;

		private string _displayformat;

		private byte _mainglossary;

		private byte _showspecial;

		private byte _showalphabet;

		private byte _showall;

		private byte _allowcomments;

		private byte _allowprintview;

		private byte _usedynalink;

		private byte _defaultapproval;

		private byte _globalglossary;

		private int _entbypage;

		private byte _editalways;

		private byte _rsstype;

		private byte _rssarticles;

		private decimal _assessed;

		private decimal _assesstimestart;

		private decimal _assesstimefinish;

		private long _scale;

		private decimal _timecreated;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnintroChanging(string value);
		partial void OnintroChanged();
		partial void OnallowduplicatedentriesChanging(byte value);
		partial void OnallowduplicatedentriesChanged();
		partial void OndisplayformatChanging(string value);
		partial void OndisplayformatChanged();
		partial void OnmainglossaryChanging(byte value);
		partial void OnmainglossaryChanged();
		partial void OnshowspecialChanging(byte value);
		partial void OnshowspecialChanged();
		partial void OnshowalphabetChanging(byte value);
		partial void OnshowalphabetChanged();
		partial void OnshowallChanging(byte value);
		partial void OnshowallChanged();
		partial void OnallowcommentsChanging(byte value);
		partial void OnallowcommentsChanged();
		partial void OnallowprintviewChanging(byte value);
		partial void OnallowprintviewChanged();
		partial void OnusedynalinkChanging(byte value);
		partial void OnusedynalinkChanged();
		partial void OndefaultapprovalChanging(byte value);
		partial void OndefaultapprovalChanged();
		partial void OnglobalglossaryChanging(byte value);
		partial void OnglobalglossaryChanged();
		partial void OnentbypageChanging(int value);
		partial void OnentbypageChanged();
		partial void OneditalwaysChanging(byte value);
		partial void OneditalwaysChanged();
		partial void OnrsstypeChanging(byte value);
		partial void OnrsstypeChanged();
		partial void OnrssarticlesChanging(byte value);
		partial void OnrssarticlesChanged();
		partial void OnassessedChanging(decimal value);
		partial void OnassessedChanged();
		partial void OnassesstimestartChanging(decimal value);
		partial void OnassesstimestartChanged();
		partial void OnassesstimefinishChanging(decimal value);
		partial void OnassesstimefinishChanged();
		partial void OnscaleChanging(long value);
		partial void OnscaleChanged();
		partial void OntimecreatedChanging(decimal value);
		partial void OntimecreatedChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_glossary()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_intro", CanBeNull = false, DbType = "text NOT NULL")]
		public string intro
		{
			get
			{
				return this._intro;
			}
			set
			{
				if (this._intro != value)
				{
					this.OnintroChanging(value);
					this.SendPropertyChanging();
					this._intro = value;
					this.SendPropertyChanged("intro");
					this.OnintroChanged();
				}
			}
		}

		[Column(Storage = "_allowduplicatedentries", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte allowduplicatedentries
		{
			get
			{
				return this._allowduplicatedentries;
			}
			set
			{
				if (this._allowduplicatedentries != value)
				{
					this.OnallowduplicatedentriesChanging(value);
					this.SendPropertyChanging();
					this._allowduplicatedentries = value;
					this.SendPropertyChanged("allowduplicatedentries");
					this.OnallowduplicatedentriesChanged();
				}
			}
		}

		[Column(Storage = "_displayformat", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string displayformat
		{
			get
			{
				return this._displayformat;
			}
			set
			{
				if (this._displayformat != value)
				{
					this.OndisplayformatChanging(value);
					this.SendPropertyChanging();
					this._displayformat = value;
					this.SendPropertyChanged("displayformat");
					this.OndisplayformatChanged();
				}
			}
		}

		[Column(Storage = "_mainglossary", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte mainglossary
		{
			get
			{
				return this._mainglossary;
			}
			set
			{
				if (this._mainglossary != value)
				{
					this.OnmainglossaryChanging(value);
					this.SendPropertyChanging();
					this._mainglossary = value;
					this.SendPropertyChanged("mainglossary");
					this.OnmainglossaryChanged();
				}
			}
		}

		[Column(Storage = "_showspecial", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte showspecial
		{
			get
			{
				return this._showspecial;
			}
			set
			{
				if (this._showspecial != value)
				{
					this.OnshowspecialChanging(value);
					this.SendPropertyChanging();
					this._showspecial = value;
					this.SendPropertyChanged("showspecial");
					this.OnshowspecialChanged();
				}
			}
		}

		[Column(Storage = "_showalphabet", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte showalphabet
		{
			get
			{
				return this._showalphabet;
			}
			set
			{
				if (this._showalphabet != value)
				{
					this.OnshowalphabetChanging(value);
					this.SendPropertyChanging();
					this._showalphabet = value;
					this.SendPropertyChanged("showalphabet");
					this.OnshowalphabetChanged();
				}
			}
		}

		[Column(Storage = "_showall", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte showall
		{
			get
			{
				return this._showall;
			}
			set
			{
				if (this._showall != value)
				{
					this.OnshowallChanging(value);
					this.SendPropertyChanging();
					this._showall = value;
					this.SendPropertyChanged("showall");
					this.OnshowallChanged();
				}
			}
		}

		[Column(Storage = "_allowcomments", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte allowcomments
		{
			get
			{
				return this._allowcomments;
			}
			set
			{
				if (this._allowcomments != value)
				{
					this.OnallowcommentsChanging(value);
					this.SendPropertyChanging();
					this._allowcomments = value;
					this.SendPropertyChanged("allowcomments");
					this.OnallowcommentsChanged();
				}
			}
		}

		[Column(Storage = "_allowprintview", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte allowprintview
		{
			get
			{
				return this._allowprintview;
			}
			set
			{
				if (this._allowprintview != value)
				{
					this.OnallowprintviewChanging(value);
					this.SendPropertyChanging();
					this._allowprintview = value;
					this.SendPropertyChanged("allowprintview");
					this.OnallowprintviewChanged();
				}
			}
		}

		[Column(Storage = "_usedynalink", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte usedynalink
		{
			get
			{
				return this._usedynalink;
			}
			set
			{
				if (this._usedynalink != value)
				{
					this.OnusedynalinkChanging(value);
					this.SendPropertyChanging();
					this._usedynalink = value;
					this.SendPropertyChanged("usedynalink");
					this.OnusedynalinkChanged();
				}
			}
		}

		[Column(Storage = "_defaultapproval", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte defaultapproval
		{
			get
			{
				return this._defaultapproval;
			}
			set
			{
				if (this._defaultapproval != value)
				{
					this.OndefaultapprovalChanging(value);
					this.SendPropertyChanging();
					this._defaultapproval = value;
					this.SendPropertyChanged("defaultapproval");
					this.OndefaultapprovalChanged();
				}
			}
		}

		[Column(Storage = "_globalglossary", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte globalglossary
		{
			get
			{
				return this._globalglossary;
			}
			set
			{
				if (this._globalglossary != value)
				{
					this.OnglobalglossaryChanging(value);
					this.SendPropertyChanging();
					this._globalglossary = value;
					this.SendPropertyChanged("globalglossary");
					this.OnglobalglossaryChanged();
				}
			}
		}

		[Column(Storage = "_entbypage", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int entbypage
		{
			get
			{
				return this._entbypage;
			}
			set
			{
				if (this._entbypage != value)
				{
					this.OnentbypageChanging(value);
					this.SendPropertyChanging();
					this._entbypage = value;
					this.SendPropertyChanged("entbypage");
					this.OnentbypageChanged();
				}
			}
		}

		[Column(Storage = "_editalways", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte editalways
		{
			get
			{
				return this._editalways;
			}
			set
			{
				if (this._editalways != value)
				{
					this.OneditalwaysChanging(value);
					this.SendPropertyChanging();
					this._editalways = value;
					this.SendPropertyChanged("editalways");
					this.OneditalwaysChanged();
				}
			}
		}

		[Column(Storage = "_rsstype", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte rsstype
		{
			get
			{
				return this._rsstype;
			}
			set
			{
				if (this._rsstype != value)
				{
					this.OnrsstypeChanging(value);
					this.SendPropertyChanging();
					this._rsstype = value;
					this.SendPropertyChanged("rsstype");
					this.OnrsstypeChanged();
				}
			}
		}

		[Column(Storage = "_rssarticles", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte rssarticles
		{
			get
			{
				return this._rssarticles;
			}
			set
			{
				if (this._rssarticles != value)
				{
					this.OnrssarticlesChanging(value);
					this.SendPropertyChanging();
					this._rssarticles = value;
					this.SendPropertyChanged("rssarticles");
					this.OnrssarticlesChanged();
				}
			}
		}

		[Column(Storage = "_assessed", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal assessed
		{
			get
			{
				return this._assessed;
			}
			set
			{
				if (this._assessed != value)
				{
					this.OnassessedChanging(value);
					this.SendPropertyChanging();
					this._assessed = value;
					this.SendPropertyChanged("assessed");
					this.OnassessedChanged();
				}
			}
		}

		[Column(Storage = "_assesstimestart", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal assesstimestart
		{
			get
			{
				return this._assesstimestart;
			}
			set
			{
				if (this._assesstimestart != value)
				{
					this.OnassesstimestartChanging(value);
					this.SendPropertyChanging();
					this._assesstimestart = value;
					this.SendPropertyChanged("assesstimestart");
					this.OnassesstimestartChanged();
				}
			}
		}

		[Column(Storage = "_assesstimefinish", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal assesstimefinish
		{
			get
			{
				return this._assesstimefinish;
			}
			set
			{
				if (this._assesstimefinish != value)
				{
					this.OnassesstimefinishChanging(value);
					this.SendPropertyChanging();
					this._assesstimefinish = value;
					this.SendPropertyChanged("assesstimefinish");
					this.OnassesstimefinishChanged();
				}
			}
		}

		[Column(Storage = "_scale", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long scale
		{
			get
			{
				return this._scale;
			}
			set
			{
				if (this._scale != value)
				{
					this.OnscaleChanging(value);
					this.SendPropertyChanging();
					this._scale = value;
					this.SendPropertyChanged("scale");
					this.OnscaleChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_glossary_alias")]
	public partial class mdl_glossary_alia : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _entryid;

		private string _alias;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnentryidChanging(decimal value);
		partial void OnentryidChanged();
		partial void OnaliasChanging(string value);
		partial void OnaliasChanged();
		#endregion

		public mdl_glossary_alia()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_entryid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal entryid
		{
			get
			{
				return this._entryid;
			}
			set
			{
				if (this._entryid != value)
				{
					this.OnentryidChanging(value);
					this.SendPropertyChanging();
					this._entryid = value;
					this.SendPropertyChanged("entryid");
					this.OnentryidChanged();
				}
			}
		}

		[Column(Storage = "_alias", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string alias
		{
			get
			{
				return this._alias;
			}
			set
			{
				if (this._alias != value)
				{
					this.OnaliasChanging(value);
					this.SendPropertyChanging();
					this._alias = value;
					this.SendPropertyChanged("alias");
					this.OnaliasChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_glossary_categories")]
	public partial class mdl_glossary_category : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _glossaryid;

		private string _name;

		private byte _usedynalink;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnglossaryidChanging(decimal value);
		partial void OnglossaryidChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnusedynalinkChanging(byte value);
		partial void OnusedynalinkChanged();
		#endregion

		public mdl_glossary_category()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_glossaryid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal glossaryid
		{
			get
			{
				return this._glossaryid;
			}
			set
			{
				if (this._glossaryid != value)
				{
					this.OnglossaryidChanging(value);
					this.SendPropertyChanging();
					this._glossaryid = value;
					this.SendPropertyChanged("glossaryid");
					this.OnglossaryidChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_usedynalink", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte usedynalink
		{
			get
			{
				return this._usedynalink;
			}
			set
			{
				if (this._usedynalink != value)
				{
					this.OnusedynalinkChanging(value);
					this.SendPropertyChanging();
					this._usedynalink = value;
					this.SendPropertyChanged("usedynalink");
					this.OnusedynalinkChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_glossary_comments")]
	public partial class mdl_glossary_comment : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _entryid;

		private decimal _userid;

		private string _entrycomment;

		private byte _format;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnentryidChanging(decimal value);
		partial void OnentryidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnentrycommentChanging(string value);
		partial void OnentrycommentChanged();
		partial void OnformatChanging(byte value);
		partial void OnformatChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_glossary_comment()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_entryid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal entryid
		{
			get
			{
				return this._entryid;
			}
			set
			{
				if (this._entryid != value)
				{
					this.OnentryidChanging(value);
					this.SendPropertyChanging();
					this._entryid = value;
					this.SendPropertyChanged("entryid");
					this.OnentryidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_entrycomment", CanBeNull = false, DbType = "text NOT NULL")]
		public string entrycomment
		{
			get
			{
				return this._entrycomment;
			}
			set
			{
				if (this._entrycomment != value)
				{
					this.OnentrycommentChanging(value);
					this.SendPropertyChanging();
					this._entrycomment = value;
					this.SendPropertyChanged("entrycomment");
					this.OnentrycommentChanged();
				}
			}
		}

		[Column(Storage = "_format", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte format
		{
			get
			{
				return this._format;
			}
			set
			{
				if (this._format != value)
				{
					this.OnformatChanging(value);
					this.SendPropertyChanging();
					this._format = value;
					this.SendPropertyChanged("format");
					this.OnformatChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_glossary_entries")]
	public partial class mdl_glossary_entr : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _glossaryid;

		private decimal _userid;

		private string _concept;

		private string _definition;

		private byte _format;

		private string _attachment;

		private decimal _timecreated;

		private decimal _timemodified;

		private byte _teacherentry;

		private decimal _sourceglossaryid;

		private byte _usedynalink;

		private byte _casesensitive;

		private byte _fullmatch;

		private byte _approved;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnglossaryidChanging(decimal value);
		partial void OnglossaryidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnconceptChanging(string value);
		partial void OnconceptChanged();
		partial void OndefinitionChanging(string value);
		partial void OndefinitionChanged();
		partial void OnformatChanging(byte value);
		partial void OnformatChanged();
		partial void OnattachmentChanging(string value);
		partial void OnattachmentChanged();
		partial void OntimecreatedChanging(decimal value);
		partial void OntimecreatedChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		partial void OnteacherentryChanging(byte value);
		partial void OnteacherentryChanged();
		partial void OnsourceglossaryidChanging(decimal value);
		partial void OnsourceglossaryidChanged();
		partial void OnusedynalinkChanging(byte value);
		partial void OnusedynalinkChanged();
		partial void OncasesensitiveChanging(byte value);
		partial void OncasesensitiveChanged();
		partial void OnfullmatchChanging(byte value);
		partial void OnfullmatchChanged();
		partial void OnapprovedChanging(byte value);
		partial void OnapprovedChanged();
		#endregion

		public mdl_glossary_entr()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_glossaryid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal glossaryid
		{
			get
			{
				return this._glossaryid;
			}
			set
			{
				if (this._glossaryid != value)
				{
					this.OnglossaryidChanging(value);
					this.SendPropertyChanging();
					this._glossaryid = value;
					this.SendPropertyChanged("glossaryid");
					this.OnglossaryidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_concept", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string concept
		{
			get
			{
				return this._concept;
			}
			set
			{
				if (this._concept != value)
				{
					this.OnconceptChanging(value);
					this.SendPropertyChanging();
					this._concept = value;
					this.SendPropertyChanged("concept");
					this.OnconceptChanged();
				}
			}
		}

		[Column(Storage = "_definition", CanBeNull = false, DbType = "text NOT NULL")]
		public string definition
		{
			get
			{
				return this._definition;
			}
			set
			{
				if (this._definition != value)
				{
					this.OndefinitionChanging(value);
					this.SendPropertyChanging();
					this._definition = value;
					this.SendPropertyChanged("definition");
					this.OndefinitionChanged();
				}
			}
		}

		[Column(Storage = "_format", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte format
		{
			get
			{
				return this._format;
			}
			set
			{
				if (this._format != value)
				{
					this.OnformatChanging(value);
					this.SendPropertyChanging();
					this._format = value;
					this.SendPropertyChanged("format");
					this.OnformatChanged();
				}
			}
		}

		[Column(Storage = "_attachment", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string attachment
		{
			get
			{
				return this._attachment;
			}
			set
			{
				if (this._attachment != value)
				{
					this.OnattachmentChanging(value);
					this.SendPropertyChanging();
					this._attachment = value;
					this.SendPropertyChanged("attachment");
					this.OnattachmentChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_teacherentry", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte teacherentry
		{
			get
			{
				return this._teacherentry;
			}
			set
			{
				if (this._teacherentry != value)
				{
					this.OnteacherentryChanging(value);
					this.SendPropertyChanging();
					this._teacherentry = value;
					this.SendPropertyChanged("teacherentry");
					this.OnteacherentryChanged();
				}
			}
		}

		[Column(Storage = "_sourceglossaryid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal sourceglossaryid
		{
			get
			{
				return this._sourceglossaryid;
			}
			set
			{
				if (this._sourceglossaryid != value)
				{
					this.OnsourceglossaryidChanging(value);
					this.SendPropertyChanging();
					this._sourceglossaryid = value;
					this.SendPropertyChanged("sourceglossaryid");
					this.OnsourceglossaryidChanged();
				}
			}
		}

		[Column(Storage = "_usedynalink", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte usedynalink
		{
			get
			{
				return this._usedynalink;
			}
			set
			{
				if (this._usedynalink != value)
				{
					this.OnusedynalinkChanging(value);
					this.SendPropertyChanging();
					this._usedynalink = value;
					this.SendPropertyChanged("usedynalink");
					this.OnusedynalinkChanged();
				}
			}
		}

		[Column(Storage = "_casesensitive", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte casesensitive
		{
			get
			{
				return this._casesensitive;
			}
			set
			{
				if (this._casesensitive != value)
				{
					this.OncasesensitiveChanging(value);
					this.SendPropertyChanging();
					this._casesensitive = value;
					this.SendPropertyChanged("casesensitive");
					this.OncasesensitiveChanged();
				}
			}
		}

		[Column(Storage = "_fullmatch", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte fullmatch
		{
			get
			{
				return this._fullmatch;
			}
			set
			{
				if (this._fullmatch != value)
				{
					this.OnfullmatchChanging(value);
					this.SendPropertyChanging();
					this._fullmatch = value;
					this.SendPropertyChanged("fullmatch");
					this.OnfullmatchChanged();
				}
			}
		}

		[Column(Storage = "_approved", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte approved
		{
			get
			{
				return this._approved;
			}
			set
			{
				if (this._approved != value)
				{
					this.OnapprovedChanging(value);
					this.SendPropertyChanging();
					this._approved = value;
					this.SendPropertyChanged("approved");
					this.OnapprovedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_glossary_entries_categories")]
	public partial class mdl_glossary_entries_category : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _categoryid;

		private decimal _entryid;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncategoryidChanging(decimal value);
		partial void OncategoryidChanged();
		partial void OnentryidChanging(decimal value);
		partial void OnentryidChanged();
		#endregion

		public mdl_glossary_entries_category()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_categoryid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal categoryid
		{
			get
			{
				return this._categoryid;
			}
			set
			{
				if (this._categoryid != value)
				{
					this.OncategoryidChanging(value);
					this.SendPropertyChanging();
					this._categoryid = value;
					this.SendPropertyChanged("categoryid");
					this.OncategoryidChanged();
				}
			}
		}

		[Column(Storage = "_entryid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal entryid
		{
			get
			{
				return this._entryid;
			}
			set
			{
				if (this._entryid != value)
				{
					this.OnentryidChanging(value);
					this.SendPropertyChanging();
					this._entryid = value;
					this.SendPropertyChanged("entryid");
					this.OnentryidChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_glossary_formats")]
	public partial class mdl_glossary_format : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _name;

		private string _popupformatname;

		private byte _visible;

		private byte _showgroup;

		private string _defaultmode;

		private string _defaulthook;

		private string _sortkey;

		private string _sortorder;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnpopupformatnameChanging(string value);
		partial void OnpopupformatnameChanged();
		partial void OnvisibleChanging(byte value);
		partial void OnvisibleChanged();
		partial void OnshowgroupChanging(byte value);
		partial void OnshowgroupChanged();
		partial void OndefaultmodeChanging(string value);
		partial void OndefaultmodeChanged();
		partial void OndefaulthookChanging(string value);
		partial void OndefaulthookChanged();
		partial void OnsortkeyChanging(string value);
		partial void OnsortkeyChanged();
		partial void OnsortorderChanging(string value);
		partial void OnsortorderChanged();
		#endregion

		public mdl_glossary_format()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_popupformatname", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string popupformatname
		{
			get
			{
				return this._popupformatname;
			}
			set
			{
				if (this._popupformatname != value)
				{
					this.OnpopupformatnameChanging(value);
					this.SendPropertyChanging();
					this._popupformatname = value;
					this.SendPropertyChanged("popupformatname");
					this.OnpopupformatnameChanged();
				}
			}
		}

		[Column(Storage = "_visible", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte visible
		{
			get
			{
				return this._visible;
			}
			set
			{
				if (this._visible != value)
				{
					this.OnvisibleChanging(value);
					this.SendPropertyChanging();
					this._visible = value;
					this.SendPropertyChanged("visible");
					this.OnvisibleChanged();
				}
			}
		}

		[Column(Storage = "_showgroup", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte showgroup
		{
			get
			{
				return this._showgroup;
			}
			set
			{
				if (this._showgroup != value)
				{
					this.OnshowgroupChanging(value);
					this.SendPropertyChanging();
					this._showgroup = value;
					this.SendPropertyChanged("showgroup");
					this.OnshowgroupChanged();
				}
			}
		}

		[Column(Storage = "_defaultmode", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string defaultmode
		{
			get
			{
				return this._defaultmode;
			}
			set
			{
				if (this._defaultmode != value)
				{
					this.OndefaultmodeChanging(value);
					this.SendPropertyChanging();
					this._defaultmode = value;
					this.SendPropertyChanged("defaultmode");
					this.OndefaultmodeChanged();
				}
			}
		}

		[Column(Storage = "_defaulthook", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string defaulthook
		{
			get
			{
				return this._defaulthook;
			}
			set
			{
				if (this._defaulthook != value)
				{
					this.OndefaulthookChanging(value);
					this.SendPropertyChanging();
					this._defaulthook = value;
					this.SendPropertyChanged("defaulthook");
					this.OndefaulthookChanged();
				}
			}
		}

		[Column(Storage = "_sortkey", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string sortkey
		{
			get
			{
				return this._sortkey;
			}
			set
			{
				if (this._sortkey != value)
				{
					this.OnsortkeyChanging(value);
					this.SendPropertyChanging();
					this._sortkey = value;
					this.SendPropertyChanged("sortkey");
					this.OnsortkeyChanged();
				}
			}
		}

		[Column(Storage = "_sortorder", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string sortorder
		{
			get
			{
				return this._sortorder;
			}
			set
			{
				if (this._sortorder != value)
				{
					this.OnsortorderChanging(value);
					this.SendPropertyChanging();
					this._sortorder = value;
					this.SendPropertyChanged("sortorder");
					this.OnsortorderChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_glossary_ratings")]
	public partial class mdl_glossary_rating : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _userid;

		private decimal _entryid;

		private decimal _time;

		private short _rating;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnentryidChanging(decimal value);
		partial void OnentryidChanged();
		partial void OntimeChanging(decimal value);
		partial void OntimeChanged();
		partial void OnratingChanging(short value);
		partial void OnratingChanged();
		#endregion

		public mdl_glossary_rating()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_entryid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal entryid
		{
			get
			{
				return this._entryid;
			}
			set
			{
				if (this._entryid != value)
				{
					this.OnentryidChanging(value);
					this.SendPropertyChanging();
					this._entryid = value;
					this.SendPropertyChanged("entryid");
					this.OnentryidChanged();
				}
			}
		}

		[Column(Storage = "_time", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal time
		{
			get
			{
				return this._time;
			}
			set
			{
				if (this._time != value)
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}

		[Column(Storage = "_rating", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public short rating
		{
			get
			{
				return this._rating;
			}
			set
			{
				if (this._rating != value)
				{
					this.OnratingChanging(value);
					this.SendPropertyChanging();
					this._rating = value;
					this.SendPropertyChanged("rating");
					this.OnratingChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_grade_categories")]
	public partial class mdl_grade_category : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _courseid;

		private System.Nullable<decimal> _parent;

		private decimal _depth;

		private string _path;

		private string _fullname;

		private long _aggregation;

		private long _keephigh;

		private long _droplow;

		private byte _aggregateonlygraded;

		private byte _aggregateoutcomes;

		private byte _aggregatesubcats;

		private decimal _timecreated;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OnparentChanging(System.Nullable<decimal> value);
		partial void OnparentChanged();
		partial void OndepthChanging(decimal value);
		partial void OndepthChanged();
		partial void OnpathChanging(string value);
		partial void OnpathChanged();
		partial void OnfullnameChanging(string value);
		partial void OnfullnameChanged();
		partial void OnaggregationChanging(long value);
		partial void OnaggregationChanged();
		partial void OnkeephighChanging(long value);
		partial void OnkeephighChanged();
		partial void OndroplowChanging(long value);
		partial void OndroplowChanged();
		partial void OnaggregateonlygradedChanging(byte value);
		partial void OnaggregateonlygradedChanged();
		partial void OnaggregateoutcomesChanging(byte value);
		partial void OnaggregateoutcomesChanged();
		partial void OnaggregatesubcatsChanging(byte value);
		partial void OnaggregatesubcatsChanged();
		partial void OntimecreatedChanging(decimal value);
		partial void OntimecreatedChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_grade_category()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_parent", DbType = "bigint(10)")]
		public System.Nullable<decimal> parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if (this._parent != value)
				{
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}

		[Column(Storage = "_depth", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal depth
		{
			get
			{
				return this._depth;
			}
			set
			{
				if (this._depth != value)
				{
					this.OndepthChanging(value);
					this.SendPropertyChanging();
					this._depth = value;
					this.SendPropertyChanged("depth");
					this.OndepthChanged();
				}
			}
		}

		[Column(Storage = "_path", DbType = "varchar(765)")]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if (this._path != value)
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}

		[Column(Storage = "_fullname", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string fullname
		{
			get
			{
				return this._fullname;
			}
			set
			{
				if (this._fullname != value)
				{
					this.OnfullnameChanging(value);
					this.SendPropertyChanging();
					this._fullname = value;
					this.SendPropertyChanged("fullname");
					this.OnfullnameChanged();
				}
			}
		}

		[Column(Storage = "_aggregation", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long aggregation
		{
			get
			{
				return this._aggregation;
			}
			set
			{
				if (this._aggregation != value)
				{
					this.OnaggregationChanging(value);
					this.SendPropertyChanging();
					this._aggregation = value;
					this.SendPropertyChanged("aggregation");
					this.OnaggregationChanged();
				}
			}
		}

		[Column(Storage = "_keephigh", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long keephigh
		{
			get
			{
				return this._keephigh;
			}
			set
			{
				if (this._keephigh != value)
				{
					this.OnkeephighChanging(value);
					this.SendPropertyChanging();
					this._keephigh = value;
					this.SendPropertyChanged("keephigh");
					this.OnkeephighChanged();
				}
			}
		}

		[Column(Storage = "_droplow", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long droplow
		{
			get
			{
				return this._droplow;
			}
			set
			{
				if (this._droplow != value)
				{
					this.OndroplowChanging(value);
					this.SendPropertyChanging();
					this._droplow = value;
					this.SendPropertyChanged("droplow");
					this.OndroplowChanged();
				}
			}
		}

		[Column(Storage = "_aggregateonlygraded", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte aggregateonlygraded
		{
			get
			{
				return this._aggregateonlygraded;
			}
			set
			{
				if (this._aggregateonlygraded != value)
				{
					this.OnaggregateonlygradedChanging(value);
					this.SendPropertyChanging();
					this._aggregateonlygraded = value;
					this.SendPropertyChanged("aggregateonlygraded");
					this.OnaggregateonlygradedChanged();
				}
			}
		}

		[Column(Storage = "_aggregateoutcomes", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte aggregateoutcomes
		{
			get
			{
				return this._aggregateoutcomes;
			}
			set
			{
				if (this._aggregateoutcomes != value)
				{
					this.OnaggregateoutcomesChanging(value);
					this.SendPropertyChanging();
					this._aggregateoutcomes = value;
					this.SendPropertyChanged("aggregateoutcomes");
					this.OnaggregateoutcomesChanged();
				}
			}
		}

		[Column(Storage = "_aggregatesubcats", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte aggregatesubcats
		{
			get
			{
				return this._aggregatesubcats;
			}
			set
			{
				if (this._aggregatesubcats != value)
				{
					this.OnaggregatesubcatsChanging(value);
					this.SendPropertyChanging();
					this._aggregatesubcats = value;
					this.SendPropertyChanged("aggregatesubcats");
					this.OnaggregatesubcatsChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_grade_categories_history")]
	public partial class mdl_grade_categories_history : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _action;

		private decimal _oldid;

		private string _source;

		private System.Nullable<decimal> _timemodified;

		private System.Nullable<decimal> _loggeduser;

		private decimal _courseid;

		private System.Nullable<decimal> _parent;

		private decimal _depth;

		private string _path;

		private string _fullname;

		private long _aggregation;

		private long _keephigh;

		private long _droplow;

		private byte _aggregateonlygraded;

		private byte _aggregateoutcomes;

		private byte _aggregatesubcats;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnactionChanging(decimal value);
		partial void OnactionChanged();
		partial void OnoldidChanging(decimal value);
		partial void OnoldidChanged();
		partial void OnsourceChanging(string value);
		partial void OnsourceChanged();
		partial void OntimemodifiedChanging(System.Nullable<decimal> value);
		partial void OntimemodifiedChanged();
		partial void OnloggeduserChanging(System.Nullable<decimal> value);
		partial void OnloggeduserChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OnparentChanging(System.Nullable<decimal> value);
		partial void OnparentChanged();
		partial void OndepthChanging(decimal value);
		partial void OndepthChanged();
		partial void OnpathChanging(string value);
		partial void OnpathChanged();
		partial void OnfullnameChanging(string value);
		partial void OnfullnameChanged();
		partial void OnaggregationChanging(long value);
		partial void OnaggregationChanged();
		partial void OnkeephighChanging(long value);
		partial void OnkeephighChanged();
		partial void OndroplowChanging(long value);
		partial void OndroplowChanged();
		partial void OnaggregateonlygradedChanging(byte value);
		partial void OnaggregateonlygradedChanged();
		partial void OnaggregateoutcomesChanging(byte value);
		partial void OnaggregateoutcomesChanged();
		partial void OnaggregatesubcatsChanging(byte value);
		partial void OnaggregatesubcatsChanged();
		#endregion

		public mdl_grade_categories_history()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_action", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal action
		{
			get
			{
				return this._action;
			}
			set
			{
				if (this._action != value)
				{
					this.OnactionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("action");
					this.OnactionChanged();
				}
			}
		}

		[Column(Storage = "_oldid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal oldid
		{
			get
			{
				return this._oldid;
			}
			set
			{
				if (this._oldid != value)
				{
					this.OnoldidChanging(value);
					this.SendPropertyChanging();
					this._oldid = value;
					this.SendPropertyChanged("oldid");
					this.OnoldidChanged();
				}
			}
		}

		[Column(Storage = "_source", DbType = "varchar(765)")]
		public string source
		{
			get
			{
				return this._source;
			}
			set
			{
				if (this._source != value)
				{
					this.OnsourceChanging(value);
					this.SendPropertyChanging();
					this._source = value;
					this.SendPropertyChanged("source");
					this.OnsourceChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", DbType = "bigint(10)")]
		public System.Nullable<decimal> timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_loggeduser", DbType = "bigint(10)")]
		public System.Nullable<decimal> loggeduser
		{
			get
			{
				return this._loggeduser;
			}
			set
			{
				if (this._loggeduser != value)
				{
					this.OnloggeduserChanging(value);
					this.SendPropertyChanging();
					this._loggeduser = value;
					this.SendPropertyChanged("loggeduser");
					this.OnloggeduserChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_parent", DbType = "bigint(10)")]
		public System.Nullable<decimal> parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if (this._parent != value)
				{
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}

		[Column(Storage = "_depth", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal depth
		{
			get
			{
				return this._depth;
			}
			set
			{
				if (this._depth != value)
				{
					this.OndepthChanging(value);
					this.SendPropertyChanging();
					this._depth = value;
					this.SendPropertyChanged("depth");
					this.OndepthChanged();
				}
			}
		}

		[Column(Storage = "_path", DbType = "varchar(765)")]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if (this._path != value)
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}

		[Column(Storage = "_fullname", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string fullname
		{
			get
			{
				return this._fullname;
			}
			set
			{
				if (this._fullname != value)
				{
					this.OnfullnameChanging(value);
					this.SendPropertyChanging();
					this._fullname = value;
					this.SendPropertyChanged("fullname");
					this.OnfullnameChanged();
				}
			}
		}

		[Column(Storage = "_aggregation", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long aggregation
		{
			get
			{
				return this._aggregation;
			}
			set
			{
				if (this._aggregation != value)
				{
					this.OnaggregationChanging(value);
					this.SendPropertyChanging();
					this._aggregation = value;
					this.SendPropertyChanged("aggregation");
					this.OnaggregationChanged();
				}
			}
		}

		[Column(Storage = "_keephigh", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long keephigh
		{
			get
			{
				return this._keephigh;
			}
			set
			{
				if (this._keephigh != value)
				{
					this.OnkeephighChanging(value);
					this.SendPropertyChanging();
					this._keephigh = value;
					this.SendPropertyChanged("keephigh");
					this.OnkeephighChanged();
				}
			}
		}

		[Column(Storage = "_droplow", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long droplow
		{
			get
			{
				return this._droplow;
			}
			set
			{
				if (this._droplow != value)
				{
					this.OndroplowChanging(value);
					this.SendPropertyChanging();
					this._droplow = value;
					this.SendPropertyChanged("droplow");
					this.OndroplowChanged();
				}
			}
		}

		[Column(Storage = "_aggregateonlygraded", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte aggregateonlygraded
		{
			get
			{
				return this._aggregateonlygraded;
			}
			set
			{
				if (this._aggregateonlygraded != value)
				{
					this.OnaggregateonlygradedChanging(value);
					this.SendPropertyChanging();
					this._aggregateonlygraded = value;
					this.SendPropertyChanged("aggregateonlygraded");
					this.OnaggregateonlygradedChanged();
				}
			}
		}

		[Column(Storage = "_aggregateoutcomes", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte aggregateoutcomes
		{
			get
			{
				return this._aggregateoutcomes;
			}
			set
			{
				if (this._aggregateoutcomes != value)
				{
					this.OnaggregateoutcomesChanging(value);
					this.SendPropertyChanging();
					this._aggregateoutcomes = value;
					this.SendPropertyChanged("aggregateoutcomes");
					this.OnaggregateoutcomesChanged();
				}
			}
		}

		[Column(Storage = "_aggregatesubcats", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte aggregatesubcats
		{
			get
			{
				return this._aggregatesubcats;
			}
			set
			{
				if (this._aggregatesubcats != value)
				{
					this.OnaggregatesubcatsChanging(value);
					this.SendPropertyChanging();
					this._aggregatesubcats = value;
					this.SendPropertyChanged("aggregatesubcats");
					this.OnaggregatesubcatsChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_grade_grades")]
	public partial class mdl_grade_grade : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _itemid;

		private decimal _userid;

		private System.Nullable<decimal> _rawgrade;

		private decimal _rawgrademax;

		private decimal _rawgrademin;

		private System.Nullable<decimal> _rawscaleid;

		private System.Nullable<decimal> _usermodified;

		private System.Nullable<decimal> _finalgrade;

		private decimal _hidden;

		private decimal _locked;

		private decimal _locktime;

		private decimal _exported;

		private decimal _overridden;

		private decimal _excluded;

		private string _feedback;

		private decimal _feedbackformat;

		private string _information;

		private decimal _informationformat;

		private System.Nullable<decimal> _timecreated;

		private System.Nullable<decimal> _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnitemidChanging(decimal value);
		partial void OnitemidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnrawgradeChanging(System.Nullable<decimal> value);
		partial void OnrawgradeChanged();
		partial void OnrawgrademaxChanging(decimal value);
		partial void OnrawgrademaxChanged();
		partial void OnrawgrademinChanging(decimal value);
		partial void OnrawgrademinChanged();
		partial void OnrawscaleidChanging(System.Nullable<decimal> value);
		partial void OnrawscaleidChanged();
		partial void OnusermodifiedChanging(System.Nullable<decimal> value);
		partial void OnusermodifiedChanged();
		partial void OnfinalgradeChanging(System.Nullable<decimal> value);
		partial void OnfinalgradeChanged();
		partial void OnhiddenChanging(decimal value);
		partial void OnhiddenChanged();
		partial void OnlockedChanging(decimal value);
		partial void OnlockedChanged();
		partial void OnlocktimeChanging(decimal value);
		partial void OnlocktimeChanged();
		partial void OnexportedChanging(decimal value);
		partial void OnexportedChanged();
		partial void OnoverriddenChanging(decimal value);
		partial void OnoverriddenChanged();
		partial void OnexcludedChanging(decimal value);
		partial void OnexcludedChanged();
		partial void OnfeedbackChanging(string value);
		partial void OnfeedbackChanged();
		partial void OnfeedbackformatChanging(decimal value);
		partial void OnfeedbackformatChanged();
		partial void OninformationChanging(string value);
		partial void OninformationChanged();
		partial void OninformationformatChanging(decimal value);
		partial void OninformationformatChanged();
		partial void OntimecreatedChanging(System.Nullable<decimal> value);
		partial void OntimecreatedChanged();
		partial void OntimemodifiedChanging(System.Nullable<decimal> value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_grade_grade()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_itemid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal itemid
		{
			get
			{
				return this._itemid;
			}
			set
			{
				if (this._itemid != value)
				{
					this.OnitemidChanging(value);
					this.SendPropertyChanging();
					this._itemid = value;
					this.SendPropertyChanged("itemid");
					this.OnitemidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_rawgrade", DbType = "decimal(10,5)")]
		public System.Nullable<decimal> rawgrade
		{
			get
			{
				return this._rawgrade;
			}
			set
			{
				if (this._rawgrade != value)
				{
					this.OnrawgradeChanging(value);
					this.SendPropertyChanging();
					this._rawgrade = value;
					this.SendPropertyChanged("rawgrade");
					this.OnrawgradeChanged();
				}
			}
		}

		[Column(Storage = "_rawgrademax", CanBeNull = false, DbType = "decimal(10,5) NOT NULL")]
		public decimal rawgrademax
		{
			get
			{
				return this._rawgrademax;
			}
			set
			{
				if (this._rawgrademax != value)
				{
					this.OnrawgrademaxChanging(value);
					this.SendPropertyChanging();
					this._rawgrademax = value;
					this.SendPropertyChanged("rawgrademax");
					this.OnrawgrademaxChanged();
				}
			}
		}

		[Column(Storage = "_rawgrademin", CanBeNull = false, DbType = "decimal(10,5) NOT NULL")]
		public decimal rawgrademin
		{
			get
			{
				return this._rawgrademin;
			}
			set
			{
				if (this._rawgrademin != value)
				{
					this.OnrawgrademinChanging(value);
					this.SendPropertyChanging();
					this._rawgrademin = value;
					this.SendPropertyChanged("rawgrademin");
					this.OnrawgrademinChanged();
				}
			}
		}

		[Column(Storage = "_rawscaleid", DbType = "bigint(10)")]
		public System.Nullable<decimal> rawscaleid
		{
			get
			{
				return this._rawscaleid;
			}
			set
			{
				if (this._rawscaleid != value)
				{
					this.OnrawscaleidChanging(value);
					this.SendPropertyChanging();
					this._rawscaleid = value;
					this.SendPropertyChanged("rawscaleid");
					this.OnrawscaleidChanged();
				}
			}
		}

		[Column(Storage = "_usermodified", DbType = "bigint(10)")]
		public System.Nullable<decimal> usermodified
		{
			get
			{
				return this._usermodified;
			}
			set
			{
				if (this._usermodified != value)
				{
					this.OnusermodifiedChanging(value);
					this.SendPropertyChanging();
					this._usermodified = value;
					this.SendPropertyChanged("usermodified");
					this.OnusermodifiedChanged();
				}
			}
		}

		[Column(Storage = "_finalgrade", DbType = "decimal(10,5)")]
		public System.Nullable<decimal> finalgrade
		{
			get
			{
				return this._finalgrade;
			}
			set
			{
				if (this._finalgrade != value)
				{
					this.OnfinalgradeChanging(value);
					this.SendPropertyChanging();
					this._finalgrade = value;
					this.SendPropertyChanged("finalgrade");
					this.OnfinalgradeChanged();
				}
			}
		}

		[Column(Storage = "_hidden", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal hidden
		{
			get
			{
				return this._hidden;
			}
			set
			{
				if (this._hidden != value)
				{
					this.OnhiddenChanging(value);
					this.SendPropertyChanging();
					this._hidden = value;
					this.SendPropertyChanged("hidden");
					this.OnhiddenChanged();
				}
			}
		}

		[Column(Storage = "_locked", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal locked
		{
			get
			{
				return this._locked;
			}
			set
			{
				if (this._locked != value)
				{
					this.OnlockedChanging(value);
					this.SendPropertyChanging();
					this._locked = value;
					this.SendPropertyChanged("locked");
					this.OnlockedChanged();
				}
			}
		}

		[Column(Storage = "_locktime", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal locktime
		{
			get
			{
				return this._locktime;
			}
			set
			{
				if (this._locktime != value)
				{
					this.OnlocktimeChanging(value);
					this.SendPropertyChanging();
					this._locktime = value;
					this.SendPropertyChanged("locktime");
					this.OnlocktimeChanged();
				}
			}
		}

		[Column(Storage = "_exported", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal exported
		{
			get
			{
				return this._exported;
			}
			set
			{
				if (this._exported != value)
				{
					this.OnexportedChanging(value);
					this.SendPropertyChanging();
					this._exported = value;
					this.SendPropertyChanged("exported");
					this.OnexportedChanged();
				}
			}
		}

		[Column(Storage = "_overridden", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal overridden
		{
			get
			{
				return this._overridden;
			}
			set
			{
				if (this._overridden != value)
				{
					this.OnoverriddenChanging(value);
					this.SendPropertyChanging();
					this._overridden = value;
					this.SendPropertyChanged("overridden");
					this.OnoverriddenChanged();
				}
			}
		}

		[Column(Storage = "_excluded", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal excluded
		{
			get
			{
				return this._excluded;
			}
			set
			{
				if (this._excluded != value)
				{
					this.OnexcludedChanging(value);
					this.SendPropertyChanging();
					this._excluded = value;
					this.SendPropertyChanged("excluded");
					this.OnexcludedChanged();
				}
			}
		}

		[Column(Storage = "_feedback", DbType = "mediumtext")]
		public string feedback
		{
			get
			{
				return this._feedback;
			}
			set
			{
				if (this._feedback != value)
				{
					this.OnfeedbackChanging(value);
					this.SendPropertyChanging();
					this._feedback = value;
					this.SendPropertyChanged("feedback");
					this.OnfeedbackChanged();
				}
			}
		}

		[Column(Storage = "_feedbackformat", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal feedbackformat
		{
			get
			{
				return this._feedbackformat;
			}
			set
			{
				if (this._feedbackformat != value)
				{
					this.OnfeedbackformatChanging(value);
					this.SendPropertyChanging();
					this._feedbackformat = value;
					this.SendPropertyChanged("feedbackformat");
					this.OnfeedbackformatChanged();
				}
			}
		}

		[Column(Storage = "_information", DbType = "mediumtext")]
		public string information
		{
			get
			{
				return this._information;
			}
			set
			{
				if (this._information != value)
				{
					this.OninformationChanging(value);
					this.SendPropertyChanging();
					this._information = value;
					this.SendPropertyChanged("information");
					this.OninformationChanged();
				}
			}
		}

		[Column(Storage = "_informationformat", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal informationformat
		{
			get
			{
				return this._informationformat;
			}
			set
			{
				if (this._informationformat != value)
				{
					this.OninformationformatChanging(value);
					this.SendPropertyChanging();
					this._informationformat = value;
					this.SendPropertyChanged("informationformat");
					this.OninformationformatChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", DbType = "bigint(10)")]
		public System.Nullable<decimal> timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", DbType = "bigint(10)")]
		public System.Nullable<decimal> timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_grade_grades_history")]
	public partial class mdl_grade_grades_history : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _action;

		private decimal _oldid;

		private string _source;

		private System.Nullable<decimal> _timemodified;

		private System.Nullable<decimal> _loggeduser;

		private decimal _itemid;

		private decimal _userid;

		private System.Nullable<decimal> _rawgrade;

		private decimal _rawgrademax;

		private decimal _rawgrademin;

		private System.Nullable<decimal> _rawscaleid;

		private System.Nullable<decimal> _usermodified;

		private System.Nullable<decimal> _finalgrade;

		private decimal _hidden;

		private decimal _locked;

		private decimal _locktime;

		private decimal _exported;

		private decimal _overridden;

		private decimal _excluded;

		private string _feedback;

		private decimal _feedbackformat;

		private string _information;

		private decimal _informationformat;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnactionChanging(decimal value);
		partial void OnactionChanged();
		partial void OnoldidChanging(decimal value);
		partial void OnoldidChanged();
		partial void OnsourceChanging(string value);
		partial void OnsourceChanged();
		partial void OntimemodifiedChanging(System.Nullable<decimal> value);
		partial void OntimemodifiedChanged();
		partial void OnloggeduserChanging(System.Nullable<decimal> value);
		partial void OnloggeduserChanged();
		partial void OnitemidChanging(decimal value);
		partial void OnitemidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnrawgradeChanging(System.Nullable<decimal> value);
		partial void OnrawgradeChanged();
		partial void OnrawgrademaxChanging(decimal value);
		partial void OnrawgrademaxChanged();
		partial void OnrawgrademinChanging(decimal value);
		partial void OnrawgrademinChanged();
		partial void OnrawscaleidChanging(System.Nullable<decimal> value);
		partial void OnrawscaleidChanged();
		partial void OnusermodifiedChanging(System.Nullable<decimal> value);
		partial void OnusermodifiedChanged();
		partial void OnfinalgradeChanging(System.Nullable<decimal> value);
		partial void OnfinalgradeChanged();
		partial void OnhiddenChanging(decimal value);
		partial void OnhiddenChanged();
		partial void OnlockedChanging(decimal value);
		partial void OnlockedChanged();
		partial void OnlocktimeChanging(decimal value);
		partial void OnlocktimeChanged();
		partial void OnexportedChanging(decimal value);
		partial void OnexportedChanged();
		partial void OnoverriddenChanging(decimal value);
		partial void OnoverriddenChanged();
		partial void OnexcludedChanging(decimal value);
		partial void OnexcludedChanged();
		partial void OnfeedbackChanging(string value);
		partial void OnfeedbackChanged();
		partial void OnfeedbackformatChanging(decimal value);
		partial void OnfeedbackformatChanged();
		partial void OninformationChanging(string value);
		partial void OninformationChanged();
		partial void OninformationformatChanging(decimal value);
		partial void OninformationformatChanged();
		#endregion

		public mdl_grade_grades_history()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_action", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal action
		{
			get
			{
				return this._action;
			}
			set
			{
				if (this._action != value)
				{
					this.OnactionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("action");
					this.OnactionChanged();
				}
			}
		}

		[Column(Storage = "_oldid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal oldid
		{
			get
			{
				return this._oldid;
			}
			set
			{
				if (this._oldid != value)
				{
					this.OnoldidChanging(value);
					this.SendPropertyChanging();
					this._oldid = value;
					this.SendPropertyChanged("oldid");
					this.OnoldidChanged();
				}
			}
		}

		[Column(Storage = "_source", DbType = "varchar(765)")]
		public string source
		{
			get
			{
				return this._source;
			}
			set
			{
				if (this._source != value)
				{
					this.OnsourceChanging(value);
					this.SendPropertyChanging();
					this._source = value;
					this.SendPropertyChanged("source");
					this.OnsourceChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", DbType = "bigint(10)")]
		public System.Nullable<decimal> timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_loggeduser", DbType = "bigint(10)")]
		public System.Nullable<decimal> loggeduser
		{
			get
			{
				return this._loggeduser;
			}
			set
			{
				if (this._loggeduser != value)
				{
					this.OnloggeduserChanging(value);
					this.SendPropertyChanging();
					this._loggeduser = value;
					this.SendPropertyChanged("loggeduser");
					this.OnloggeduserChanged();
				}
			}
		}

		[Column(Storage = "_itemid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal itemid
		{
			get
			{
				return this._itemid;
			}
			set
			{
				if (this._itemid != value)
				{
					this.OnitemidChanging(value);
					this.SendPropertyChanging();
					this._itemid = value;
					this.SendPropertyChanged("itemid");
					this.OnitemidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_rawgrade", DbType = "decimal(10,5)")]
		public System.Nullable<decimal> rawgrade
		{
			get
			{
				return this._rawgrade;
			}
			set
			{
				if (this._rawgrade != value)
				{
					this.OnrawgradeChanging(value);
					this.SendPropertyChanging();
					this._rawgrade = value;
					this.SendPropertyChanged("rawgrade");
					this.OnrawgradeChanged();
				}
			}
		}

		[Column(Storage = "_rawgrademax", CanBeNull = false, DbType = "decimal(10,5) NOT NULL")]
		public decimal rawgrademax
		{
			get
			{
				return this._rawgrademax;
			}
			set
			{
				if (this._rawgrademax != value)
				{
					this.OnrawgrademaxChanging(value);
					this.SendPropertyChanging();
					this._rawgrademax = value;
					this.SendPropertyChanged("rawgrademax");
					this.OnrawgrademaxChanged();
				}
			}
		}

		[Column(Storage = "_rawgrademin", CanBeNull = false, DbType = "decimal(10,5) NOT NULL")]
		public decimal rawgrademin
		{
			get
			{
				return this._rawgrademin;
			}
			set
			{
				if (this._rawgrademin != value)
				{
					this.OnrawgrademinChanging(value);
					this.SendPropertyChanging();
					this._rawgrademin = value;
					this.SendPropertyChanged("rawgrademin");
					this.OnrawgrademinChanged();
				}
			}
		}

		[Column(Storage = "_rawscaleid", DbType = "bigint(10)")]
		public System.Nullable<decimal> rawscaleid
		{
			get
			{
				return this._rawscaleid;
			}
			set
			{
				if (this._rawscaleid != value)
				{
					this.OnrawscaleidChanging(value);
					this.SendPropertyChanging();
					this._rawscaleid = value;
					this.SendPropertyChanged("rawscaleid");
					this.OnrawscaleidChanged();
				}
			}
		}

		[Column(Storage = "_usermodified", DbType = "bigint(10)")]
		public System.Nullable<decimal> usermodified
		{
			get
			{
				return this._usermodified;
			}
			set
			{
				if (this._usermodified != value)
				{
					this.OnusermodifiedChanging(value);
					this.SendPropertyChanging();
					this._usermodified = value;
					this.SendPropertyChanged("usermodified");
					this.OnusermodifiedChanged();
				}
			}
		}

		[Column(Storage = "_finalgrade", DbType = "decimal(10,5)")]
		public System.Nullable<decimal> finalgrade
		{
			get
			{
				return this._finalgrade;
			}
			set
			{
				if (this._finalgrade != value)
				{
					this.OnfinalgradeChanging(value);
					this.SendPropertyChanging();
					this._finalgrade = value;
					this.SendPropertyChanged("finalgrade");
					this.OnfinalgradeChanged();
				}
			}
		}

		[Column(Storage = "_hidden", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal hidden
		{
			get
			{
				return this._hidden;
			}
			set
			{
				if (this._hidden != value)
				{
					this.OnhiddenChanging(value);
					this.SendPropertyChanging();
					this._hidden = value;
					this.SendPropertyChanged("hidden");
					this.OnhiddenChanged();
				}
			}
		}

		[Column(Storage = "_locked", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal locked
		{
			get
			{
				return this._locked;
			}
			set
			{
				if (this._locked != value)
				{
					this.OnlockedChanging(value);
					this.SendPropertyChanging();
					this._locked = value;
					this.SendPropertyChanged("locked");
					this.OnlockedChanged();
				}
			}
		}

		[Column(Storage = "_locktime", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal locktime
		{
			get
			{
				return this._locktime;
			}
			set
			{
				if (this._locktime != value)
				{
					this.OnlocktimeChanging(value);
					this.SendPropertyChanging();
					this._locktime = value;
					this.SendPropertyChanged("locktime");
					this.OnlocktimeChanged();
				}
			}
		}

		[Column(Storage = "_exported", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal exported
		{
			get
			{
				return this._exported;
			}
			set
			{
				if (this._exported != value)
				{
					this.OnexportedChanging(value);
					this.SendPropertyChanging();
					this._exported = value;
					this.SendPropertyChanged("exported");
					this.OnexportedChanged();
				}
			}
		}

		[Column(Storage = "_overridden", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal overridden
		{
			get
			{
				return this._overridden;
			}
			set
			{
				if (this._overridden != value)
				{
					this.OnoverriddenChanging(value);
					this.SendPropertyChanging();
					this._overridden = value;
					this.SendPropertyChanged("overridden");
					this.OnoverriddenChanged();
				}
			}
		}

		[Column(Storage = "_excluded", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal excluded
		{
			get
			{
				return this._excluded;
			}
			set
			{
				if (this._excluded != value)
				{
					this.OnexcludedChanging(value);
					this.SendPropertyChanging();
					this._excluded = value;
					this.SendPropertyChanged("excluded");
					this.OnexcludedChanged();
				}
			}
		}

		[Column(Storage = "_feedback", DbType = "mediumtext")]
		public string feedback
		{
			get
			{
				return this._feedback;
			}
			set
			{
				if (this._feedback != value)
				{
					this.OnfeedbackChanging(value);
					this.SendPropertyChanging();
					this._feedback = value;
					this.SendPropertyChanged("feedback");
					this.OnfeedbackChanged();
				}
			}
		}

		[Column(Storage = "_feedbackformat", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal feedbackformat
		{
			get
			{
				return this._feedbackformat;
			}
			set
			{
				if (this._feedbackformat != value)
				{
					this.OnfeedbackformatChanging(value);
					this.SendPropertyChanging();
					this._feedbackformat = value;
					this.SendPropertyChanged("feedbackformat");
					this.OnfeedbackformatChanged();
				}
			}
		}

		[Column(Storage = "_information", DbType = "mediumtext")]
		public string information
		{
			get
			{
				return this._information;
			}
			set
			{
				if (this._information != value)
				{
					this.OninformationChanging(value);
					this.SendPropertyChanging();
					this._information = value;
					this.SendPropertyChanged("information");
					this.OninformationChanged();
				}
			}
		}

		[Column(Storage = "_informationformat", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal informationformat
		{
			get
			{
				return this._informationformat;
			}
			set
			{
				if (this._informationformat != value)
				{
					this.OninformationformatChanging(value);
					this.SendPropertyChanging();
					this._informationformat = value;
					this.SendPropertyChanged("informationformat");
					this.OninformationformatChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_grade_import_newitem")]
	public partial class mdl_grade_import_newitem : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _itemname;

		private decimal _importcode;

		private decimal _importer;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnitemnameChanging(string value);
		partial void OnitemnameChanged();
		partial void OnimportcodeChanging(decimal value);
		partial void OnimportcodeChanged();
		partial void OnimporterChanging(decimal value);
		partial void OnimporterChanged();
		#endregion

		public mdl_grade_import_newitem()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_itemname", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string itemname
		{
			get
			{
				return this._itemname;
			}
			set
			{
				if (this._itemname != value)
				{
					this.OnitemnameChanging(value);
					this.SendPropertyChanging();
					this._itemname = value;
					this.SendPropertyChanged("itemname");
					this.OnitemnameChanged();
				}
			}
		}

		[Column(Storage = "_importcode", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal importcode
		{
			get
			{
				return this._importcode;
			}
			set
			{
				if (this._importcode != value)
				{
					this.OnimportcodeChanging(value);
					this.SendPropertyChanging();
					this._importcode = value;
					this.SendPropertyChanged("importcode");
					this.OnimportcodeChanged();
				}
			}
		}

		[Column(Storage = "_importer", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal importer
		{
			get
			{
				return this._importer;
			}
			set
			{
				if (this._importer != value)
				{
					this.OnimporterChanging(value);
					this.SendPropertyChanging();
					this._importer = value;
					this.SendPropertyChanged("importer");
					this.OnimporterChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_grade_import_values")]
	public partial class mdl_grade_import_value : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private System.Nullable<decimal> _itemid;

		private System.Nullable<decimal> _newgradeitem;

		private decimal _userid;

		private System.Nullable<decimal> _finalgrade;

		private string _feedback;

		private decimal _importcode;

		private System.Nullable<decimal> _importer;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnitemidChanging(System.Nullable<decimal> value);
		partial void OnitemidChanged();
		partial void OnnewgradeitemChanging(System.Nullable<decimal> value);
		partial void OnnewgradeitemChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnfinalgradeChanging(System.Nullable<decimal> value);
		partial void OnfinalgradeChanged();
		partial void OnfeedbackChanging(string value);
		partial void OnfeedbackChanged();
		partial void OnimportcodeChanging(decimal value);
		partial void OnimportcodeChanged();
		partial void OnimporterChanging(System.Nullable<decimal> value);
		partial void OnimporterChanged();
		#endregion

		public mdl_grade_import_value()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_itemid", DbType = "bigint(10)")]
		public System.Nullable<decimal> itemid
		{
			get
			{
				return this._itemid;
			}
			set
			{
				if (this._itemid != value)
				{
					this.OnitemidChanging(value);
					this.SendPropertyChanging();
					this._itemid = value;
					this.SendPropertyChanged("itemid");
					this.OnitemidChanged();
				}
			}
		}

		[Column(Storage = "_newgradeitem", DbType = "bigint(10)")]
		public System.Nullable<decimal> newgradeitem
		{
			get
			{
				return this._newgradeitem;
			}
			set
			{
				if (this._newgradeitem != value)
				{
					this.OnnewgradeitemChanging(value);
					this.SendPropertyChanging();
					this._newgradeitem = value;
					this.SendPropertyChanged("newgradeitem");
					this.OnnewgradeitemChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_finalgrade", DbType = "decimal(10,5)")]
		public System.Nullable<decimal> finalgrade
		{
			get
			{
				return this._finalgrade;
			}
			set
			{
				if (this._finalgrade != value)
				{
					this.OnfinalgradeChanging(value);
					this.SendPropertyChanging();
					this._finalgrade = value;
					this.SendPropertyChanged("finalgrade");
					this.OnfinalgradeChanged();
				}
			}
		}

		[Column(Storage = "_feedback", DbType = "mediumtext")]
		public string feedback
		{
			get
			{
				return this._feedback;
			}
			set
			{
				if (this._feedback != value)
				{
					this.OnfeedbackChanging(value);
					this.SendPropertyChanging();
					this._feedback = value;
					this.SendPropertyChanged("feedback");
					this.OnfeedbackChanged();
				}
			}
		}

		[Column(Storage = "_importcode", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal importcode
		{
			get
			{
				return this._importcode;
			}
			set
			{
				if (this._importcode != value)
				{
					this.OnimportcodeChanging(value);
					this.SendPropertyChanging();
					this._importcode = value;
					this.SendPropertyChanged("importcode");
					this.OnimportcodeChanged();
				}
			}
		}

		[Column(Storage = "_importer", DbType = "bigint(10)")]
		public System.Nullable<decimal> importer
		{
			get
			{
				return this._importer;
			}
			set
			{
				if (this._importer != value)
				{
					this.OnimporterChanging(value);
					this.SendPropertyChanging();
					this._importer = value;
					this.SendPropertyChanged("importer");
					this.OnimporterChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_grade_items")]
	public partial class mdl_grade_item : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private System.Nullable<decimal> _courseid;

		private System.Nullable<decimal> _categoryid;

		private string _itemname;

		private string _itemtype;

		private string _itemmodule;

		private System.Nullable<decimal> _iteminstance;

		private System.Nullable<decimal> _itemnumber;

		private string _iteminfo;

		private string _idnumber;

		private string _calculation;

		private short _gradetype;

		private decimal _grademax;

		private decimal _grademin;

		private System.Nullable<decimal> _scaleid;

		private System.Nullable<decimal> _outcomeid;

		private decimal _gradepass;

		private decimal _multfactor;

		private decimal _plusfactor;

		private decimal _aggregationcoef;

		private long _sortorder;

		private long _display;

		private System.Nullable<byte> _decimals;

		private long _hidden;

		private long _locked;

		private decimal _locktime;

		private long _needsupdate;

		private System.Nullable<decimal> _timecreated;

		private System.Nullable<decimal> _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseidChanging(System.Nullable<decimal> value);
		partial void OncourseidChanged();
		partial void OncategoryidChanging(System.Nullable<decimal> value);
		partial void OncategoryidChanged();
		partial void OnitemnameChanging(string value);
		partial void OnitemnameChanged();
		partial void OnitemtypeChanging(string value);
		partial void OnitemtypeChanged();
		partial void OnitemmoduleChanging(string value);
		partial void OnitemmoduleChanged();
		partial void OniteminstanceChanging(System.Nullable<decimal> value);
		partial void OniteminstanceChanged();
		partial void OnitemnumberChanging(System.Nullable<decimal> value);
		partial void OnitemnumberChanged();
		partial void OniteminfoChanging(string value);
		partial void OniteminfoChanged();
		partial void OnidnumberChanging(string value);
		partial void OnidnumberChanged();
		partial void OncalculationChanging(string value);
		partial void OncalculationChanged();
		partial void OngradetypeChanging(short value);
		partial void OngradetypeChanged();
		partial void OngrademaxChanging(decimal value);
		partial void OngrademaxChanged();
		partial void OngrademinChanging(decimal value);
		partial void OngrademinChanged();
		partial void OnscaleidChanging(System.Nullable<decimal> value);
		partial void OnscaleidChanged();
		partial void OnoutcomeidChanging(System.Nullable<decimal> value);
		partial void OnoutcomeidChanged();
		partial void OngradepassChanging(decimal value);
		partial void OngradepassChanged();
		partial void OnmultfactorChanging(decimal value);
		partial void OnmultfactorChanged();
		partial void OnplusfactorChanging(decimal value);
		partial void OnplusfactorChanged();
		partial void OnaggregationcoefChanging(decimal value);
		partial void OnaggregationcoefChanged();
		partial void OnsortorderChanging(long value);
		partial void OnsortorderChanged();
		partial void OndisplayChanging(long value);
		partial void OndisplayChanged();
		partial void OndecimalsChanging(System.Nullable<byte> value);
		partial void OndecimalsChanged();
		partial void OnhiddenChanging(long value);
		partial void OnhiddenChanged();
		partial void OnlockedChanging(long value);
		partial void OnlockedChanged();
		partial void OnlocktimeChanging(decimal value);
		partial void OnlocktimeChanged();
		partial void OnneedsupdateChanging(long value);
		partial void OnneedsupdateChanged();
		partial void OntimecreatedChanging(System.Nullable<decimal> value);
		partial void OntimecreatedChanged();
		partial void OntimemodifiedChanging(System.Nullable<decimal> value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_grade_item()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_courseid", DbType = "bigint(10)")]
		public System.Nullable<decimal> courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_categoryid", DbType = "bigint(10)")]
		public System.Nullable<decimal> categoryid
		{
			get
			{
				return this._categoryid;
			}
			set
			{
				if (this._categoryid != value)
				{
					this.OncategoryidChanging(value);
					this.SendPropertyChanging();
					this._categoryid = value;
					this.SendPropertyChanged("categoryid");
					this.OncategoryidChanged();
				}
			}
		}

		[Column(Storage = "_itemname", DbType = "varchar(765)")]
		public string itemname
		{
			get
			{
				return this._itemname;
			}
			set
			{
				if (this._itemname != value)
				{
					this.OnitemnameChanging(value);
					this.SendPropertyChanging();
					this._itemname = value;
					this.SendPropertyChanged("itemname");
					this.OnitemnameChanged();
				}
			}
		}

		[Column(Storage = "_itemtype", CanBeNull = false, DbType = "varchar(90) NOT NULL")]
		public string itemtype
		{
			get
			{
				return this._itemtype;
			}
			set
			{
				if (this._itemtype != value)
				{
					this.OnitemtypeChanging(value);
					this.SendPropertyChanging();
					this._itemtype = value;
					this.SendPropertyChanged("itemtype");
					this.OnitemtypeChanged();
				}
			}
		}

		[Column(Storage = "_itemmodule", DbType = "varchar(90)")]
		public string itemmodule
		{
			get
			{
				return this._itemmodule;
			}
			set
			{
				if (this._itemmodule != value)
				{
					this.OnitemmoduleChanging(value);
					this.SendPropertyChanging();
					this._itemmodule = value;
					this.SendPropertyChanged("itemmodule");
					this.OnitemmoduleChanged();
				}
			}
		}

		[Column(Storage = "_iteminstance", DbType = "bigint(10)")]
		public System.Nullable<decimal> iteminstance
		{
			get
			{
				return this._iteminstance;
			}
			set
			{
				if (this._iteminstance != value)
				{
					this.OniteminstanceChanging(value);
					this.SendPropertyChanging();
					this._iteminstance = value;
					this.SendPropertyChanged("iteminstance");
					this.OniteminstanceChanged();
				}
			}
		}

		[Column(Storage = "_itemnumber", DbType = "bigint(10)")]
		public System.Nullable<decimal> itemnumber
		{
			get
			{
				return this._itemnumber;
			}
			set
			{
				if (this._itemnumber != value)
				{
					this.OnitemnumberChanging(value);
					this.SendPropertyChanging();
					this._itemnumber = value;
					this.SendPropertyChanged("itemnumber");
					this.OnitemnumberChanged();
				}
			}
		}

		[Column(Storage = "_iteminfo", DbType = "mediumtext")]
		public string iteminfo
		{
			get
			{
				return this._iteminfo;
			}
			set
			{
				if (this._iteminfo != value)
				{
					this.OniteminfoChanging(value);
					this.SendPropertyChanging();
					this._iteminfo = value;
					this.SendPropertyChanged("iteminfo");
					this.OniteminfoChanged();
				}
			}
		}

		[Column(Storage = "_idnumber", DbType = "varchar(765)")]
		public string idnumber
		{
			get
			{
				return this._idnumber;
			}
			set
			{
				if (this._idnumber != value)
				{
					this.OnidnumberChanging(value);
					this.SendPropertyChanging();
					this._idnumber = value;
					this.SendPropertyChanged("idnumber");
					this.OnidnumberChanged();
				}
			}
		}

		[Column(Storage = "_calculation", DbType = "mediumtext")]
		public string calculation
		{
			get
			{
				return this._calculation;
			}
			set
			{
				if (this._calculation != value)
				{
					this.OncalculationChanging(value);
					this.SendPropertyChanging();
					this._calculation = value;
					this.SendPropertyChanged("calculation");
					this.OncalculationChanged();
				}
			}
		}

		[Column(Storage = "_gradetype", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public short gradetype
		{
			get
			{
				return this._gradetype;
			}
			set
			{
				if (this._gradetype != value)
				{
					this.OngradetypeChanging(value);
					this.SendPropertyChanging();
					this._gradetype = value;
					this.SendPropertyChanged("gradetype");
					this.OngradetypeChanged();
				}
			}
		}

		[Column(Storage = "_grademax", CanBeNull = false, DbType = "decimal(10,5) NOT NULL")]
		public decimal grademax
		{
			get
			{
				return this._grademax;
			}
			set
			{
				if (this._grademax != value)
				{
					this.OngrademaxChanging(value);
					this.SendPropertyChanging();
					this._grademax = value;
					this.SendPropertyChanged("grademax");
					this.OngrademaxChanged();
				}
			}
		}

		[Column(Storage = "_grademin", CanBeNull = false, DbType = "decimal(10,5) NOT NULL")]
		public decimal grademin
		{
			get
			{
				return this._grademin;
			}
			set
			{
				if (this._grademin != value)
				{
					this.OngrademinChanging(value);
					this.SendPropertyChanging();
					this._grademin = value;
					this.SendPropertyChanged("grademin");
					this.OngrademinChanged();
				}
			}
		}

		[Column(Storage = "_scaleid", DbType = "bigint(10)")]
		public System.Nullable<decimal> scaleid
		{
			get
			{
				return this._scaleid;
			}
			set
			{
				if (this._scaleid != value)
				{
					this.OnscaleidChanging(value);
					this.SendPropertyChanging();
					this._scaleid = value;
					this.SendPropertyChanged("scaleid");
					this.OnscaleidChanged();
				}
			}
		}

		[Column(Storage = "_outcomeid", DbType = "bigint(10)")]
		public System.Nullable<decimal> outcomeid
		{
			get
			{
				return this._outcomeid;
			}
			set
			{
				if (this._outcomeid != value)
				{
					this.OnoutcomeidChanging(value);
					this.SendPropertyChanging();
					this._outcomeid = value;
					this.SendPropertyChanged("outcomeid");
					this.OnoutcomeidChanged();
				}
			}
		}

		[Column(Storage = "_gradepass", CanBeNull = false, DbType = "decimal(10,5) NOT NULL")]
		public decimal gradepass
		{
			get
			{
				return this._gradepass;
			}
			set
			{
				if (this._gradepass != value)
				{
					this.OngradepassChanging(value);
					this.SendPropertyChanging();
					this._gradepass = value;
					this.SendPropertyChanged("gradepass");
					this.OngradepassChanged();
				}
			}
		}

		[Column(Storage = "_multfactor", CanBeNull = false, DbType = "decimal(10,5) NOT NULL")]
		public decimal multfactor
		{
			get
			{
				return this._multfactor;
			}
			set
			{
				if (this._multfactor != value)
				{
					this.OnmultfactorChanging(value);
					this.SendPropertyChanging();
					this._multfactor = value;
					this.SendPropertyChanged("multfactor");
					this.OnmultfactorChanged();
				}
			}
		}

		[Column(Storage = "_plusfactor", CanBeNull = false, DbType = "decimal(10,5) NOT NULL")]
		public decimal plusfactor
		{
			get
			{
				return this._plusfactor;
			}
			set
			{
				if (this._plusfactor != value)
				{
					this.OnplusfactorChanging(value);
					this.SendPropertyChanging();
					this._plusfactor = value;
					this.SendPropertyChanged("plusfactor");
					this.OnplusfactorChanged();
				}
			}
		}

		[Column(Storage = "_aggregationcoef", CanBeNull = false, DbType = "decimal(10,5) NOT NULL")]
		public decimal aggregationcoef
		{
			get
			{
				return this._aggregationcoef;
			}
			set
			{
				if (this._aggregationcoef != value)
				{
					this.OnaggregationcoefChanging(value);
					this.SendPropertyChanging();
					this._aggregationcoef = value;
					this.SendPropertyChanged("aggregationcoef");
					this.OnaggregationcoefChanged();
				}
			}
		}

		[Column(Storage = "_sortorder", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long sortorder
		{
			get
			{
				return this._sortorder;
			}
			set
			{
				if (this._sortorder != value)
				{
					this.OnsortorderChanging(value);
					this.SendPropertyChanging();
					this._sortorder = value;
					this.SendPropertyChanged("sortorder");
					this.OnsortorderChanged();
				}
			}
		}

		[Column(Storage = "_display", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long display
		{
			get
			{
				return this._display;
			}
			set
			{
				if (this._display != value)
				{
					this.OndisplayChanging(value);
					this.SendPropertyChanging();
					this._display = value;
					this.SendPropertyChanged("display");
					this.OndisplayChanged();
				}
			}
		}

		[Column(Storage = "_decimals", DbType = "tinyint(1)")]
		public System.Nullable<byte> decimals
		{
			get
			{
				return this._decimals;
			}
			set
			{
				if (this._decimals != value)
				{
					this.OndecimalsChanging(value);
					this.SendPropertyChanging();
					this._decimals = value;
					this.SendPropertyChanged("decimals");
					this.OndecimalsChanged();
				}
			}
		}

		[Column(Storage = "_hidden", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long hidden
		{
			get
			{
				return this._hidden;
			}
			set
			{
				if (this._hidden != value)
				{
					this.OnhiddenChanging(value);
					this.SendPropertyChanging();
					this._hidden = value;
					this.SendPropertyChanged("hidden");
					this.OnhiddenChanged();
				}
			}
		}

		[Column(Storage = "_locked", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long locked
		{
			get
			{
				return this._locked;
			}
			set
			{
				if (this._locked != value)
				{
					this.OnlockedChanging(value);
					this.SendPropertyChanging();
					this._locked = value;
					this.SendPropertyChanged("locked");
					this.OnlockedChanged();
				}
			}
		}

		[Column(Storage = "_locktime", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal locktime
		{
			get
			{
				return this._locktime;
			}
			set
			{
				if (this._locktime != value)
				{
					this.OnlocktimeChanging(value);
					this.SendPropertyChanging();
					this._locktime = value;
					this.SendPropertyChanged("locktime");
					this.OnlocktimeChanged();
				}
			}
		}

		[Column(Storage = "_needsupdate", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long needsupdate
		{
			get
			{
				return this._needsupdate;
			}
			set
			{
				if (this._needsupdate != value)
				{
					this.OnneedsupdateChanging(value);
					this.SendPropertyChanging();
					this._needsupdate = value;
					this.SendPropertyChanged("needsupdate");
					this.OnneedsupdateChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", DbType = "bigint(10)")]
		public System.Nullable<decimal> timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", DbType = "bigint(10)")]
		public System.Nullable<decimal> timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_grade_items_history")]
	public partial class mdl_grade_items_history : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _action;

		private decimal _oldid;

		private string _source;

		private System.Nullable<decimal> _timemodified;

		private System.Nullable<decimal> _loggeduser;

		private System.Nullable<decimal> _courseid;

		private System.Nullable<decimal> _categoryid;

		private string _itemname;

		private string _itemtype;

		private string _itemmodule;

		private System.Nullable<decimal> _iteminstance;

		private System.Nullable<decimal> _itemnumber;

		private string _iteminfo;

		private string _idnumber;

		private string _calculation;

		private short _gradetype;

		private decimal _grademax;

		private decimal _grademin;

		private System.Nullable<decimal> _scaleid;

		private System.Nullable<decimal> _outcomeid;

		private decimal _gradepass;

		private decimal _multfactor;

		private decimal _plusfactor;

		private decimal _aggregationcoef;

		private long _sortorder;

		private long _hidden;

		private long _locked;

		private decimal _locktime;

		private long _needsupdate;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnactionChanging(decimal value);
		partial void OnactionChanged();
		partial void OnoldidChanging(decimal value);
		partial void OnoldidChanged();
		partial void OnsourceChanging(string value);
		partial void OnsourceChanged();
		partial void OntimemodifiedChanging(System.Nullable<decimal> value);
		partial void OntimemodifiedChanged();
		partial void OnloggeduserChanging(System.Nullable<decimal> value);
		partial void OnloggeduserChanged();
		partial void OncourseidChanging(System.Nullable<decimal> value);
		partial void OncourseidChanged();
		partial void OncategoryidChanging(System.Nullable<decimal> value);
		partial void OncategoryidChanged();
		partial void OnitemnameChanging(string value);
		partial void OnitemnameChanged();
		partial void OnitemtypeChanging(string value);
		partial void OnitemtypeChanged();
		partial void OnitemmoduleChanging(string value);
		partial void OnitemmoduleChanged();
		partial void OniteminstanceChanging(System.Nullable<decimal> value);
		partial void OniteminstanceChanged();
		partial void OnitemnumberChanging(System.Nullable<decimal> value);
		partial void OnitemnumberChanged();
		partial void OniteminfoChanging(string value);
		partial void OniteminfoChanged();
		partial void OnidnumberChanging(string value);
		partial void OnidnumberChanged();
		partial void OncalculationChanging(string value);
		partial void OncalculationChanged();
		partial void OngradetypeChanging(short value);
		partial void OngradetypeChanged();
		partial void OngrademaxChanging(decimal value);
		partial void OngrademaxChanged();
		partial void OngrademinChanging(decimal value);
		partial void OngrademinChanged();
		partial void OnscaleidChanging(System.Nullable<decimal> value);
		partial void OnscaleidChanged();
		partial void OnoutcomeidChanging(System.Nullable<decimal> value);
		partial void OnoutcomeidChanged();
		partial void OngradepassChanging(decimal value);
		partial void OngradepassChanged();
		partial void OnmultfactorChanging(decimal value);
		partial void OnmultfactorChanged();
		partial void OnplusfactorChanging(decimal value);
		partial void OnplusfactorChanged();
		partial void OnaggregationcoefChanging(decimal value);
		partial void OnaggregationcoefChanged();
		partial void OnsortorderChanging(long value);
		partial void OnsortorderChanged();
		partial void OnhiddenChanging(long value);
		partial void OnhiddenChanged();
		partial void OnlockedChanging(long value);
		partial void OnlockedChanged();
		partial void OnlocktimeChanging(decimal value);
		partial void OnlocktimeChanged();
		partial void OnneedsupdateChanging(long value);
		partial void OnneedsupdateChanged();
		#endregion

		public mdl_grade_items_history()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_action", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal action
		{
			get
			{
				return this._action;
			}
			set
			{
				if (this._action != value)
				{
					this.OnactionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("action");
					this.OnactionChanged();
				}
			}
		}

		[Column(Storage = "_oldid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal oldid
		{
			get
			{
				return this._oldid;
			}
			set
			{
				if (this._oldid != value)
				{
					this.OnoldidChanging(value);
					this.SendPropertyChanging();
					this._oldid = value;
					this.SendPropertyChanged("oldid");
					this.OnoldidChanged();
				}
			}
		}

		[Column(Storage = "_source", DbType = "varchar(765)")]
		public string source
		{
			get
			{
				return this._source;
			}
			set
			{
				if (this._source != value)
				{
					this.OnsourceChanging(value);
					this.SendPropertyChanging();
					this._source = value;
					this.SendPropertyChanged("source");
					this.OnsourceChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", DbType = "bigint(10)")]
		public System.Nullable<decimal> timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_loggeduser", DbType = "bigint(10)")]
		public System.Nullable<decimal> loggeduser
		{
			get
			{
				return this._loggeduser;
			}
			set
			{
				if (this._loggeduser != value)
				{
					this.OnloggeduserChanging(value);
					this.SendPropertyChanging();
					this._loggeduser = value;
					this.SendPropertyChanged("loggeduser");
					this.OnloggeduserChanged();
				}
			}
		}

		[Column(Storage = "_courseid", DbType = "bigint(10)")]
		public System.Nullable<decimal> courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_categoryid", DbType = "bigint(10)")]
		public System.Nullable<decimal> categoryid
		{
			get
			{
				return this._categoryid;
			}
			set
			{
				if (this._categoryid != value)
				{
					this.OncategoryidChanging(value);
					this.SendPropertyChanging();
					this._categoryid = value;
					this.SendPropertyChanged("categoryid");
					this.OncategoryidChanged();
				}
			}
		}

		[Column(Storage = "_itemname", DbType = "varchar(765)")]
		public string itemname
		{
			get
			{
				return this._itemname;
			}
			set
			{
				if (this._itemname != value)
				{
					this.OnitemnameChanging(value);
					this.SendPropertyChanging();
					this._itemname = value;
					this.SendPropertyChanged("itemname");
					this.OnitemnameChanged();
				}
			}
		}

		[Column(Storage = "_itemtype", CanBeNull = false, DbType = "varchar(90) NOT NULL")]
		public string itemtype
		{
			get
			{
				return this._itemtype;
			}
			set
			{
				if (this._itemtype != value)
				{
					this.OnitemtypeChanging(value);
					this.SendPropertyChanging();
					this._itemtype = value;
					this.SendPropertyChanged("itemtype");
					this.OnitemtypeChanged();
				}
			}
		}

		[Column(Storage = "_itemmodule", DbType = "varchar(90)")]
		public string itemmodule
		{
			get
			{
				return this._itemmodule;
			}
			set
			{
				if (this._itemmodule != value)
				{
					this.OnitemmoduleChanging(value);
					this.SendPropertyChanging();
					this._itemmodule = value;
					this.SendPropertyChanged("itemmodule");
					this.OnitemmoduleChanged();
				}
			}
		}

		[Column(Storage = "_iteminstance", DbType = "bigint(10)")]
		public System.Nullable<decimal> iteminstance
		{
			get
			{
				return this._iteminstance;
			}
			set
			{
				if (this._iteminstance != value)
				{
					this.OniteminstanceChanging(value);
					this.SendPropertyChanging();
					this._iteminstance = value;
					this.SendPropertyChanged("iteminstance");
					this.OniteminstanceChanged();
				}
			}
		}

		[Column(Storage = "_itemnumber", DbType = "bigint(10)")]
		public System.Nullable<decimal> itemnumber
		{
			get
			{
				return this._itemnumber;
			}
			set
			{
				if (this._itemnumber != value)
				{
					this.OnitemnumberChanging(value);
					this.SendPropertyChanging();
					this._itemnumber = value;
					this.SendPropertyChanged("itemnumber");
					this.OnitemnumberChanged();
				}
			}
		}

		[Column(Storage = "_iteminfo", DbType = "mediumtext")]
		public string iteminfo
		{
			get
			{
				return this._iteminfo;
			}
			set
			{
				if (this._iteminfo != value)
				{
					this.OniteminfoChanging(value);
					this.SendPropertyChanging();
					this._iteminfo = value;
					this.SendPropertyChanged("iteminfo");
					this.OniteminfoChanged();
				}
			}
		}

		[Column(Storage = "_idnumber", DbType = "varchar(765)")]
		public string idnumber
		{
			get
			{
				return this._idnumber;
			}
			set
			{
				if (this._idnumber != value)
				{
					this.OnidnumberChanging(value);
					this.SendPropertyChanging();
					this._idnumber = value;
					this.SendPropertyChanged("idnumber");
					this.OnidnumberChanged();
				}
			}
		}

		[Column(Storage = "_calculation", DbType = "mediumtext")]
		public string calculation
		{
			get
			{
				return this._calculation;
			}
			set
			{
				if (this._calculation != value)
				{
					this.OncalculationChanging(value);
					this.SendPropertyChanging();
					this._calculation = value;
					this.SendPropertyChanged("calculation");
					this.OncalculationChanged();
				}
			}
		}

		[Column(Storage = "_gradetype", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public short gradetype
		{
			get
			{
				return this._gradetype;
			}
			set
			{
				if (this._gradetype != value)
				{
					this.OngradetypeChanging(value);
					this.SendPropertyChanging();
					this._gradetype = value;
					this.SendPropertyChanged("gradetype");
					this.OngradetypeChanged();
				}
			}
		}

		[Column(Storage = "_grademax", CanBeNull = false, DbType = "decimal(10,5) NOT NULL")]
		public decimal grademax
		{
			get
			{
				return this._grademax;
			}
			set
			{
				if (this._grademax != value)
				{
					this.OngrademaxChanging(value);
					this.SendPropertyChanging();
					this._grademax = value;
					this.SendPropertyChanged("grademax");
					this.OngrademaxChanged();
				}
			}
		}

		[Column(Storage = "_grademin", CanBeNull = false, DbType = "decimal(10,5) NOT NULL")]
		public decimal grademin
		{
			get
			{
				return this._grademin;
			}
			set
			{
				if (this._grademin != value)
				{
					this.OngrademinChanging(value);
					this.SendPropertyChanging();
					this._grademin = value;
					this.SendPropertyChanged("grademin");
					this.OngrademinChanged();
				}
			}
		}

		[Column(Storage = "_scaleid", DbType = "bigint(10)")]
		public System.Nullable<decimal> scaleid
		{
			get
			{
				return this._scaleid;
			}
			set
			{
				if (this._scaleid != value)
				{
					this.OnscaleidChanging(value);
					this.SendPropertyChanging();
					this._scaleid = value;
					this.SendPropertyChanged("scaleid");
					this.OnscaleidChanged();
				}
			}
		}

		[Column(Storage = "_outcomeid", DbType = "bigint(10)")]
		public System.Nullable<decimal> outcomeid
		{
			get
			{
				return this._outcomeid;
			}
			set
			{
				if (this._outcomeid != value)
				{
					this.OnoutcomeidChanging(value);
					this.SendPropertyChanging();
					this._outcomeid = value;
					this.SendPropertyChanged("outcomeid");
					this.OnoutcomeidChanged();
				}
			}
		}

		[Column(Storage = "_gradepass", CanBeNull = false, DbType = "decimal(10,5) NOT NULL")]
		public decimal gradepass
		{
			get
			{
				return this._gradepass;
			}
			set
			{
				if (this._gradepass != value)
				{
					this.OngradepassChanging(value);
					this.SendPropertyChanging();
					this._gradepass = value;
					this.SendPropertyChanged("gradepass");
					this.OngradepassChanged();
				}
			}
		}

		[Column(Storage = "_multfactor", CanBeNull = false, DbType = "decimal(10,5) NOT NULL")]
		public decimal multfactor
		{
			get
			{
				return this._multfactor;
			}
			set
			{
				if (this._multfactor != value)
				{
					this.OnmultfactorChanging(value);
					this.SendPropertyChanging();
					this._multfactor = value;
					this.SendPropertyChanged("multfactor");
					this.OnmultfactorChanged();
				}
			}
		}

		[Column(Storage = "_plusfactor", CanBeNull = false, DbType = "decimal(10,5) NOT NULL")]
		public decimal plusfactor
		{
			get
			{
				return this._plusfactor;
			}
			set
			{
				if (this._plusfactor != value)
				{
					this.OnplusfactorChanging(value);
					this.SendPropertyChanging();
					this._plusfactor = value;
					this.SendPropertyChanged("plusfactor");
					this.OnplusfactorChanged();
				}
			}
		}

		[Column(Storage = "_aggregationcoef", CanBeNull = false, DbType = "decimal(10,5) NOT NULL")]
		public decimal aggregationcoef
		{
			get
			{
				return this._aggregationcoef;
			}
			set
			{
				if (this._aggregationcoef != value)
				{
					this.OnaggregationcoefChanging(value);
					this.SendPropertyChanging();
					this._aggregationcoef = value;
					this.SendPropertyChanged("aggregationcoef");
					this.OnaggregationcoefChanged();
				}
			}
		}

		[Column(Storage = "_sortorder", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long sortorder
		{
			get
			{
				return this._sortorder;
			}
			set
			{
				if (this._sortorder != value)
				{
					this.OnsortorderChanging(value);
					this.SendPropertyChanging();
					this._sortorder = value;
					this.SendPropertyChanged("sortorder");
					this.OnsortorderChanged();
				}
			}
		}

		[Column(Storage = "_hidden", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long hidden
		{
			get
			{
				return this._hidden;
			}
			set
			{
				if (this._hidden != value)
				{
					this.OnhiddenChanging(value);
					this.SendPropertyChanging();
					this._hidden = value;
					this.SendPropertyChanged("hidden");
					this.OnhiddenChanged();
				}
			}
		}

		[Column(Storage = "_locked", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long locked
		{
			get
			{
				return this._locked;
			}
			set
			{
				if (this._locked != value)
				{
					this.OnlockedChanging(value);
					this.SendPropertyChanging();
					this._locked = value;
					this.SendPropertyChanged("locked");
					this.OnlockedChanged();
				}
			}
		}

		[Column(Storage = "_locktime", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal locktime
		{
			get
			{
				return this._locktime;
			}
			set
			{
				if (this._locktime != value)
				{
					this.OnlocktimeChanging(value);
					this.SendPropertyChanging();
					this._locktime = value;
					this.SendPropertyChanged("locktime");
					this.OnlocktimeChanged();
				}
			}
		}

		[Column(Storage = "_needsupdate", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long needsupdate
		{
			get
			{
				return this._needsupdate;
			}
			set
			{
				if (this._needsupdate != value)
				{
					this.OnneedsupdateChanging(value);
					this.SendPropertyChanging();
					this._needsupdate = value;
					this.SendPropertyChanged("needsupdate");
					this.OnneedsupdateChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_grade_letters")]
	public partial class mdl_grade_letter : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _contextid;

		private decimal _lowerboundary;

		private string _letter;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncontextidChanging(decimal value);
		partial void OncontextidChanged();
		partial void OnlowerboundaryChanging(decimal value);
		partial void OnlowerboundaryChanged();
		partial void OnletterChanging(string value);
		partial void OnletterChanged();
		#endregion

		public mdl_grade_letter()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_contextid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal contextid
		{
			get
			{
				return this._contextid;
			}
			set
			{
				if (this._contextid != value)
				{
					this.OncontextidChanging(value);
					this.SendPropertyChanging();
					this._contextid = value;
					this.SendPropertyChanged("contextid");
					this.OncontextidChanged();
				}
			}
		}

		[Column(Storage = "_lowerboundary", CanBeNull = false, DbType = "decimal(10,5) NOT NULL")]
		public decimal lowerboundary
		{
			get
			{
				return this._lowerboundary;
			}
			set
			{
				if (this._lowerboundary != value)
				{
					this.OnlowerboundaryChanging(value);
					this.SendPropertyChanging();
					this._lowerboundary = value;
					this.SendPropertyChanged("lowerboundary");
					this.OnlowerboundaryChanged();
				}
			}
		}

		[Column(Storage = "_letter", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string letter
		{
			get
			{
				return this._letter;
			}
			set
			{
				if (this._letter != value)
				{
					this.OnletterChanging(value);
					this.SendPropertyChanging();
					this._letter = value;
					this.SendPropertyChanged("letter");
					this.OnletterChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_grade_outcomes")]
	public partial class mdl_grade_outcome : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private System.Nullable<decimal> _courseid;

		private string _shortname;

		private string _fullname;

		private System.Nullable<decimal> _scaleid;

		private string _description;

		private System.Nullable<decimal> _timecreated;

		private System.Nullable<decimal> _timemodified;

		private System.Nullable<decimal> _usermodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseidChanging(System.Nullable<decimal> value);
		partial void OncourseidChanged();
		partial void OnshortnameChanging(string value);
		partial void OnshortnameChanged();
		partial void OnfullnameChanging(string value);
		partial void OnfullnameChanged();
		partial void OnscaleidChanging(System.Nullable<decimal> value);
		partial void OnscaleidChanged();
		partial void OndescriptionChanging(string value);
		partial void OndescriptionChanged();
		partial void OntimecreatedChanging(System.Nullable<decimal> value);
		partial void OntimecreatedChanged();
		partial void OntimemodifiedChanging(System.Nullable<decimal> value);
		partial void OntimemodifiedChanged();
		partial void OnusermodifiedChanging(System.Nullable<decimal> value);
		partial void OnusermodifiedChanged();
		#endregion

		public mdl_grade_outcome()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_courseid", DbType = "bigint(10)")]
		public System.Nullable<decimal> courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_shortname", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string shortname
		{
			get
			{
				return this._shortname;
			}
			set
			{
				if (this._shortname != value)
				{
					this.OnshortnameChanging(value);
					this.SendPropertyChanging();
					this._shortname = value;
					this.SendPropertyChanged("shortname");
					this.OnshortnameChanged();
				}
			}
		}

		[Column(Storage = "_fullname", CanBeNull = false, DbType = "text NOT NULL")]
		public string fullname
		{
			get
			{
				return this._fullname;
			}
			set
			{
				if (this._fullname != value)
				{
					this.OnfullnameChanging(value);
					this.SendPropertyChanging();
					this._fullname = value;
					this.SendPropertyChanged("fullname");
					this.OnfullnameChanged();
				}
			}
		}

		[Column(Storage = "_scaleid", DbType = "bigint(10)")]
		public System.Nullable<decimal> scaleid
		{
			get
			{
				return this._scaleid;
			}
			set
			{
				if (this._scaleid != value)
				{
					this.OnscaleidChanging(value);
					this.SendPropertyChanging();
					this._scaleid = value;
					this.SendPropertyChanged("scaleid");
					this.OnscaleidChanged();
				}
			}
		}

		[Column(Storage = "_description", DbType = "text")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if (this._description != value)
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", DbType = "bigint(10)")]
		public System.Nullable<decimal> timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", DbType = "bigint(10)")]
		public System.Nullable<decimal> timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_usermodified", DbType = "bigint(10)")]
		public System.Nullable<decimal> usermodified
		{
			get
			{
				return this._usermodified;
			}
			set
			{
				if (this._usermodified != value)
				{
					this.OnusermodifiedChanging(value);
					this.SendPropertyChanging();
					this._usermodified = value;
					this.SendPropertyChanged("usermodified");
					this.OnusermodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_grade_outcomes_courses")]
	public partial class mdl_grade_outcomes_course : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _courseid;

		private decimal _outcomeid;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OnoutcomeidChanging(decimal value);
		partial void OnoutcomeidChanged();
		#endregion

		public mdl_grade_outcomes_course()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_outcomeid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal outcomeid
		{
			get
			{
				return this._outcomeid;
			}
			set
			{
				if (this._outcomeid != value)
				{
					this.OnoutcomeidChanging(value);
					this.SendPropertyChanging();
					this._outcomeid = value;
					this.SendPropertyChanged("outcomeid");
					this.OnoutcomeidChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_grade_outcomes_history")]
	public partial class mdl_grade_outcomes_history : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _action;

		private decimal _oldid;

		private string _source;

		private System.Nullable<decimal> _timemodified;

		private System.Nullable<decimal> _loggeduser;

		private System.Nullable<decimal> _courseid;

		private string _shortname;

		private string _fullname;

		private System.Nullable<decimal> _scaleid;

		private string _description;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnactionChanging(decimal value);
		partial void OnactionChanged();
		partial void OnoldidChanging(decimal value);
		partial void OnoldidChanged();
		partial void OnsourceChanging(string value);
		partial void OnsourceChanged();
		partial void OntimemodifiedChanging(System.Nullable<decimal> value);
		partial void OntimemodifiedChanged();
		partial void OnloggeduserChanging(System.Nullable<decimal> value);
		partial void OnloggeduserChanged();
		partial void OncourseidChanging(System.Nullable<decimal> value);
		partial void OncourseidChanged();
		partial void OnshortnameChanging(string value);
		partial void OnshortnameChanged();
		partial void OnfullnameChanging(string value);
		partial void OnfullnameChanged();
		partial void OnscaleidChanging(System.Nullable<decimal> value);
		partial void OnscaleidChanged();
		partial void OndescriptionChanging(string value);
		partial void OndescriptionChanged();
		#endregion

		public mdl_grade_outcomes_history()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_action", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal action
		{
			get
			{
				return this._action;
			}
			set
			{
				if (this._action != value)
				{
					this.OnactionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("action");
					this.OnactionChanged();
				}
			}
		}

		[Column(Storage = "_oldid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal oldid
		{
			get
			{
				return this._oldid;
			}
			set
			{
				if (this._oldid != value)
				{
					this.OnoldidChanging(value);
					this.SendPropertyChanging();
					this._oldid = value;
					this.SendPropertyChanged("oldid");
					this.OnoldidChanged();
				}
			}
		}

		[Column(Storage = "_source", DbType = "varchar(765)")]
		public string source
		{
			get
			{
				return this._source;
			}
			set
			{
				if (this._source != value)
				{
					this.OnsourceChanging(value);
					this.SendPropertyChanging();
					this._source = value;
					this.SendPropertyChanged("source");
					this.OnsourceChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", DbType = "bigint(10)")]
		public System.Nullable<decimal> timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_loggeduser", DbType = "bigint(10)")]
		public System.Nullable<decimal> loggeduser
		{
			get
			{
				return this._loggeduser;
			}
			set
			{
				if (this._loggeduser != value)
				{
					this.OnloggeduserChanging(value);
					this.SendPropertyChanging();
					this._loggeduser = value;
					this.SendPropertyChanged("loggeduser");
					this.OnloggeduserChanged();
				}
			}
		}

		[Column(Storage = "_courseid", DbType = "bigint(10)")]
		public System.Nullable<decimal> courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_shortname", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string shortname
		{
			get
			{
				return this._shortname;
			}
			set
			{
				if (this._shortname != value)
				{
					this.OnshortnameChanging(value);
					this.SendPropertyChanging();
					this._shortname = value;
					this.SendPropertyChanged("shortname");
					this.OnshortnameChanged();
				}
			}
		}

		[Column(Storage = "_fullname", CanBeNull = false, DbType = "text NOT NULL")]
		public string fullname
		{
			get
			{
				return this._fullname;
			}
			set
			{
				if (this._fullname != value)
				{
					this.OnfullnameChanging(value);
					this.SendPropertyChanging();
					this._fullname = value;
					this.SendPropertyChanged("fullname");
					this.OnfullnameChanged();
				}
			}
		}

		[Column(Storage = "_scaleid", DbType = "bigint(10)")]
		public System.Nullable<decimal> scaleid
		{
			get
			{
				return this._scaleid;
			}
			set
			{
				if (this._scaleid != value)
				{
					this.OnscaleidChanging(value);
					this.SendPropertyChanging();
					this._scaleid = value;
					this.SendPropertyChanged("scaleid");
					this.OnscaleidChanged();
				}
			}
		}

		[Column(Storage = "_description", DbType = "text")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if (this._description != value)
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_grade_settings")]
	public partial class mdl_grade_setting : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _courseid;

		private string _name;

		private string _value;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnvalueChanging(string value);
		partial void OnvalueChanged();
		#endregion

		public mdl_grade_setting()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_value", DbType = "text")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if (this._value != value)
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_groupings")]
	public partial class mdl_grouping : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _courseid;

		private string _name;

		private string _description;

		private string _configdata;

		private decimal _timecreated;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OndescriptionChanging(string value);
		partial void OndescriptionChanged();
		partial void OnconfigdataChanging(string value);
		partial void OnconfigdataChanged();
		partial void OntimecreatedChanging(decimal value);
		partial void OntimecreatedChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_grouping()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_description", DbType = "text")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if (this._description != value)
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}

		[Column(Storage = "_configdata", DbType = "text")]
		public string configdata
		{
			get
			{
				return this._configdata;
			}
			set
			{
				if (this._configdata != value)
				{
					this.OnconfigdataChanging(value);
					this.SendPropertyChanging();
					this._configdata = value;
					this.SendPropertyChanged("configdata");
					this.OnconfigdataChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_groupings_groups")]
	public partial class mdl_groupings_group : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _groupingid;

		private decimal _groupid;

		private decimal _timeadded;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OngroupingidChanging(decimal value);
		partial void OngroupingidChanged();
		partial void OngroupidChanging(decimal value);
		partial void OngroupidChanged();
		partial void OntimeaddedChanging(decimal value);
		partial void OntimeaddedChanged();
		#endregion

		public mdl_groupings_group()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_groupingid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal groupingid
		{
			get
			{
				return this._groupingid;
			}
			set
			{
				if (this._groupingid != value)
				{
					this.OngroupingidChanging(value);
					this.SendPropertyChanging();
					this._groupingid = value;
					this.SendPropertyChanged("groupingid");
					this.OngroupingidChanged();
				}
			}
		}

		[Column(Storage = "_groupid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal groupid
		{
			get
			{
				return this._groupid;
			}
			set
			{
				if (this._groupid != value)
				{
					this.OngroupidChanging(value);
					this.SendPropertyChanging();
					this._groupid = value;
					this.SendPropertyChanged("groupid");
					this.OngroupidChanged();
				}
			}
		}

		[Column(Storage = "_timeadded", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeadded
		{
			get
			{
				return this._timeadded;
			}
			set
			{
				if (this._timeadded != value)
				{
					this.OntimeaddedChanging(value);
					this.SendPropertyChanging();
					this._timeadded = value;
					this.SendPropertyChanged("timeadded");
					this.OntimeaddedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_groups")]
	public partial class mdl_group : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _courseid;

		private string _name;

		private string _description;

		private string _enrolmentkey;

		private decimal _picture;

		private byte _hidepicture;

		private decimal _timecreated;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OndescriptionChanging(string value);
		partial void OndescriptionChanged();
		partial void OnenrolmentkeyChanging(string value);
		partial void OnenrolmentkeyChanged();
		partial void OnpictureChanging(decimal value);
		partial void OnpictureChanged();
		partial void OnhidepictureChanging(byte value);
		partial void OnhidepictureChanged();
		partial void OntimecreatedChanging(decimal value);
		partial void OntimecreatedChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_group()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(762) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_description", DbType = "text")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if (this._description != value)
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}

		[Column(Storage = "_enrolmentkey", DbType = "varchar(150)")]
		public string enrolmentkey
		{
			get
			{
				return this._enrolmentkey;
			}
			set
			{
				if (this._enrolmentkey != value)
				{
					this.OnenrolmentkeyChanging(value);
					this.SendPropertyChanging();
					this._enrolmentkey = value;
					this.SendPropertyChanged("enrolmentkey");
					this.OnenrolmentkeyChanged();
				}
			}
		}

		[Column(Storage = "_picture", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal picture
		{
			get
			{
				return this._picture;
			}
			set
			{
				if (this._picture != value)
				{
					this.OnpictureChanging(value);
					this.SendPropertyChanging();
					this._picture = value;
					this.SendPropertyChanged("picture");
					this.OnpictureChanged();
				}
			}
		}

		[Column(Storage = "_hidepicture", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte hidepicture
		{
			get
			{
				return this._hidepicture;
			}
			set
			{
				if (this._hidepicture != value)
				{
					this.OnhidepictureChanging(value);
					this.SendPropertyChanging();
					this._hidepicture = value;
					this.SendPropertyChanged("hidepicture");
					this.OnhidepictureChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_groups_members")]
	public partial class mdl_groups_member : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _groupid;

		private decimal _userid;

		private decimal _timeadded;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OngroupidChanging(decimal value);
		partial void OngroupidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OntimeaddedChanging(decimal value);
		partial void OntimeaddedChanged();
		#endregion

		public mdl_groups_member()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_groupid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal groupid
		{
			get
			{
				return this._groupid;
			}
			set
			{
				if (this._groupid != value)
				{
					this.OngroupidChanging(value);
					this.SendPropertyChanging();
					this._groupid = value;
					this.SendPropertyChanged("groupid");
					this.OngroupidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_timeadded", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeadded
		{
			get
			{
				return this._timeadded;
			}
			set
			{
				if (this._timeadded != value)
				{
					this.OntimeaddedChanging(value);
					this.SendPropertyChanging();
					this._timeadded = value;
					this.SendPropertyChanged("timeadded");
					this.OntimeaddedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_hotpot")]
	public partial class mdl_hotpot : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private string _name;

		private string _summary;

		private decimal _timeopen;

		private decimal _timeclose;

		private int _location;

		private string _reference;

		private int _outputformat;

		private int _navigation;

		private int _studentfeedback;

		private string _studentfeedbackurl;

		private int _forceplugins;

		private int _shownextquiz;

		private short _review;

		private long _grade;

		private short _grademethod;

		private int _attempts;

		private string _password;

		private string _subnet;

		private int _clickreporting;

		private decimal _timecreated;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnsummaryChanging(string value);
		partial void OnsummaryChanged();
		partial void OntimeopenChanging(decimal value);
		partial void OntimeopenChanged();
		partial void OntimecloseChanging(decimal value);
		partial void OntimecloseChanged();
		partial void OnlocationChanging(int value);
		partial void OnlocationChanged();
		partial void OnreferenceChanging(string value);
		partial void OnreferenceChanged();
		partial void OnoutputformatChanging(int value);
		partial void OnoutputformatChanged();
		partial void OnnavigationChanging(int value);
		partial void OnnavigationChanged();
		partial void OnstudentfeedbackChanging(int value);
		partial void OnstudentfeedbackChanged();
		partial void OnstudentfeedbackurlChanging(string value);
		partial void OnstudentfeedbackurlChanged();
		partial void OnforcepluginsChanging(int value);
		partial void OnforcepluginsChanged();
		partial void OnshownextquizChanging(int value);
		partial void OnshownextquizChanged();
		partial void OnreviewChanging(short value);
		partial void OnreviewChanged();
		partial void OngradeChanging(long value);
		partial void OngradeChanged();
		partial void OngrademethodChanging(short value);
		partial void OngrademethodChanged();
		partial void OnattemptsChanging(int value);
		partial void OnattemptsChanged();
		partial void OnpasswordChanging(string value);
		partial void OnpasswordChanged();
		partial void OnsubnetChanging(string value);
		partial void OnsubnetChanged();
		partial void OnclickreportingChanging(int value);
		partial void OnclickreportingChanged();
		partial void OntimecreatedChanging(decimal value);
		partial void OntimecreatedChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_hotpot()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_summary", CanBeNull = false, DbType = "text NOT NULL")]
		public string summary
		{
			get
			{
				return this._summary;
			}
			set
			{
				if (this._summary != value)
				{
					this.OnsummaryChanging(value);
					this.SendPropertyChanging();
					this._summary = value;
					this.SendPropertyChanged("summary");
					this.OnsummaryChanged();
				}
			}
		}

		[Column(Storage = "_timeopen", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeopen
		{
			get
			{
				return this._timeopen;
			}
			set
			{
				if (this._timeopen != value)
				{
					this.OntimeopenChanging(value);
					this.SendPropertyChanging();
					this._timeopen = value;
					this.SendPropertyChanged("timeopen");
					this.OntimeopenChanged();
				}
			}
		}

		[Column(Storage = "_timeclose", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeclose
		{
			get
			{
				return this._timeclose;
			}
			set
			{
				if (this._timeclose != value)
				{
					this.OntimecloseChanging(value);
					this.SendPropertyChanging();
					this._timeclose = value;
					this.SendPropertyChanged("timeclose");
					this.OntimecloseChanged();
				}
			}
		}

		[Column(Storage = "_location", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int location
		{
			get
			{
				return this._location;
			}
			set
			{
				if (this._location != value)
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}

		[Column(Storage = "_reference", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string reference
		{
			get
			{
				return this._reference;
			}
			set
			{
				if (this._reference != value)
				{
					this.OnreferenceChanging(value);
					this.SendPropertyChanging();
					this._reference = value;
					this.SendPropertyChanged("reference");
					this.OnreferenceChanged();
				}
			}
		}

		[Column(Storage = "_outputformat", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int outputformat
		{
			get
			{
				return this._outputformat;
			}
			set
			{
				if (this._outputformat != value)
				{
					this.OnoutputformatChanging(value);
					this.SendPropertyChanging();
					this._outputformat = value;
					this.SendPropertyChanged("outputformat");
					this.OnoutputformatChanged();
				}
			}
		}

		[Column(Storage = "_navigation", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int navigation
		{
			get
			{
				return this._navigation;
			}
			set
			{
				if (this._navigation != value)
				{
					this.OnnavigationChanging(value);
					this.SendPropertyChanging();
					this._navigation = value;
					this.SendPropertyChanged("navigation");
					this.OnnavigationChanged();
				}
			}
		}

		[Column(Storage = "_studentfeedback", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int studentfeedback
		{
			get
			{
				return this._studentfeedback;
			}
			set
			{
				if (this._studentfeedback != value)
				{
					this.OnstudentfeedbackChanging(value);
					this.SendPropertyChanging();
					this._studentfeedback = value;
					this.SendPropertyChanged("studentfeedback");
					this.OnstudentfeedbackChanged();
				}
			}
		}

		[Column(Storage = "_studentfeedbackurl", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string studentfeedbackurl
		{
			get
			{
				return this._studentfeedbackurl;
			}
			set
			{
				if (this._studentfeedbackurl != value)
				{
					this.OnstudentfeedbackurlChanging(value);
					this.SendPropertyChanging();
					this._studentfeedbackurl = value;
					this.SendPropertyChanged("studentfeedbackurl");
					this.OnstudentfeedbackurlChanged();
				}
			}
		}

		[Column(Storage = "_forceplugins", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int forceplugins
		{
			get
			{
				return this._forceplugins;
			}
			set
			{
				if (this._forceplugins != value)
				{
					this.OnforcepluginsChanging(value);
					this.SendPropertyChanging();
					this._forceplugins = value;
					this.SendPropertyChanged("forceplugins");
					this.OnforcepluginsChanged();
				}
			}
		}

		[Column(Storage = "_shownextquiz", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int shownextquiz
		{
			get
			{
				return this._shownextquiz;
			}
			set
			{
				if (this._shownextquiz != value)
				{
					this.OnshownextquizChanging(value);
					this.SendPropertyChanging();
					this._shownextquiz = value;
					this.SendPropertyChanged("shownextquiz");
					this.OnshownextquizChanged();
				}
			}
		}

		[Column(Storage = "_review", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public short review
		{
			get
			{
				return this._review;
			}
			set
			{
				if (this._review != value)
				{
					this.OnreviewChanging(value);
					this.SendPropertyChanging();
					this._review = value;
					this.SendPropertyChanged("review");
					this.OnreviewChanged();
				}
			}
		}

		[Column(Storage = "_grade", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if (this._grade != value)
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}

		[Column(Storage = "_grademethod", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public short grademethod
		{
			get
			{
				return this._grademethod;
			}
			set
			{
				if (this._grademethod != value)
				{
					this.OngrademethodChanging(value);
					this.SendPropertyChanging();
					this._grademethod = value;
					this.SendPropertyChanged("grademethod");
					this.OngrademethodChanged();
				}
			}
		}

		[Column(Storage = "_attempts", CanBeNull = false, DbType = "mediumint(6) NOT NULL")]
		public int attempts
		{
			get
			{
				return this._attempts;
			}
			set
			{
				if (this._attempts != value)
				{
					this.OnattemptsChanging(value);
					this.SendPropertyChanging();
					this._attempts = value;
					this.SendPropertyChanged("attempts");
					this.OnattemptsChanged();
				}
			}
		}

		[Column(Storage = "_password", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if (this._password != value)
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}

		[Column(Storage = "_subnet", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string subnet
		{
			get
			{
				return this._subnet;
			}
			set
			{
				if (this._subnet != value)
				{
					this.OnsubnetChanging(value);
					this.SendPropertyChanging();
					this._subnet = value;
					this.SendPropertyChanged("subnet");
					this.OnsubnetChanged();
				}
			}
		}

		[Column(Storage = "_clickreporting", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int clickreporting
		{
			get
			{
				return this._clickreporting;
			}
			set
			{
				if (this._clickreporting != value)
				{
					this.OnclickreportingChanging(value);
					this.SendPropertyChanging();
					this._clickreporting = value;
					this.SendPropertyChanged("clickreporting");
					this.OnclickreportingChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_hotpot_attempts")]
	public partial class mdl_hotpot_attempt : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _hotpot;

		private decimal _userid;

		private decimal _starttime;

		private decimal _endtime;

		private int _score;

		private int _penalties;

		private int _attempt;

		private decimal _timestart;

		private decimal _timefinish;

		private int _status;

		private decimal _clickreportid;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnhotpotChanging(decimal value);
		partial void OnhotpotChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnstarttimeChanging(decimal value);
		partial void OnstarttimeChanged();
		partial void OnendtimeChanging(decimal value);
		partial void OnendtimeChanged();
		partial void OnscoreChanging(int value);
		partial void OnscoreChanged();
		partial void OnpenaltiesChanging(int value);
		partial void OnpenaltiesChanged();
		partial void OnattemptChanging(int value);
		partial void OnattemptChanged();
		partial void OntimestartChanging(decimal value);
		partial void OntimestartChanged();
		partial void OntimefinishChanging(decimal value);
		partial void OntimefinishChanged();
		partial void OnstatusChanging(int value);
		partial void OnstatusChanged();
		partial void OnclickreportidChanging(decimal value);
		partial void OnclickreportidChanged();
		#endregion

		public mdl_hotpot_attempt()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_hotpot", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal hotpot
		{
			get
			{
				return this._hotpot;
			}
			set
			{
				if (this._hotpot != value)
				{
					this.OnhotpotChanging(value);
					this.SendPropertyChanging();
					this._hotpot = value;
					this.SendPropertyChanged("hotpot");
					this.OnhotpotChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_starttime", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal starttime
		{
			get
			{
				return this._starttime;
			}
			set
			{
				if (this._starttime != value)
				{
					this.OnstarttimeChanging(value);
					this.SendPropertyChanging();
					this._starttime = value;
					this.SendPropertyChanged("starttime");
					this.OnstarttimeChanged();
				}
			}
		}

		[Column(Storage = "_endtime", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal endtime
		{
			get
			{
				return this._endtime;
			}
			set
			{
				if (this._endtime != value)
				{
					this.OnendtimeChanging(value);
					this.SendPropertyChanging();
					this._endtime = value;
					this.SendPropertyChanged("endtime");
					this.OnendtimeChanged();
				}
			}
		}

		[Column(Storage = "_score", CanBeNull = false, DbType = "mediumint(6) NOT NULL")]
		public int score
		{
			get
			{
				return this._score;
			}
			set
			{
				if (this._score != value)
				{
					this.OnscoreChanging(value);
					this.SendPropertyChanging();
					this._score = value;
					this.SendPropertyChanged("score");
					this.OnscoreChanged();
				}
			}
		}

		[Column(Storage = "_penalties", CanBeNull = false, DbType = "mediumint(6) NOT NULL")]
		public int penalties
		{
			get
			{
				return this._penalties;
			}
			set
			{
				if (this._penalties != value)
				{
					this.OnpenaltiesChanging(value);
					this.SendPropertyChanging();
					this._penalties = value;
					this.SendPropertyChanged("penalties");
					this.OnpenaltiesChanged();
				}
			}
		}

		[Column(Storage = "_attempt", CanBeNull = false, DbType = "mediumint(6) NOT NULL")]
		public int attempt
		{
			get
			{
				return this._attempt;
			}
			set
			{
				if (this._attempt != value)
				{
					this.OnattemptChanging(value);
					this.SendPropertyChanging();
					this._attempt = value;
					this.SendPropertyChanged("attempt");
					this.OnattemptChanged();
				}
			}
		}

		[Column(Storage = "_timestart", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timestart
		{
			get
			{
				return this._timestart;
			}
			set
			{
				if (this._timestart != value)
				{
					this.OntimestartChanging(value);
					this.SendPropertyChanging();
					this._timestart = value;
					this.SendPropertyChanged("timestart");
					this.OntimestartChanged();
				}
			}
		}

		[Column(Storage = "_timefinish", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timefinish
		{
			get
			{
				return this._timefinish;
			}
			set
			{
				if (this._timefinish != value)
				{
					this.OntimefinishChanging(value);
					this.SendPropertyChanging();
					this._timefinish = value;
					this.SendPropertyChanged("timefinish");
					this.OntimefinishChanged();
				}
			}
		}

		[Column(Storage = "_status", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if (this._status != value)
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}

		[Column(Storage = "_clickreportid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal clickreportid
		{
			get
			{
				return this._clickreportid;
			}
			set
			{
				if (this._clickreportid != value)
				{
					this.OnclickreportidChanging(value);
					this.SendPropertyChanging();
					this._clickreportid = value;
					this.SendPropertyChanged("clickreportid");
					this.OnclickreportidChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_hotpot_details")]
	public partial class mdl_hotpot_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _attempt;

		private string _details;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnattemptChanging(decimal value);
		partial void OnattemptChanged();
		partial void OndetailsChanging(string value);
		partial void OndetailsChanged();
		#endregion

		public mdl_hotpot_detail()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_attempt", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal attempt
		{
			get
			{
				return this._attempt;
			}
			set
			{
				if (this._attempt != value)
				{
					this.OnattemptChanging(value);
					this.SendPropertyChanging();
					this._attempt = value;
					this.SendPropertyChanged("attempt");
					this.OnattemptChanged();
				}
			}
		}

		[Column(Storage = "_details", DbType = "text")]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if (this._details != value)
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_hotpot_questions")]
	public partial class mdl_hotpot_question : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _name;

		private int _type;

		private decimal _text;

		private decimal _hotpot;

		private string _md5key;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OntypeChanging(int value);
		partial void OntypeChanged();
		partial void OntextChanging(decimal value);
		partial void OntextChanged();
		partial void OnhotpotChanging(decimal value);
		partial void OnhotpotChanged();
		partial void Onmd5keyChanging(string value);
		partial void Onmd5keyChanged();
		#endregion

		public mdl_hotpot_question()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "text NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_type", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int type
		{
			get
			{
				return this._type;
			}
			set
			{
				if (this._type != value)
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}

		[Column(Storage = "_text", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal text
		{
			get
			{
				return this._text;
			}
			set
			{
				if (this._text != value)
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}

		[Column(Storage = "_hotpot", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal hotpot
		{
			get
			{
				return this._hotpot;
			}
			set
			{
				if (this._hotpot != value)
				{
					this.OnhotpotChanging(value);
					this.SendPropertyChanging();
					this._hotpot = value;
					this.SendPropertyChanged("hotpot");
					this.OnhotpotChanged();
				}
			}
		}

		[Column(Storage = "_md5key", CanBeNull = false, DbType = "varchar(96) NOT NULL")]
		public string md5key
		{
			get
			{
				return this._md5key;
			}
			set
			{
				if (this._md5key != value)
				{
					this.Onmd5keyChanging(value);
					this.SendPropertyChanging();
					this._md5key = value;
					this.SendPropertyChanged("md5key");
					this.Onmd5keyChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_hotpot_responses")]
	public partial class mdl_hotpot_response : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _attempt;

		private decimal _question;

		private int _score;

		private int _weighting;

		private string _correct;

		private string _wrong;

		private string _ignored;

		private int _hints;

		private int _clues;

		private int _checks;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnattemptChanging(decimal value);
		partial void OnattemptChanged();
		partial void OnquestionChanging(decimal value);
		partial void OnquestionChanged();
		partial void OnscoreChanging(int value);
		partial void OnscoreChanged();
		partial void OnweightingChanging(int value);
		partial void OnweightingChanged();
		partial void OncorrectChanging(string value);
		partial void OncorrectChanged();
		partial void OnwrongChanging(string value);
		partial void OnwrongChanged();
		partial void OnignoredChanging(string value);
		partial void OnignoredChanged();
		partial void OnhintsChanging(int value);
		partial void OnhintsChanged();
		partial void OncluesChanging(int value);
		partial void OncluesChanged();
		partial void OnchecksChanging(int value);
		partial void OnchecksChanged();
		#endregion

		public mdl_hotpot_response()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_attempt", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal attempt
		{
			get
			{
				return this._attempt;
			}
			set
			{
				if (this._attempt != value)
				{
					this.OnattemptChanging(value);
					this.SendPropertyChanging();
					this._attempt = value;
					this.SendPropertyChanged("attempt");
					this.OnattemptChanged();
				}
			}
		}

		[Column(Storage = "_question", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal question
		{
			get
			{
				return this._question;
			}
			set
			{
				if (this._question != value)
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}

		[Column(Storage = "_score", CanBeNull = false, DbType = "mediumint(6) NOT NULL")]
		public int score
		{
			get
			{
				return this._score;
			}
			set
			{
				if (this._score != value)
				{
					this.OnscoreChanging(value);
					this.SendPropertyChanging();
					this._score = value;
					this.SendPropertyChanged("score");
					this.OnscoreChanged();
				}
			}
		}

		[Column(Storage = "_weighting", CanBeNull = false, DbType = "mediumint(6) NOT NULL")]
		public int weighting
		{
			get
			{
				return this._weighting;
			}
			set
			{
				if (this._weighting != value)
				{
					this.OnweightingChanging(value);
					this.SendPropertyChanging();
					this._weighting = value;
					this.SendPropertyChanged("weighting");
					this.OnweightingChanged();
				}
			}
		}

		[Column(Storage = "_correct", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string correct
		{
			get
			{
				return this._correct;
			}
			set
			{
				if (this._correct != value)
				{
					this.OncorrectChanging(value);
					this.SendPropertyChanging();
					this._correct = value;
					this.SendPropertyChanged("correct");
					this.OncorrectChanged();
				}
			}
		}

		[Column(Storage = "_wrong", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string wrong
		{
			get
			{
				return this._wrong;
			}
			set
			{
				if (this._wrong != value)
				{
					this.OnwrongChanging(value);
					this.SendPropertyChanging();
					this._wrong = value;
					this.SendPropertyChanged("wrong");
					this.OnwrongChanged();
				}
			}
		}

		[Column(Storage = "_ignored", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string ignored
		{
			get
			{
				return this._ignored;
			}
			set
			{
				if (this._ignored != value)
				{
					this.OnignoredChanging(value);
					this.SendPropertyChanging();
					this._ignored = value;
					this.SendPropertyChanged("ignored");
					this.OnignoredChanged();
				}
			}
		}

		[Column(Storage = "_hints", CanBeNull = false, DbType = "mediumint(6) NOT NULL")]
		public int hints
		{
			get
			{
				return this._hints;
			}
			set
			{
				if (this._hints != value)
				{
					this.OnhintsChanging(value);
					this.SendPropertyChanging();
					this._hints = value;
					this.SendPropertyChanged("hints");
					this.OnhintsChanged();
				}
			}
		}

		[Column(Storage = "_clues", CanBeNull = false, DbType = "mediumint(6) NOT NULL")]
		public int clues
		{
			get
			{
				return this._clues;
			}
			set
			{
				if (this._clues != value)
				{
					this.OncluesChanging(value);
					this.SendPropertyChanging();
					this._clues = value;
					this.SendPropertyChanged("clues");
					this.OncluesChanged();
				}
			}
		}

		[Column(Storage = "_checks", CanBeNull = false, DbType = "mediumint(6) NOT NULL")]
		public int checks
		{
			get
			{
				return this._checks;
			}
			set
			{
				if (this._checks != value)
				{
					this.OnchecksChanging(value);
					this.SendPropertyChanging();
					this._checks = value;
					this.SendPropertyChanged("checks");
					this.OnchecksChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_hotpot_strings")]
	public partial class mdl_hotpot_string : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _string;

		private string _md5key;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnstringChanging(string value);
		partial void OnstringChanged();
		partial void Onmd5keyChanging(string value);
		partial void Onmd5keyChanged();
		#endregion

		public mdl_hotpot_string()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_string", CanBeNull = false, DbType = "text NOT NULL")]
		public string @string
		{
			get
			{
				return this._string;
			}
			set
			{
				if (this._string != value)
				{
					this.OnstringChanging(value);
					this.SendPropertyChanging();
					this._string = value;
					this.SendPropertyChanged("@string");
					this.OnstringChanged();
				}
			}
		}

		[Column(Storage = "_md5key", CanBeNull = false, DbType = "varchar(96) NOT NULL")]
		public string md5key
		{
			get
			{
				return this._md5key;
			}
			set
			{
				if (this._md5key != value)
				{
					this.Onmd5keyChanging(value);
					this.SendPropertyChanging();
					this._md5key = value;
					this.SendPropertyChanged("md5key");
					this.Onmd5keyChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_journal")]
	public partial class mdl_journal : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private string _name;

		private string _intro;

		private short _introformat;

		private int _days;

		private long _assessed;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnintroChanging(string value);
		partial void OnintroChanged();
		partial void OnintroformatChanging(short value);
		partial void OnintroformatChanged();
		partial void OndaysChanging(int value);
		partial void OndaysChanged();
		partial void OnassessedChanging(long value);
		partial void OnassessedChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_journal()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_intro", CanBeNull = false, DbType = "text NOT NULL")]
		public string intro
		{
			get
			{
				return this._intro;
			}
			set
			{
				if (this._intro != value)
				{
					this.OnintroChanging(value);
					this.SendPropertyChanging();
					this._intro = value;
					this.SendPropertyChanged("intro");
					this.OnintroChanged();
				}
			}
		}

		[Column(Storage = "_introformat", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public short introformat
		{
			get
			{
				return this._introformat;
			}
			set
			{
				if (this._introformat != value)
				{
					this.OnintroformatChanging(value);
					this.SendPropertyChanging();
					this._introformat = value;
					this.SendPropertyChanged("introformat");
					this.OnintroformatChanged();
				}
			}
		}

		[Column(Storage = "_days", CanBeNull = false, DbType = "mediumint(5) NOT NULL")]
		public int days
		{
			get
			{
				return this._days;
			}
			set
			{
				if (this._days != value)
				{
					this.OndaysChanging(value);
					this.SendPropertyChanging();
					this._days = value;
					this.SendPropertyChanged("days");
					this.OndaysChanged();
				}
			}
		}

		[Column(Storage = "_assessed", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long assessed
		{
			get
			{
				return this._assessed;
			}
			set
			{
				if (this._assessed != value)
				{
					this.OnassessedChanging(value);
					this.SendPropertyChanging();
					this._assessed = value;
					this.SendPropertyChanged("assessed");
					this.OnassessedChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_journal_entries")]
	public partial class mdl_journal_entr : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _journal;

		private decimal _userid;

		private decimal _modified;

		private string _text;

		private short _format;

		private System.Nullable<long> _rating;

		private string _entrycomment;

		private decimal _teacher;

		private decimal _timemarked;

		private byte _mailed;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnjournalChanging(decimal value);
		partial void OnjournalChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnmodifiedChanging(decimal value);
		partial void OnmodifiedChanged();
		partial void OntextChanging(string value);
		partial void OntextChanged();
		partial void OnformatChanging(short value);
		partial void OnformatChanged();
		partial void OnratingChanging(System.Nullable<long> value);
		partial void OnratingChanged();
		partial void OnentrycommentChanging(string value);
		partial void OnentrycommentChanged();
		partial void OnteacherChanging(decimal value);
		partial void OnteacherChanged();
		partial void OntimemarkedChanging(decimal value);
		partial void OntimemarkedChanged();
		partial void OnmailedChanging(byte value);
		partial void OnmailedChanged();
		#endregion

		public mdl_journal_entr()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_journal", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal journal
		{
			get
			{
				return this._journal;
			}
			set
			{
				if (this._journal != value)
				{
					this.OnjournalChanging(value);
					this.SendPropertyChanging();
					this._journal = value;
					this.SendPropertyChanged("journal");
					this.OnjournalChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_modified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if (this._modified != value)
				{
					this.OnmodifiedChanging(value);
					this.SendPropertyChanging();
					this._modified = value;
					this.SendPropertyChanged("modified");
					this.OnmodifiedChanged();
				}
			}
		}

		[Column(Storage = "_text", CanBeNull = false, DbType = "text NOT NULL")]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if (this._text != value)
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}

		[Column(Storage = "_format", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public short format
		{
			get
			{
				return this._format;
			}
			set
			{
				if (this._format != value)
				{
					this.OnformatChanging(value);
					this.SendPropertyChanging();
					this._format = value;
					this.SendPropertyChanged("format");
					this.OnformatChanged();
				}
			}
		}

		[Column(Storage = "_rating", DbType = "bigint(10)")]
		public System.Nullable<long> rating
		{
			get
			{
				return this._rating;
			}
			set
			{
				if (this._rating != value)
				{
					this.OnratingChanging(value);
					this.SendPropertyChanging();
					this._rating = value;
					this.SendPropertyChanged("rating");
					this.OnratingChanged();
				}
			}
		}

		[Column(Storage = "_entrycomment", DbType = "text")]
		public string entrycomment
		{
			get
			{
				return this._entrycomment;
			}
			set
			{
				if (this._entrycomment != value)
				{
					this.OnentrycommentChanging(value);
					this.SendPropertyChanging();
					this._entrycomment = value;
					this.SendPropertyChanged("entrycomment");
					this.OnentrycommentChanged();
				}
			}
		}

		[Column(Storage = "_teacher", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal teacher
		{
			get
			{
				return this._teacher;
			}
			set
			{
				if (this._teacher != value)
				{
					this.OnteacherChanging(value);
					this.SendPropertyChanging();
					this._teacher = value;
					this.SendPropertyChanged("teacher");
					this.OnteacherChanged();
				}
			}
		}

		[Column(Storage = "_timemarked", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemarked
		{
			get
			{
				return this._timemarked;
			}
			set
			{
				if (this._timemarked != value)
				{
					this.OntimemarkedChanging(value);
					this.SendPropertyChanging();
					this._timemarked = value;
					this.SendPropertyChanged("timemarked");
					this.OntimemarkedChanged();
				}
			}
		}

		[Column(Storage = "_mailed", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte mailed
		{
			get
			{
				return this._mailed;
			}
			set
			{
				if (this._mailed != value)
				{
					this.OnmailedChanging(value);
					this.SendPropertyChanging();
					this._mailed = value;
					this.SendPropertyChanged("mailed");
					this.OnmailedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_label")]
	public partial class mdl_label : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private string _name;

		private string _content;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OncontentChanging(string value);
		partial void OncontentChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_label()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_content", CanBeNull = false, DbType = "text NOT NULL")]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if (this._content != value)
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_lams")]
	public partial class mdl_lam : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private string _name;

		private string _introduction;

		private System.Nullable<long> _learning_session_id;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnintroductionChanging(string value);
		partial void OnintroductionChanged();
		partial void Onlearning_session_idChanging(System.Nullable<long> value);
		partial void Onlearning_session_idChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_lam()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_introduction", CanBeNull = false, DbType = "text NOT NULL")]
		public string introduction
		{
			get
			{
				return this._introduction;
			}
			set
			{
				if (this._introduction != value)
				{
					this.OnintroductionChanging(value);
					this.SendPropertyChanging();
					this._introduction = value;
					this.SendPropertyChanged("introduction");
					this.OnintroductionChanged();
				}
			}
		}

		[Column(Storage = "_learning_session_id", DbType = "bigint(20)")]
		public System.Nullable<long> learning_session_id
		{
			get
			{
				return this._learning_session_id;
			}
			set
			{
				if (this._learning_session_id != value)
				{
					this.Onlearning_session_idChanging(value);
					this.SendPropertyChanging();
					this._learning_session_id = value;
					this.SendPropertyChanged("learning_session_id");
					this.Onlearning_session_idChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_lesson")]
	public partial class mdl_lesson : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private string _name;

		private int _practice;

		private int _modattempts;

		private int _usepassword;

		private string _password;

		private decimal _dependency;

		private string _conditions;

		private short _grade;

		private int _custom;

		private int _ongoing;

		private short _usemaxgrade;

		private int _maxanswers;

		private int _maxattempts;

		private int _review;

		private int _nextpagedefault;

		private int _feedback;

		private int _minquestions;

		private int _maxpages;

		private int _timed;

		private decimal _maxtime;

		private int _retake;

		private decimal _activitylink;

		private string _mediafile;

		private decimal _mediaheight;

		private decimal _mediawidth;

		private int _mediaclose;

		private int _slideshow;

		private decimal _width;

		private decimal _height;

		private string _bgcolor;

		private int _displayleft;

		private int _displayleftif;

		private int _progressbar;

		private int _highscores;

		private decimal _maxhighscores;

		private decimal _available;

		private decimal _deadline;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnpracticeChanging(int value);
		partial void OnpracticeChanged();
		partial void OnmodattemptsChanging(int value);
		partial void OnmodattemptsChanged();
		partial void OnusepasswordChanging(int value);
		partial void OnusepasswordChanged();
		partial void OnpasswordChanging(string value);
		partial void OnpasswordChanged();
		partial void OndependencyChanging(decimal value);
		partial void OndependencyChanged();
		partial void OnconditionsChanging(string value);
		partial void OnconditionsChanged();
		partial void OngradeChanging(short value);
		partial void OngradeChanged();
		partial void OncustomChanging(int value);
		partial void OncustomChanged();
		partial void OnongoingChanging(int value);
		partial void OnongoingChanged();
		partial void OnusemaxgradeChanging(short value);
		partial void OnusemaxgradeChanged();
		partial void OnmaxanswersChanging(int value);
		partial void OnmaxanswersChanged();
		partial void OnmaxattemptsChanging(int value);
		partial void OnmaxattemptsChanged();
		partial void OnreviewChanging(int value);
		partial void OnreviewChanged();
		partial void OnnextpagedefaultChanging(int value);
		partial void OnnextpagedefaultChanged();
		partial void OnfeedbackChanging(int value);
		partial void OnfeedbackChanged();
		partial void OnminquestionsChanging(int value);
		partial void OnminquestionsChanged();
		partial void OnmaxpagesChanging(int value);
		partial void OnmaxpagesChanged();
		partial void OntimedChanging(int value);
		partial void OntimedChanged();
		partial void OnmaxtimeChanging(decimal value);
		partial void OnmaxtimeChanged();
		partial void OnretakeChanging(int value);
		partial void OnretakeChanged();
		partial void OnactivitylinkChanging(decimal value);
		partial void OnactivitylinkChanged();
		partial void OnmediafileChanging(string value);
		partial void OnmediafileChanged();
		partial void OnmediaheightChanging(decimal value);
		partial void OnmediaheightChanged();
		partial void OnmediawidthChanging(decimal value);
		partial void OnmediawidthChanged();
		partial void OnmediacloseChanging(int value);
		partial void OnmediacloseChanged();
		partial void OnslideshowChanging(int value);
		partial void OnslideshowChanged();
		partial void OnwidthChanging(decimal value);
		partial void OnwidthChanged();
		partial void OnheightChanging(decimal value);
		partial void OnheightChanged();
		partial void OnbgcolorChanging(string value);
		partial void OnbgcolorChanged();
		partial void OndisplayleftChanging(int value);
		partial void OndisplayleftChanged();
		partial void OndisplayleftifChanging(int value);
		partial void OndisplayleftifChanged();
		partial void OnprogressbarChanging(int value);
		partial void OnprogressbarChanged();
		partial void OnhighscoresChanging(int value);
		partial void OnhighscoresChanged();
		partial void OnmaxhighscoresChanging(decimal value);
		partial void OnmaxhighscoresChanged();
		partial void OnavailableChanging(decimal value);
		partial void OnavailableChanged();
		partial void OndeadlineChanging(decimal value);
		partial void OndeadlineChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_lesson()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_practice", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int practice
		{
			get
			{
				return this._practice;
			}
			set
			{
				if (this._practice != value)
				{
					this.OnpracticeChanging(value);
					this.SendPropertyChanging();
					this._practice = value;
					this.SendPropertyChanged("practice");
					this.OnpracticeChanged();
				}
			}
		}

		[Column(Storage = "_modattempts", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int modattempts
		{
			get
			{
				return this._modattempts;
			}
			set
			{
				if (this._modattempts != value)
				{
					this.OnmodattemptsChanging(value);
					this.SendPropertyChanging();
					this._modattempts = value;
					this.SendPropertyChanged("modattempts");
					this.OnmodattemptsChanged();
				}
			}
		}

		[Column(Storage = "_usepassword", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int usepassword
		{
			get
			{
				return this._usepassword;
			}
			set
			{
				if (this._usepassword != value)
				{
					this.OnusepasswordChanging(value);
					this.SendPropertyChanging();
					this._usepassword = value;
					this.SendPropertyChanged("usepassword");
					this.OnusepasswordChanged();
				}
			}
		}

		[Column(Storage = "_password", CanBeNull = false, DbType = "varchar(96) NOT NULL")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if (this._password != value)
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}

		[Column(Storage = "_dependency", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal dependency
		{
			get
			{
				return this._dependency;
			}
			set
			{
				if (this._dependency != value)
				{
					this.OndependencyChanging(value);
					this.SendPropertyChanging();
					this._dependency = value;
					this.SendPropertyChanged("dependency");
					this.OndependencyChanged();
				}
			}
		}

		[Column(Storage = "_conditions", CanBeNull = false, DbType = "text NOT NULL")]
		public string conditions
		{
			get
			{
				return this._conditions;
			}
			set
			{
				if (this._conditions != value)
				{
					this.OnconditionsChanging(value);
					this.SendPropertyChanging();
					this._conditions = value;
					this.SendPropertyChanged("conditions");
					this.OnconditionsChanged();
				}
			}
		}

		[Column(Storage = "_grade", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public short grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if (this._grade != value)
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}

		[Column(Storage = "_custom", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int custom
		{
			get
			{
				return this._custom;
			}
			set
			{
				if (this._custom != value)
				{
					this.OncustomChanging(value);
					this.SendPropertyChanging();
					this._custom = value;
					this.SendPropertyChanged("custom");
					this.OncustomChanged();
				}
			}
		}

		[Column(Storage = "_ongoing", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int ongoing
		{
			get
			{
				return this._ongoing;
			}
			set
			{
				if (this._ongoing != value)
				{
					this.OnongoingChanging(value);
					this.SendPropertyChanging();
					this._ongoing = value;
					this.SendPropertyChanged("ongoing");
					this.OnongoingChanged();
				}
			}
		}

		[Column(Storage = "_usemaxgrade", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public short usemaxgrade
		{
			get
			{
				return this._usemaxgrade;
			}
			set
			{
				if (this._usemaxgrade != value)
				{
					this.OnusemaxgradeChanging(value);
					this.SendPropertyChanging();
					this._usemaxgrade = value;
					this.SendPropertyChanged("usemaxgrade");
					this.OnusemaxgradeChanged();
				}
			}
		}

		[Column(Storage = "_maxanswers", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int maxanswers
		{
			get
			{
				return this._maxanswers;
			}
			set
			{
				if (this._maxanswers != value)
				{
					this.OnmaxanswersChanging(value);
					this.SendPropertyChanging();
					this._maxanswers = value;
					this.SendPropertyChanged("maxanswers");
					this.OnmaxanswersChanged();
				}
			}
		}

		[Column(Storage = "_maxattempts", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int maxattempts
		{
			get
			{
				return this._maxattempts;
			}
			set
			{
				if (this._maxattempts != value)
				{
					this.OnmaxattemptsChanging(value);
					this.SendPropertyChanging();
					this._maxattempts = value;
					this.SendPropertyChanged("maxattempts");
					this.OnmaxattemptsChanged();
				}
			}
		}

		[Column(Storage = "_review", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int review
		{
			get
			{
				return this._review;
			}
			set
			{
				if (this._review != value)
				{
					this.OnreviewChanging(value);
					this.SendPropertyChanging();
					this._review = value;
					this.SendPropertyChanged("review");
					this.OnreviewChanged();
				}
			}
		}

		[Column(Storage = "_nextpagedefault", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int nextpagedefault
		{
			get
			{
				return this._nextpagedefault;
			}
			set
			{
				if (this._nextpagedefault != value)
				{
					this.OnnextpagedefaultChanging(value);
					this.SendPropertyChanging();
					this._nextpagedefault = value;
					this.SendPropertyChanged("nextpagedefault");
					this.OnnextpagedefaultChanged();
				}
			}
		}

		[Column(Storage = "_feedback", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int feedback
		{
			get
			{
				return this._feedback;
			}
			set
			{
				if (this._feedback != value)
				{
					this.OnfeedbackChanging(value);
					this.SendPropertyChanging();
					this._feedback = value;
					this.SendPropertyChanged("feedback");
					this.OnfeedbackChanged();
				}
			}
		}

		[Column(Storage = "_minquestions", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int minquestions
		{
			get
			{
				return this._minquestions;
			}
			set
			{
				if (this._minquestions != value)
				{
					this.OnminquestionsChanging(value);
					this.SendPropertyChanging();
					this._minquestions = value;
					this.SendPropertyChanged("minquestions");
					this.OnminquestionsChanged();
				}
			}
		}

		[Column(Storage = "_maxpages", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int maxpages
		{
			get
			{
				return this._maxpages;
			}
			set
			{
				if (this._maxpages != value)
				{
					this.OnmaxpagesChanging(value);
					this.SendPropertyChanging();
					this._maxpages = value;
					this.SendPropertyChanged("maxpages");
					this.OnmaxpagesChanged();
				}
			}
		}

		[Column(Storage = "_timed", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int timed
		{
			get
			{
				return this._timed;
			}
			set
			{
				if (this._timed != value)
				{
					this.OntimedChanging(value);
					this.SendPropertyChanging();
					this._timed = value;
					this.SendPropertyChanged("timed");
					this.OntimedChanged();
				}
			}
		}

		[Column(Storage = "_maxtime", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal maxtime
		{
			get
			{
				return this._maxtime;
			}
			set
			{
				if (this._maxtime != value)
				{
					this.OnmaxtimeChanging(value);
					this.SendPropertyChanging();
					this._maxtime = value;
					this.SendPropertyChanged("maxtime");
					this.OnmaxtimeChanged();
				}
			}
		}

		[Column(Storage = "_retake", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int retake
		{
			get
			{
				return this._retake;
			}
			set
			{
				if (this._retake != value)
				{
					this.OnretakeChanging(value);
					this.SendPropertyChanging();
					this._retake = value;
					this.SendPropertyChanged("retake");
					this.OnretakeChanged();
				}
			}
		}

		[Column(Storage = "_activitylink", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal activitylink
		{
			get
			{
				return this._activitylink;
			}
			set
			{
				if (this._activitylink != value)
				{
					this.OnactivitylinkChanging(value);
					this.SendPropertyChanging();
					this._activitylink = value;
					this.SendPropertyChanged("activitylink");
					this.OnactivitylinkChanged();
				}
			}
		}

		[Column(Storage = "_mediafile", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string mediafile
		{
			get
			{
				return this._mediafile;
			}
			set
			{
				if (this._mediafile != value)
				{
					this.OnmediafileChanging(value);
					this.SendPropertyChanging();
					this._mediafile = value;
					this.SendPropertyChanged("mediafile");
					this.OnmediafileChanged();
				}
			}
		}

		[Column(Storage = "_mediaheight", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal mediaheight
		{
			get
			{
				return this._mediaheight;
			}
			set
			{
				if (this._mediaheight != value)
				{
					this.OnmediaheightChanging(value);
					this.SendPropertyChanging();
					this._mediaheight = value;
					this.SendPropertyChanged("mediaheight");
					this.OnmediaheightChanged();
				}
			}
		}

		[Column(Storage = "_mediawidth", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal mediawidth
		{
			get
			{
				return this._mediawidth;
			}
			set
			{
				if (this._mediawidth != value)
				{
					this.OnmediawidthChanging(value);
					this.SendPropertyChanging();
					this._mediawidth = value;
					this.SendPropertyChanged("mediawidth");
					this.OnmediawidthChanged();
				}
			}
		}

		[Column(Storage = "_mediaclose", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int mediaclose
		{
			get
			{
				return this._mediaclose;
			}
			set
			{
				if (this._mediaclose != value)
				{
					this.OnmediacloseChanging(value);
					this.SendPropertyChanging();
					this._mediaclose = value;
					this.SendPropertyChanged("mediaclose");
					this.OnmediacloseChanged();
				}
			}
		}

		[Column(Storage = "_slideshow", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int slideshow
		{
			get
			{
				return this._slideshow;
			}
			set
			{
				if (this._slideshow != value)
				{
					this.OnslideshowChanging(value);
					this.SendPropertyChanging();
					this._slideshow = value;
					this.SendPropertyChanged("slideshow");
					this.OnslideshowChanged();
				}
			}
		}

		[Column(Storage = "_width", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal width
		{
			get
			{
				return this._width;
			}
			set
			{
				if (this._width != value)
				{
					this.OnwidthChanging(value);
					this.SendPropertyChanging();
					this._width = value;
					this.SendPropertyChanged("width");
					this.OnwidthChanged();
				}
			}
		}

		[Column(Storage = "_height", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal height
		{
			get
			{
				return this._height;
			}
			set
			{
				if (this._height != value)
				{
					this.OnheightChanging(value);
					this.SendPropertyChanging();
					this._height = value;
					this.SendPropertyChanged("height");
					this.OnheightChanged();
				}
			}
		}

		[Column(Storage = "_bgcolor", CanBeNull = false, DbType = "varchar(21) NOT NULL")]
		public string bgcolor
		{
			get
			{
				return this._bgcolor;
			}
			set
			{
				if (this._bgcolor != value)
				{
					this.OnbgcolorChanging(value);
					this.SendPropertyChanging();
					this._bgcolor = value;
					this.SendPropertyChanged("bgcolor");
					this.OnbgcolorChanged();
				}
			}
		}

		[Column(Storage = "_displayleft", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int displayleft
		{
			get
			{
				return this._displayleft;
			}
			set
			{
				if (this._displayleft != value)
				{
					this.OndisplayleftChanging(value);
					this.SendPropertyChanging();
					this._displayleft = value;
					this.SendPropertyChanged("displayleft");
					this.OndisplayleftChanged();
				}
			}
		}

		[Column(Storage = "_displayleftif", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int displayleftif
		{
			get
			{
				return this._displayleftif;
			}
			set
			{
				if (this._displayleftif != value)
				{
					this.OndisplayleftifChanging(value);
					this.SendPropertyChanging();
					this._displayleftif = value;
					this.SendPropertyChanged("displayleftif");
					this.OndisplayleftifChanged();
				}
			}
		}

		[Column(Storage = "_progressbar", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int progressbar
		{
			get
			{
				return this._progressbar;
			}
			set
			{
				if (this._progressbar != value)
				{
					this.OnprogressbarChanging(value);
					this.SendPropertyChanging();
					this._progressbar = value;
					this.SendPropertyChanged("progressbar");
					this.OnprogressbarChanged();
				}
			}
		}

		[Column(Storage = "_highscores", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int highscores
		{
			get
			{
				return this._highscores;
			}
			set
			{
				if (this._highscores != value)
				{
					this.OnhighscoresChanging(value);
					this.SendPropertyChanging();
					this._highscores = value;
					this.SendPropertyChanged("highscores");
					this.OnhighscoresChanged();
				}
			}
		}

		[Column(Storage = "_maxhighscores", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal maxhighscores
		{
			get
			{
				return this._maxhighscores;
			}
			set
			{
				if (this._maxhighscores != value)
				{
					this.OnmaxhighscoresChanging(value);
					this.SendPropertyChanging();
					this._maxhighscores = value;
					this.SendPropertyChanged("maxhighscores");
					this.OnmaxhighscoresChanged();
				}
			}
		}

		[Column(Storage = "_available", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal available
		{
			get
			{
				return this._available;
			}
			set
			{
				if (this._available != value)
				{
					this.OnavailableChanging(value);
					this.SendPropertyChanging();
					this._available = value;
					this.SendPropertyChanged("available");
					this.OnavailableChanged();
				}
			}
		}

		[Column(Storage = "_deadline", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal deadline
		{
			get
			{
				return this._deadline;
			}
			set
			{
				if (this._deadline != value)
				{
					this.OndeadlineChanging(value);
					this.SendPropertyChanging();
					this._deadline = value;
					this.SendPropertyChanged("deadline");
					this.OndeadlineChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_lesson_answers")]
	public partial class mdl_lesson_answer : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _lessonid;

		private decimal _pageid;

		private long _jumpto;

		private int _grade;

		private long _score;

		private int _flags;

		private decimal _timecreated;

		private decimal _timemodified;

		private string _answer;

		private string _response;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnlessonidChanging(decimal value);
		partial void OnlessonidChanged();
		partial void OnpageidChanging(decimal value);
		partial void OnpageidChanged();
		partial void OnjumptoChanging(long value);
		partial void OnjumptoChanged();
		partial void OngradeChanging(int value);
		partial void OngradeChanged();
		partial void OnscoreChanging(long value);
		partial void OnscoreChanged();
		partial void OnflagsChanging(int value);
		partial void OnflagsChanged();
		partial void OntimecreatedChanging(decimal value);
		partial void OntimecreatedChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		partial void OnanswerChanging(string value);
		partial void OnanswerChanged();
		partial void OnresponseChanging(string value);
		partial void OnresponseChanged();
		#endregion

		public mdl_lesson_answer()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_lessonid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal lessonid
		{
			get
			{
				return this._lessonid;
			}
			set
			{
				if (this._lessonid != value)
				{
					this.OnlessonidChanging(value);
					this.SendPropertyChanging();
					this._lessonid = value;
					this.SendPropertyChanged("lessonid");
					this.OnlessonidChanged();
				}
			}
		}

		[Column(Storage = "_pageid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal pageid
		{
			get
			{
				return this._pageid;
			}
			set
			{
				if (this._pageid != value)
				{
					this.OnpageidChanging(value);
					this.SendPropertyChanging();
					this._pageid = value;
					this.SendPropertyChanged("pageid");
					this.OnpageidChanged();
				}
			}
		}

		[Column(Storage = "_jumpto", CanBeNull = false, DbType = "bigint(11) NOT NULL")]
		public long jumpto
		{
			get
			{
				return this._jumpto;
			}
			set
			{
				if (this._jumpto != value)
				{
					this.OnjumptoChanging(value);
					this.SendPropertyChanging();
					this._jumpto = value;
					this.SendPropertyChanged("jumpto");
					this.OnjumptoChanged();
				}
			}
		}

		[Column(Storage = "_grade", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if (this._grade != value)
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}

		[Column(Storage = "_score", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long score
		{
			get
			{
				return this._score;
			}
			set
			{
				if (this._score != value)
				{
					this.OnscoreChanging(value);
					this.SendPropertyChanging();
					this._score = value;
					this.SendPropertyChanged("score");
					this.OnscoreChanged();
				}
			}
		}

		[Column(Storage = "_flags", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int flags
		{
			get
			{
				return this._flags;
			}
			set
			{
				if (this._flags != value)
				{
					this.OnflagsChanging(value);
					this.SendPropertyChanging();
					this._flags = value;
					this.SendPropertyChanged("flags");
					this.OnflagsChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_answer", DbType = "text")]
		public string answer
		{
			get
			{
				return this._answer;
			}
			set
			{
				if (this._answer != value)
				{
					this.OnanswerChanging(value);
					this.SendPropertyChanging();
					this._answer = value;
					this.SendPropertyChanged("answer");
					this.OnanswerChanged();
				}
			}
		}

		[Column(Storage = "_response", DbType = "text")]
		public string response
		{
			get
			{
				return this._response;
			}
			set
			{
				if (this._response != value)
				{
					this.OnresponseChanging(value);
					this.SendPropertyChanging();
					this._response = value;
					this.SendPropertyChanged("response");
					this.OnresponseChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_lesson_attempts")]
	public partial class mdl_lesson_attempt : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _lessonid;

		private decimal _pageid;

		private decimal _userid;

		private decimal _answerid;

		private int _retry;

		private decimal _correct;

		private string _useranswer;

		private decimal _timeseen;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnlessonidChanging(decimal value);
		partial void OnlessonidChanged();
		partial void OnpageidChanging(decimal value);
		partial void OnpageidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnansweridChanging(decimal value);
		partial void OnansweridChanged();
		partial void OnretryChanging(int value);
		partial void OnretryChanged();
		partial void OncorrectChanging(decimal value);
		partial void OncorrectChanged();
		partial void OnuseranswerChanging(string value);
		partial void OnuseranswerChanged();
		partial void OntimeseenChanging(decimal value);
		partial void OntimeseenChanged();
		#endregion

		public mdl_lesson_attempt()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_lessonid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal lessonid
		{
			get
			{
				return this._lessonid;
			}
			set
			{
				if (this._lessonid != value)
				{
					this.OnlessonidChanging(value);
					this.SendPropertyChanging();
					this._lessonid = value;
					this.SendPropertyChanged("lessonid");
					this.OnlessonidChanged();
				}
			}
		}

		[Column(Storage = "_pageid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal pageid
		{
			get
			{
				return this._pageid;
			}
			set
			{
				if (this._pageid != value)
				{
					this.OnpageidChanging(value);
					this.SendPropertyChanging();
					this._pageid = value;
					this.SendPropertyChanged("pageid");
					this.OnpageidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_answerid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal answerid
		{
			get
			{
				return this._answerid;
			}
			set
			{
				if (this._answerid != value)
				{
					this.OnansweridChanging(value);
					this.SendPropertyChanging();
					this._answerid = value;
					this.SendPropertyChanged("answerid");
					this.OnansweridChanged();
				}
			}
		}

		[Column(Storage = "_retry", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int retry
		{
			get
			{
				return this._retry;
			}
			set
			{
				if (this._retry != value)
				{
					this.OnretryChanging(value);
					this.SendPropertyChanging();
					this._retry = value;
					this.SendPropertyChanged("retry");
					this.OnretryChanged();
				}
			}
		}

		[Column(Storage = "_correct", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal correct
		{
			get
			{
				return this._correct;
			}
			set
			{
				if (this._correct != value)
				{
					this.OncorrectChanging(value);
					this.SendPropertyChanging();
					this._correct = value;
					this.SendPropertyChanged("correct");
					this.OncorrectChanged();
				}
			}
		}

		[Column(Storage = "_useranswer", DbType = "text")]
		public string useranswer
		{
			get
			{
				return this._useranswer;
			}
			set
			{
				if (this._useranswer != value)
				{
					this.OnuseranswerChanging(value);
					this.SendPropertyChanging();
					this._useranswer = value;
					this.SendPropertyChanged("useranswer");
					this.OnuseranswerChanged();
				}
			}
		}

		[Column(Storage = "_timeseen", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeseen
		{
			get
			{
				return this._timeseen;
			}
			set
			{
				if (this._timeseen != value)
				{
					this.OntimeseenChanging(value);
					this.SendPropertyChanging();
					this._timeseen = value;
					this.SendPropertyChanged("timeseen");
					this.OntimeseenChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_lesson_branch")]
	public partial class mdl_lesson_branch : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _lessonid;

		private decimal _userid;

		private decimal _pageid;

		private decimal _retry;

		private int _flag;

		private decimal _timeseen;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnlessonidChanging(decimal value);
		partial void OnlessonidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnpageidChanging(decimal value);
		partial void OnpageidChanged();
		partial void OnretryChanging(decimal value);
		partial void OnretryChanged();
		partial void OnflagChanging(int value);
		partial void OnflagChanged();
		partial void OntimeseenChanging(decimal value);
		partial void OntimeseenChanged();
		#endregion

		public mdl_lesson_branch()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_lessonid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal lessonid
		{
			get
			{
				return this._lessonid;
			}
			set
			{
				if (this._lessonid != value)
				{
					this.OnlessonidChanging(value);
					this.SendPropertyChanging();
					this._lessonid = value;
					this.SendPropertyChanged("lessonid");
					this.OnlessonidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_pageid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal pageid
		{
			get
			{
				return this._pageid;
			}
			set
			{
				if (this._pageid != value)
				{
					this.OnpageidChanging(value);
					this.SendPropertyChanging();
					this._pageid = value;
					this.SendPropertyChanged("pageid");
					this.OnpageidChanged();
				}
			}
		}

		[Column(Storage = "_retry", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal retry
		{
			get
			{
				return this._retry;
			}
			set
			{
				if (this._retry != value)
				{
					this.OnretryChanging(value);
					this.SendPropertyChanging();
					this._retry = value;
					this.SendPropertyChanged("retry");
					this.OnretryChanged();
				}
			}
		}

		[Column(Storage = "_flag", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int flag
		{
			get
			{
				return this._flag;
			}
			set
			{
				if (this._flag != value)
				{
					this.OnflagChanging(value);
					this.SendPropertyChanging();
					this._flag = value;
					this.SendPropertyChanged("flag");
					this.OnflagChanged();
				}
			}
		}

		[Column(Storage = "_timeseen", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeseen
		{
			get
			{
				return this._timeseen;
			}
			set
			{
				if (this._timeseen != value)
				{
					this.OntimeseenChanging(value);
					this.SendPropertyChanging();
					this._timeseen = value;
					this.SendPropertyChanged("timeseen");
					this.OntimeseenChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_lesson_default")]
	public partial class mdl_lesson_default : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private int _practice;

		private int _modattempts;

		private int _usepassword;

		private string _password;

		private string _conditions;

		private short _grade;

		private int _custom;

		private int _ongoing;

		private int _usemaxgrade;

		private int _maxanswers;

		private int _maxattempts;

		private int _review;

		private int _nextpagedefault;

		private int _feedback;

		private int _minquestions;

		private int _maxpages;

		private int _timed;

		private decimal _maxtime;

		private int _retake;

		private decimal _mediaheight;

		private decimal _mediawidth;

		private int _mediaclose;

		private int _slideshow;

		private decimal _width;

		private decimal _height;

		private string _bgcolor;

		private int _displayleft;

		private int _displayleftif;

		private int _progressbar;

		private int _highscores;

		private long _maxhighscores;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnpracticeChanging(int value);
		partial void OnpracticeChanged();
		partial void OnmodattemptsChanging(int value);
		partial void OnmodattemptsChanged();
		partial void OnusepasswordChanging(int value);
		partial void OnusepasswordChanged();
		partial void OnpasswordChanging(string value);
		partial void OnpasswordChanged();
		partial void OnconditionsChanging(string value);
		partial void OnconditionsChanged();
		partial void OngradeChanging(short value);
		partial void OngradeChanged();
		partial void OncustomChanging(int value);
		partial void OncustomChanged();
		partial void OnongoingChanging(int value);
		partial void OnongoingChanged();
		partial void OnusemaxgradeChanging(int value);
		partial void OnusemaxgradeChanged();
		partial void OnmaxanswersChanging(int value);
		partial void OnmaxanswersChanged();
		partial void OnmaxattemptsChanging(int value);
		partial void OnmaxattemptsChanged();
		partial void OnreviewChanging(int value);
		partial void OnreviewChanged();
		partial void OnnextpagedefaultChanging(int value);
		partial void OnnextpagedefaultChanged();
		partial void OnfeedbackChanging(int value);
		partial void OnfeedbackChanged();
		partial void OnminquestionsChanging(int value);
		partial void OnminquestionsChanged();
		partial void OnmaxpagesChanging(int value);
		partial void OnmaxpagesChanged();
		partial void OntimedChanging(int value);
		partial void OntimedChanged();
		partial void OnmaxtimeChanging(decimal value);
		partial void OnmaxtimeChanged();
		partial void OnretakeChanging(int value);
		partial void OnretakeChanged();
		partial void OnmediaheightChanging(decimal value);
		partial void OnmediaheightChanged();
		partial void OnmediawidthChanging(decimal value);
		partial void OnmediawidthChanged();
		partial void OnmediacloseChanging(int value);
		partial void OnmediacloseChanged();
		partial void OnslideshowChanging(int value);
		partial void OnslideshowChanged();
		partial void OnwidthChanging(decimal value);
		partial void OnwidthChanged();
		partial void OnheightChanging(decimal value);
		partial void OnheightChanged();
		partial void OnbgcolorChanging(string value);
		partial void OnbgcolorChanged();
		partial void OndisplayleftChanging(int value);
		partial void OndisplayleftChanged();
		partial void OndisplayleftifChanging(int value);
		partial void OndisplayleftifChanged();
		partial void OnprogressbarChanging(int value);
		partial void OnprogressbarChanged();
		partial void OnhighscoresChanging(int value);
		partial void OnhighscoresChanged();
		partial void OnmaxhighscoresChanging(long value);
		partial void OnmaxhighscoresChanged();
		#endregion

		public mdl_lesson_default()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_practice", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int practice
		{
			get
			{
				return this._practice;
			}
			set
			{
				if (this._practice != value)
				{
					this.OnpracticeChanging(value);
					this.SendPropertyChanging();
					this._practice = value;
					this.SendPropertyChanged("practice");
					this.OnpracticeChanged();
				}
			}
		}

		[Column(Storage = "_modattempts", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int modattempts
		{
			get
			{
				return this._modattempts;
			}
			set
			{
				if (this._modattempts != value)
				{
					this.OnmodattemptsChanging(value);
					this.SendPropertyChanging();
					this._modattempts = value;
					this.SendPropertyChanged("modattempts");
					this.OnmodattemptsChanged();
				}
			}
		}

		[Column(Storage = "_usepassword", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int usepassword
		{
			get
			{
				return this._usepassword;
			}
			set
			{
				if (this._usepassword != value)
				{
					this.OnusepasswordChanging(value);
					this.SendPropertyChanging();
					this._usepassword = value;
					this.SendPropertyChanged("usepassword");
					this.OnusepasswordChanged();
				}
			}
		}

		[Column(Storage = "_password", CanBeNull = false, DbType = "varchar(96) NOT NULL")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if (this._password != value)
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}

		[Column(Storage = "_conditions", CanBeNull = false, DbType = "text NOT NULL")]
		public string conditions
		{
			get
			{
				return this._conditions;
			}
			set
			{
				if (this._conditions != value)
				{
					this.OnconditionsChanging(value);
					this.SendPropertyChanging();
					this._conditions = value;
					this.SendPropertyChanged("conditions");
					this.OnconditionsChanged();
				}
			}
		}

		[Column(Storage = "_grade", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public short grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if (this._grade != value)
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}

		[Column(Storage = "_custom", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int custom
		{
			get
			{
				return this._custom;
			}
			set
			{
				if (this._custom != value)
				{
					this.OncustomChanging(value);
					this.SendPropertyChanging();
					this._custom = value;
					this.SendPropertyChanged("custom");
					this.OncustomChanged();
				}
			}
		}

		[Column(Storage = "_ongoing", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int ongoing
		{
			get
			{
				return this._ongoing;
			}
			set
			{
				if (this._ongoing != value)
				{
					this.OnongoingChanging(value);
					this.SendPropertyChanging();
					this._ongoing = value;
					this.SendPropertyChanged("ongoing");
					this.OnongoingChanged();
				}
			}
		}

		[Column(Storage = "_usemaxgrade", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int usemaxgrade
		{
			get
			{
				return this._usemaxgrade;
			}
			set
			{
				if (this._usemaxgrade != value)
				{
					this.OnusemaxgradeChanging(value);
					this.SendPropertyChanging();
					this._usemaxgrade = value;
					this.SendPropertyChanged("usemaxgrade");
					this.OnusemaxgradeChanged();
				}
			}
		}

		[Column(Storage = "_maxanswers", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int maxanswers
		{
			get
			{
				return this._maxanswers;
			}
			set
			{
				if (this._maxanswers != value)
				{
					this.OnmaxanswersChanging(value);
					this.SendPropertyChanging();
					this._maxanswers = value;
					this.SendPropertyChanged("maxanswers");
					this.OnmaxanswersChanged();
				}
			}
		}

		[Column(Storage = "_maxattempts", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int maxattempts
		{
			get
			{
				return this._maxattempts;
			}
			set
			{
				if (this._maxattempts != value)
				{
					this.OnmaxattemptsChanging(value);
					this.SendPropertyChanging();
					this._maxattempts = value;
					this.SendPropertyChanged("maxattempts");
					this.OnmaxattemptsChanged();
				}
			}
		}

		[Column(Storage = "_review", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int review
		{
			get
			{
				return this._review;
			}
			set
			{
				if (this._review != value)
				{
					this.OnreviewChanging(value);
					this.SendPropertyChanging();
					this._review = value;
					this.SendPropertyChanged("review");
					this.OnreviewChanged();
				}
			}
		}

		[Column(Storage = "_nextpagedefault", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int nextpagedefault
		{
			get
			{
				return this._nextpagedefault;
			}
			set
			{
				if (this._nextpagedefault != value)
				{
					this.OnnextpagedefaultChanging(value);
					this.SendPropertyChanging();
					this._nextpagedefault = value;
					this.SendPropertyChanged("nextpagedefault");
					this.OnnextpagedefaultChanged();
				}
			}
		}

		[Column(Storage = "_feedback", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int feedback
		{
			get
			{
				return this._feedback;
			}
			set
			{
				if (this._feedback != value)
				{
					this.OnfeedbackChanging(value);
					this.SendPropertyChanging();
					this._feedback = value;
					this.SendPropertyChanged("feedback");
					this.OnfeedbackChanged();
				}
			}
		}

		[Column(Storage = "_minquestions", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int minquestions
		{
			get
			{
				return this._minquestions;
			}
			set
			{
				if (this._minquestions != value)
				{
					this.OnminquestionsChanging(value);
					this.SendPropertyChanging();
					this._minquestions = value;
					this.SendPropertyChanged("minquestions");
					this.OnminquestionsChanged();
				}
			}
		}

		[Column(Storage = "_maxpages", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int maxpages
		{
			get
			{
				return this._maxpages;
			}
			set
			{
				if (this._maxpages != value)
				{
					this.OnmaxpagesChanging(value);
					this.SendPropertyChanging();
					this._maxpages = value;
					this.SendPropertyChanged("maxpages");
					this.OnmaxpagesChanged();
				}
			}
		}

		[Column(Storage = "_timed", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int timed
		{
			get
			{
				return this._timed;
			}
			set
			{
				if (this._timed != value)
				{
					this.OntimedChanging(value);
					this.SendPropertyChanging();
					this._timed = value;
					this.SendPropertyChanged("timed");
					this.OntimedChanged();
				}
			}
		}

		[Column(Storage = "_maxtime", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal maxtime
		{
			get
			{
				return this._maxtime;
			}
			set
			{
				if (this._maxtime != value)
				{
					this.OnmaxtimeChanging(value);
					this.SendPropertyChanging();
					this._maxtime = value;
					this.SendPropertyChanged("maxtime");
					this.OnmaxtimeChanged();
				}
			}
		}

		[Column(Storage = "_retake", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int retake
		{
			get
			{
				return this._retake;
			}
			set
			{
				if (this._retake != value)
				{
					this.OnretakeChanging(value);
					this.SendPropertyChanging();
					this._retake = value;
					this.SendPropertyChanged("retake");
					this.OnretakeChanged();
				}
			}
		}

		[Column(Storage = "_mediaheight", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal mediaheight
		{
			get
			{
				return this._mediaheight;
			}
			set
			{
				if (this._mediaheight != value)
				{
					this.OnmediaheightChanging(value);
					this.SendPropertyChanging();
					this._mediaheight = value;
					this.SendPropertyChanged("mediaheight");
					this.OnmediaheightChanged();
				}
			}
		}

		[Column(Storage = "_mediawidth", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal mediawidth
		{
			get
			{
				return this._mediawidth;
			}
			set
			{
				if (this._mediawidth != value)
				{
					this.OnmediawidthChanging(value);
					this.SendPropertyChanging();
					this._mediawidth = value;
					this.SendPropertyChanged("mediawidth");
					this.OnmediawidthChanged();
				}
			}
		}

		[Column(Storage = "_mediaclose", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int mediaclose
		{
			get
			{
				return this._mediaclose;
			}
			set
			{
				if (this._mediaclose != value)
				{
					this.OnmediacloseChanging(value);
					this.SendPropertyChanging();
					this._mediaclose = value;
					this.SendPropertyChanged("mediaclose");
					this.OnmediacloseChanged();
				}
			}
		}

		[Column(Storage = "_slideshow", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int slideshow
		{
			get
			{
				return this._slideshow;
			}
			set
			{
				if (this._slideshow != value)
				{
					this.OnslideshowChanging(value);
					this.SendPropertyChanging();
					this._slideshow = value;
					this.SendPropertyChanged("slideshow");
					this.OnslideshowChanged();
				}
			}
		}

		[Column(Storage = "_width", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal width
		{
			get
			{
				return this._width;
			}
			set
			{
				if (this._width != value)
				{
					this.OnwidthChanging(value);
					this.SendPropertyChanging();
					this._width = value;
					this.SendPropertyChanged("width");
					this.OnwidthChanged();
				}
			}
		}

		[Column(Storage = "_height", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal height
		{
			get
			{
				return this._height;
			}
			set
			{
				if (this._height != value)
				{
					this.OnheightChanging(value);
					this.SendPropertyChanging();
					this._height = value;
					this.SendPropertyChanged("height");
					this.OnheightChanged();
				}
			}
		}

		[Column(Storage = "_bgcolor", DbType = "varchar(21)")]
		public string bgcolor
		{
			get
			{
				return this._bgcolor;
			}
			set
			{
				if (this._bgcolor != value)
				{
					this.OnbgcolorChanging(value);
					this.SendPropertyChanging();
					this._bgcolor = value;
					this.SendPropertyChanged("bgcolor");
					this.OnbgcolorChanged();
				}
			}
		}

		[Column(Storage = "_displayleft", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int displayleft
		{
			get
			{
				return this._displayleft;
			}
			set
			{
				if (this._displayleft != value)
				{
					this.OndisplayleftChanging(value);
					this.SendPropertyChanging();
					this._displayleft = value;
					this.SendPropertyChanged("displayleft");
					this.OndisplayleftChanged();
				}
			}
		}

		[Column(Storage = "_displayleftif", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int displayleftif
		{
			get
			{
				return this._displayleftif;
			}
			set
			{
				if (this._displayleftif != value)
				{
					this.OndisplayleftifChanging(value);
					this.SendPropertyChanging();
					this._displayleftif = value;
					this.SendPropertyChanged("displayleftif");
					this.OndisplayleftifChanged();
				}
			}
		}

		[Column(Storage = "_progressbar", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int progressbar
		{
			get
			{
				return this._progressbar;
			}
			set
			{
				if (this._progressbar != value)
				{
					this.OnprogressbarChanging(value);
					this.SendPropertyChanging();
					this._progressbar = value;
					this.SendPropertyChanged("progressbar");
					this.OnprogressbarChanged();
				}
			}
		}

		[Column(Storage = "_highscores", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int highscores
		{
			get
			{
				return this._highscores;
			}
			set
			{
				if (this._highscores != value)
				{
					this.OnhighscoresChanging(value);
					this.SendPropertyChanging();
					this._highscores = value;
					this.SendPropertyChanged("highscores");
					this.OnhighscoresChanged();
				}
			}
		}

		[Column(Storage = "_maxhighscores", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long maxhighscores
		{
			get
			{
				return this._maxhighscores;
			}
			set
			{
				if (this._maxhighscores != value)
				{
					this.OnmaxhighscoresChanging(value);
					this.SendPropertyChanging();
					this._maxhighscores = value;
					this.SendPropertyChanged("maxhighscores");
					this.OnmaxhighscoresChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_lesson_grades")]
	public partial class mdl_lesson_grade : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _lessonid;

		private decimal _userid;

		private double _grade;

		private int _late;

		private decimal _completed;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnlessonidChanging(decimal value);
		partial void OnlessonidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OngradeChanging(double value);
		partial void OngradeChanged();
		partial void OnlateChanging(int value);
		partial void OnlateChanged();
		partial void OncompletedChanging(decimal value);
		partial void OncompletedChanged();
		#endregion

		public mdl_lesson_grade()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_lessonid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal lessonid
		{
			get
			{
				return this._lessonid;
			}
			set
			{
				if (this._lessonid != value)
				{
					this.OnlessonidChanging(value);
					this.SendPropertyChanging();
					this._lessonid = value;
					this.SendPropertyChanged("lessonid");
					this.OnlessonidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_grade", CanBeNull = false, DbType = "double NOT NULL")]
		public double grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if (this._grade != value)
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}

		[Column(Storage = "_late", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int late
		{
			get
			{
				return this._late;
			}
			set
			{
				if (this._late != value)
				{
					this.OnlateChanging(value);
					this.SendPropertyChanging();
					this._late = value;
					this.SendPropertyChanged("late");
					this.OnlateChanged();
				}
			}
		}

		[Column(Storage = "_completed", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal completed
		{
			get
			{
				return this._completed;
			}
			set
			{
				if (this._completed != value)
				{
					this.OncompletedChanging(value);
					this.SendPropertyChanging();
					this._completed = value;
					this.SendPropertyChanged("completed");
					this.OncompletedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_lesson_high_scores")]
	public partial class mdl_lesson_high_score : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _lessonid;

		private decimal _userid;

		private decimal _gradeid;

		private string _nickname;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnlessonidChanging(decimal value);
		partial void OnlessonidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OngradeidChanging(decimal value);
		partial void OngradeidChanged();
		partial void OnnicknameChanging(string value);
		partial void OnnicknameChanged();
		#endregion

		public mdl_lesson_high_score()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_lessonid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal lessonid
		{
			get
			{
				return this._lessonid;
			}
			set
			{
				if (this._lessonid != value)
				{
					this.OnlessonidChanging(value);
					this.SendPropertyChanging();
					this._lessonid = value;
					this.SendPropertyChanged("lessonid");
					this.OnlessonidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_gradeid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal gradeid
		{
			get
			{
				return this._gradeid;
			}
			set
			{
				if (this._gradeid != value)
				{
					this.OngradeidChanging(value);
					this.SendPropertyChanging();
					this._gradeid = value;
					this.SendPropertyChanged("gradeid");
					this.OngradeidChanged();
				}
			}
		}

		[Column(Storage = "_nickname", CanBeNull = false, DbType = "varchar(15) NOT NULL")]
		public string nickname
		{
			get
			{
				return this._nickname;
			}
			set
			{
				if (this._nickname != value)
				{
					this.OnnicknameChanging(value);
					this.SendPropertyChanging();
					this._nickname = value;
					this.SendPropertyChanged("nickname");
					this.OnnicknameChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_lesson_pages")]
	public partial class mdl_lesson_page : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _lessonid;

		private decimal _prevpageid;

		private decimal _nextpageid;

		private int _qtype;

		private int _qoption;

		private int _layout;

		private int _display;

		private decimal _timecreated;

		private decimal _timemodified;

		private string _title;

		private string _contents;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnlessonidChanging(decimal value);
		partial void OnlessonidChanged();
		partial void OnprevpageidChanging(decimal value);
		partial void OnprevpageidChanged();
		partial void OnnextpageidChanging(decimal value);
		partial void OnnextpageidChanged();
		partial void OnqtypeChanging(int value);
		partial void OnqtypeChanged();
		partial void OnqoptionChanging(int value);
		partial void OnqoptionChanged();
		partial void OnlayoutChanging(int value);
		partial void OnlayoutChanged();
		partial void OndisplayChanging(int value);
		partial void OndisplayChanged();
		partial void OntimecreatedChanging(decimal value);
		partial void OntimecreatedChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		partial void OntitleChanging(string value);
		partial void OntitleChanged();
		partial void OncontentsChanging(string value);
		partial void OncontentsChanged();
		#endregion

		public mdl_lesson_page()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_lessonid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal lessonid
		{
			get
			{
				return this._lessonid;
			}
			set
			{
				if (this._lessonid != value)
				{
					this.OnlessonidChanging(value);
					this.SendPropertyChanging();
					this._lessonid = value;
					this.SendPropertyChanged("lessonid");
					this.OnlessonidChanged();
				}
			}
		}

		[Column(Storage = "_prevpageid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal prevpageid
		{
			get
			{
				return this._prevpageid;
			}
			set
			{
				if (this._prevpageid != value)
				{
					this.OnprevpageidChanging(value);
					this.SendPropertyChanging();
					this._prevpageid = value;
					this.SendPropertyChanged("prevpageid");
					this.OnprevpageidChanged();
				}
			}
		}

		[Column(Storage = "_nextpageid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal nextpageid
		{
			get
			{
				return this._nextpageid;
			}
			set
			{
				if (this._nextpageid != value)
				{
					this.OnnextpageidChanging(value);
					this.SendPropertyChanging();
					this._nextpageid = value;
					this.SendPropertyChanged("nextpageid");
					this.OnnextpageidChanged();
				}
			}
		}

		[Column(Storage = "_qtype", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int qtype
		{
			get
			{
				return this._qtype;
			}
			set
			{
				if (this._qtype != value)
				{
					this.OnqtypeChanging(value);
					this.SendPropertyChanging();
					this._qtype = value;
					this.SendPropertyChanged("qtype");
					this.OnqtypeChanged();
				}
			}
		}

		[Column(Storage = "_qoption", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int qoption
		{
			get
			{
				return this._qoption;
			}
			set
			{
				if (this._qoption != value)
				{
					this.OnqoptionChanging(value);
					this.SendPropertyChanging();
					this._qoption = value;
					this.SendPropertyChanged("qoption");
					this.OnqoptionChanged();
				}
			}
		}

		[Column(Storage = "_layout", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int layout
		{
			get
			{
				return this._layout;
			}
			set
			{
				if (this._layout != value)
				{
					this.OnlayoutChanging(value);
					this.SendPropertyChanging();
					this._layout = value;
					this.SendPropertyChanged("layout");
					this.OnlayoutChanged();
				}
			}
		}

		[Column(Storage = "_display", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int display
		{
			get
			{
				return this._display;
			}
			set
			{
				if (this._display != value)
				{
					this.OndisplayChanging(value);
					this.SendPropertyChanging();
					this._display = value;
					this.SendPropertyChanged("display");
					this.OndisplayChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_title", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if (this._title != value)
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}

		[Column(Storage = "_contents", CanBeNull = false, DbType = "text NOT NULL")]
		public string contents
		{
			get
			{
				return this._contents;
			}
			set
			{
				if (this._contents != value)
				{
					this.OncontentsChanging(value);
					this.SendPropertyChanging();
					this._contents = value;
					this.SendPropertyChanged("contents");
					this.OncontentsChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_lesson_timer")]
	public partial class mdl_lesson_timer : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _lessonid;

		private decimal _userid;

		private decimal _starttime;

		private decimal _lessontime;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnlessonidChanging(decimal value);
		partial void OnlessonidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnstarttimeChanging(decimal value);
		partial void OnstarttimeChanged();
		partial void OnlessontimeChanging(decimal value);
		partial void OnlessontimeChanged();
		#endregion

		public mdl_lesson_timer()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_lessonid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal lessonid
		{
			get
			{
				return this._lessonid;
			}
			set
			{
				if (this._lessonid != value)
				{
					this.OnlessonidChanging(value);
					this.SendPropertyChanging();
					this._lessonid = value;
					this.SendPropertyChanged("lessonid");
					this.OnlessonidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_starttime", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal starttime
		{
			get
			{
				return this._starttime;
			}
			set
			{
				if (this._starttime != value)
				{
					this.OnstarttimeChanging(value);
					this.SendPropertyChanging();
					this._starttime = value;
					this.SendPropertyChanged("starttime");
					this.OnstarttimeChanged();
				}
			}
		}

		[Column(Storage = "_lessontime", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal lessontime
		{
			get
			{
				return this._lessontime;
			}
			set
			{
				if (this._lessontime != value)
				{
					this.OnlessontimeChanging(value);
					this.SendPropertyChanging();
					this._lessontime = value;
					this.SendPropertyChanged("lessontime");
					this.OnlessontimeChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_log")]
	public partial class mdl_log : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _time;

		private decimal _userid;

		private string _ip;

		private decimal _course;

		private string _module;

		private decimal _cmid;

		private string _action;

		private string _url;

		private string _info;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OntimeChanging(decimal value);
		partial void OntimeChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnipChanging(string value);
		partial void OnipChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnmoduleChanging(string value);
		partial void OnmoduleChanged();
		partial void OncmidChanging(decimal value);
		partial void OncmidChanged();
		partial void OnactionChanging(string value);
		partial void OnactionChanged();
		partial void OnurlChanging(string value);
		partial void OnurlChanged();
		partial void OninfoChanging(string value);
		partial void OninfoChanged();
		#endregion

		public mdl_log()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_time", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal time
		{
			get
			{
				return this._time;
			}
			set
			{
				if (this._time != value)
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_ip", CanBeNull = false, DbType = "varchar(45) NOT NULL")]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if (this._ip != value)
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_module", CanBeNull = false, DbType = "varchar(60) NOT NULL")]
		public string module
		{
			get
			{
				return this._module;
			}
			set
			{
				if (this._module != value)
				{
					this.OnmoduleChanging(value);
					this.SendPropertyChanging();
					this._module = value;
					this.SendPropertyChanged("module");
					this.OnmoduleChanged();
				}
			}
		}

		[Column(Storage = "_cmid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal cmid
		{
			get
			{
				return this._cmid;
			}
			set
			{
				if (this._cmid != value)
				{
					this.OncmidChanging(value);
					this.SendPropertyChanging();
					this._cmid = value;
					this.SendPropertyChanged("cmid");
					this.OncmidChanged();
				}
			}
		}

		[Column(Storage = "_action", CanBeNull = false, DbType = "varchar(120) NOT NULL")]
		public string action
		{
			get
			{
				return this._action;
			}
			set
			{
				if (this._action != value)
				{
					this.OnactionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("action");
					this.OnactionChanged();
				}
			}
		}

		[Column(Storage = "_url", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if (this._url != value)
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}

		[Column(Storage = "_info", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string info
		{
			get
			{
				return this._info;
			}
			set
			{
				if (this._info != value)
				{
					this.OninfoChanging(value);
					this.SendPropertyChanging();
					this._info = value;
					this.SendPropertyChanged("info");
					this.OninfoChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_log_display")]
	public partial class mdl_log_display : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _module;

		private string _action;

		private string _mtable;

		private string _field;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnmoduleChanging(string value);
		partial void OnmoduleChanged();
		partial void OnactionChanging(string value);
		partial void OnactionChanged();
		partial void OnmtableChanging(string value);
		partial void OnmtableChanged();
		partial void OnfieldChanging(string value);
		partial void OnfieldChanged();
		#endregion

		public mdl_log_display()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_module", CanBeNull = false, DbType = "varchar(60) NOT NULL")]
		public string module
		{
			get
			{
				return this._module;
			}
			set
			{
				if (this._module != value)
				{
					this.OnmoduleChanging(value);
					this.SendPropertyChanging();
					this._module = value;
					this.SendPropertyChanged("module");
					this.OnmoduleChanged();
				}
			}
		}

		[Column(Storage = "_action", CanBeNull = false, DbType = "varchar(120) NOT NULL")]
		public string action
		{
			get
			{
				return this._action;
			}
			set
			{
				if (this._action != value)
				{
					this.OnactionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("action");
					this.OnactionChanged();
				}
			}
		}

		[Column(Storage = "_mtable", CanBeNull = false, DbType = "varchar(90) NOT NULL")]
		public string mtable
		{
			get
			{
				return this._mtable;
			}
			set
			{
				if (this._mtable != value)
				{
					this.OnmtableChanging(value);
					this.SendPropertyChanging();
					this._mtable = value;
					this.SendPropertyChanged("mtable");
					this.OnmtableChanged();
				}
			}
		}

		[Column(Storage = "_field", CanBeNull = false, DbType = "varchar(600) NOT NULL")]
		public string field
		{
			get
			{
				return this._field;
			}
			set
			{
				if (this._field != value)
				{
					this.OnfieldChanging(value);
					this.SendPropertyChanging();
					this._field = value;
					this.SendPropertyChanged("field");
					this.OnfieldChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_message")]
	public partial class mdl_message : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _useridfrom;

		private decimal _useridto;

		private string _message;

		private int _format;

		private long _timecreated;

		private string _messagetype;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuseridfromChanging(decimal value);
		partial void OnuseridfromChanged();
		partial void OnuseridtoChanging(decimal value);
		partial void OnuseridtoChanged();
		partial void OnmessageChanging(string value);
		partial void OnmessageChanged();
		partial void OnformatChanging(int value);
		partial void OnformatChanged();
		partial void OntimecreatedChanging(long value);
		partial void OntimecreatedChanged();
		partial void OnmessagetypeChanging(string value);
		partial void OnmessagetypeChanged();
		#endregion

		public mdl_message()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_useridfrom", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal useridfrom
		{
			get
			{
				return this._useridfrom;
			}
			set
			{
				if (this._useridfrom != value)
				{
					this.OnuseridfromChanging(value);
					this.SendPropertyChanging();
					this._useridfrom = value;
					this.SendPropertyChanged("useridfrom");
					this.OnuseridfromChanged();
				}
			}
		}

		[Column(Storage = "_useridto", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal useridto
		{
			get
			{
				return this._useridto;
			}
			set
			{
				if (this._useridto != value)
				{
					this.OnuseridtoChanging(value);
					this.SendPropertyChanging();
					this._useridto = value;
					this.SendPropertyChanged("useridto");
					this.OnuseridtoChanged();
				}
			}
		}

		[Column(Storage = "_message", CanBeNull = false, DbType = "text NOT NULL")]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if (this._message != value)
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}

		[Column(Storage = "_format", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int format
		{
			get
			{
				return this._format;
			}
			set
			{
				if (this._format != value)
				{
					this.OnformatChanging(value);
					this.SendPropertyChanging();
					this._format = value;
					this.SendPropertyChanged("format");
					this.OnformatChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_messagetype", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string messagetype
		{
			get
			{
				return this._messagetype;
			}
			set
			{
				if (this._messagetype != value)
				{
					this.OnmessagetypeChanging(value);
					this.SendPropertyChanging();
					this._messagetype = value;
					this.SendPropertyChanged("messagetype");
					this.OnmessagetypeChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_message_contacts")]
	public partial class mdl_message_contact : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _userid;

		private decimal _contactid;

		private byte _blocked;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OncontactidChanging(decimal value);
		partial void OncontactidChanged();
		partial void OnblockedChanging(byte value);
		partial void OnblockedChanged();
		#endregion

		public mdl_message_contact()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_contactid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal contactid
		{
			get
			{
				return this._contactid;
			}
			set
			{
				if (this._contactid != value)
				{
					this.OncontactidChanging(value);
					this.SendPropertyChanging();
					this._contactid = value;
					this.SendPropertyChanged("contactid");
					this.OncontactidChanged();
				}
			}
		}

		[Column(Storage = "_blocked", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte blocked
		{
			get
			{
				return this._blocked;
			}
			set
			{
				if (this._blocked != value)
				{
					this.OnblockedChanging(value);
					this.SendPropertyChanging();
					this._blocked = value;
					this.SendPropertyChanged("blocked");
					this.OnblockedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_message_read")]
	public partial class mdl_message_read : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _useridfrom;

		private decimal _useridto;

		private string _message;

		private int _format;

		private long _timecreated;

		private long _timeread;

		private string _messagetype;

		private short _mailed;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuseridfromChanging(decimal value);
		partial void OnuseridfromChanged();
		partial void OnuseridtoChanging(decimal value);
		partial void OnuseridtoChanged();
		partial void OnmessageChanging(string value);
		partial void OnmessageChanged();
		partial void OnformatChanging(int value);
		partial void OnformatChanged();
		partial void OntimecreatedChanging(long value);
		partial void OntimecreatedChanged();
		partial void OntimereadChanging(long value);
		partial void OntimereadChanged();
		partial void OnmessagetypeChanging(string value);
		partial void OnmessagetypeChanged();
		partial void OnmailedChanging(short value);
		partial void OnmailedChanged();
		#endregion

		public mdl_message_read()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_useridfrom", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal useridfrom
		{
			get
			{
				return this._useridfrom;
			}
			set
			{
				if (this._useridfrom != value)
				{
					this.OnuseridfromChanging(value);
					this.SendPropertyChanging();
					this._useridfrom = value;
					this.SendPropertyChanged("useridfrom");
					this.OnuseridfromChanged();
				}
			}
		}

		[Column(Storage = "_useridto", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal useridto
		{
			get
			{
				return this._useridto;
			}
			set
			{
				if (this._useridto != value)
				{
					this.OnuseridtoChanging(value);
					this.SendPropertyChanging();
					this._useridto = value;
					this.SendPropertyChanged("useridto");
					this.OnuseridtoChanged();
				}
			}
		}

		[Column(Storage = "_message", CanBeNull = false, DbType = "text NOT NULL")]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if (this._message != value)
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}

		[Column(Storage = "_format", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int format
		{
			get
			{
				return this._format;
			}
			set
			{
				if (this._format != value)
				{
					this.OnformatChanging(value);
					this.SendPropertyChanging();
					this._format = value;
					this.SendPropertyChanged("format");
					this.OnformatChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_timeread", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long timeread
		{
			get
			{
				return this._timeread;
			}
			set
			{
				if (this._timeread != value)
				{
					this.OntimereadChanging(value);
					this.SendPropertyChanging();
					this._timeread = value;
					this.SendPropertyChanged("timeread");
					this.OntimereadChanged();
				}
			}
		}

		[Column(Storage = "_messagetype", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string messagetype
		{
			get
			{
				return this._messagetype;
			}
			set
			{
				if (this._messagetype != value)
				{
					this.OnmessagetypeChanging(value);
					this.SendPropertyChanging();
					this._messagetype = value;
					this.SendPropertyChanged("messagetype");
					this.OnmessagetypeChanged();
				}
			}
		}

		[Column(Storage = "_mailed", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short mailed
		{
			get
			{
				return this._mailed;
			}
			set
			{
				if (this._mailed != value)
				{
					this.OnmailedChanging(value);
					this.SendPropertyChanging();
					this._mailed = value;
					this.SendPropertyChanged("mailed");
					this.OnmailedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_mnet_application")]
	public partial class mdl_mnet_application : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _name;

		private string _display_name;

		private string _xmlrpc_server_url;

		private string _sso_land_url;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void Ondisplay_nameChanging(string value);
		partial void Ondisplay_nameChanged();
		partial void Onxmlrpc_server_urlChanging(string value);
		partial void Onxmlrpc_server_urlChanged();
		partial void Onsso_land_urlChanging(string value);
		partial void Onsso_land_urlChanged();
		#endregion

		public mdl_mnet_application()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_display_name", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string display_name
		{
			get
			{
				return this._display_name;
			}
			set
			{
				if (this._display_name != value)
				{
					this.Ondisplay_nameChanging(value);
					this.SendPropertyChanging();
					this._display_name = value;
					this.SendPropertyChanged("display_name");
					this.Ondisplay_nameChanged();
				}
			}
		}

		[Column(Storage = "_xmlrpc_server_url", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string xmlrpc_server_url
		{
			get
			{
				return this._xmlrpc_server_url;
			}
			set
			{
				if (this._xmlrpc_server_url != value)
				{
					this.Onxmlrpc_server_urlChanging(value);
					this.SendPropertyChanging();
					this._xmlrpc_server_url = value;
					this.SendPropertyChanged("xmlrpc_server_url");
					this.Onxmlrpc_server_urlChanged();
				}
			}
		}

		[Column(Storage = "_sso_land_url", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string sso_land_url
		{
			get
			{
				return this._sso_land_url;
			}
			set
			{
				if (this._sso_land_url != value)
				{
					this.Onsso_land_urlChanging(value);
					this.SendPropertyChanging();
					this._sso_land_url = value;
					this.SendPropertyChanged("sso_land_url");
					this.Onsso_land_urlChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_mnet_enrol_assignments")]
	public partial class mdl_mnet_enrol_assignment : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _userid;

		private decimal _hostid;

		private decimal _courseid;

		private string _rolename;

		private decimal _enroltime;

		private string _enroltype;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnhostidChanging(decimal value);
		partial void OnhostidChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OnrolenameChanging(string value);
		partial void OnrolenameChanged();
		partial void OnenroltimeChanging(decimal value);
		partial void OnenroltimeChanged();
		partial void OnenroltypeChanging(string value);
		partial void OnenroltypeChanged();
		#endregion

		public mdl_mnet_enrol_assignment()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_hostid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal hostid
		{
			get
			{
				return this._hostid;
			}
			set
			{
				if (this._hostid != value)
				{
					this.OnhostidChanging(value);
					this.SendPropertyChanging();
					this._hostid = value;
					this.SendPropertyChanged("hostid");
					this.OnhostidChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_rolename", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string rolename
		{
			get
			{
				return this._rolename;
			}
			set
			{
				if (this._rolename != value)
				{
					this.OnrolenameChanging(value);
					this.SendPropertyChanging();
					this._rolename = value;
					this.SendPropertyChanged("rolename");
					this.OnrolenameChanged();
				}
			}
		}

		[Column(Storage = "_enroltime", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal enroltime
		{
			get
			{
				return this._enroltime;
			}
			set
			{
				if (this._enroltime != value)
				{
					this.OnenroltimeChanging(value);
					this.SendPropertyChanging();
					this._enroltime = value;
					this.SendPropertyChanged("enroltime");
					this.OnenroltimeChanged();
				}
			}
		}

		[Column(Storage = "_enroltype", CanBeNull = false, DbType = "varchar(60) NOT NULL")]
		public string enroltype
		{
			get
			{
				return this._enroltype;
			}
			set
			{
				if (this._enroltype != value)
				{
					this.OnenroltypeChanging(value);
					this.SendPropertyChanging();
					this._enroltype = value;
					this.SendPropertyChanged("enroltype");
					this.OnenroltypeChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_mnet_enrol_course")]
	public partial class mdl_mnet_enrol_course : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _hostid;

		private decimal _remoteid;

		private decimal _cat_id;

		private string _cat_name;

		private string _cat_description;

		private decimal _sortorder;

		private string _fullname;

		private string _shortname;

		private string _idnumber;

		private string _summary;

		private decimal _startdate;

		private string _cost;

		private string _currency;

		private int _defaultroleid;

		private string _defaultrolename;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnhostidChanging(decimal value);
		partial void OnhostidChanged();
		partial void OnremoteidChanging(decimal value);
		partial void OnremoteidChanged();
		partial void Oncat_idChanging(decimal value);
		partial void Oncat_idChanged();
		partial void Oncat_nameChanging(string value);
		partial void Oncat_nameChanged();
		partial void Oncat_descriptionChanging(string value);
		partial void Oncat_descriptionChanged();
		partial void OnsortorderChanging(decimal value);
		partial void OnsortorderChanged();
		partial void OnfullnameChanging(string value);
		partial void OnfullnameChanged();
		partial void OnshortnameChanging(string value);
		partial void OnshortnameChanged();
		partial void OnidnumberChanging(string value);
		partial void OnidnumberChanged();
		partial void OnsummaryChanging(string value);
		partial void OnsummaryChanged();
		partial void OnstartdateChanging(decimal value);
		partial void OnstartdateChanged();
		partial void OncostChanging(string value);
		partial void OncostChanged();
		partial void OncurrencyChanging(string value);
		partial void OncurrencyChanged();
		partial void OndefaultroleidChanging(int value);
		partial void OndefaultroleidChanged();
		partial void OndefaultrolenameChanging(string value);
		partial void OndefaultrolenameChanged();
		#endregion

		public mdl_mnet_enrol_course()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_hostid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal hostid
		{
			get
			{
				return this._hostid;
			}
			set
			{
				if (this._hostid != value)
				{
					this.OnhostidChanging(value);
					this.SendPropertyChanging();
					this._hostid = value;
					this.SendPropertyChanged("hostid");
					this.OnhostidChanged();
				}
			}
		}

		[Column(Storage = "_remoteid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal remoteid
		{
			get
			{
				return this._remoteid;
			}
			set
			{
				if (this._remoteid != value)
				{
					this.OnremoteidChanging(value);
					this.SendPropertyChanging();
					this._remoteid = value;
					this.SendPropertyChanged("remoteid");
					this.OnremoteidChanged();
				}
			}
		}

		[Column(Storage = "_cat_id", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal cat_id
		{
			get
			{
				return this._cat_id;
			}
			set
			{
				if (this._cat_id != value)
				{
					this.Oncat_idChanging(value);
					this.SendPropertyChanging();
					this._cat_id = value;
					this.SendPropertyChanged("cat_id");
					this.Oncat_idChanged();
				}
			}
		}

		[Column(Storage = "_cat_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string cat_name
		{
			get
			{
				return this._cat_name;
			}
			set
			{
				if (this._cat_name != value)
				{
					this.Oncat_nameChanging(value);
					this.SendPropertyChanging();
					this._cat_name = value;
					this.SendPropertyChanged("cat_name");
					this.Oncat_nameChanged();
				}
			}
		}

		[Column(Storage = "_cat_description", CanBeNull = false, DbType = "mediumtext NOT NULL")]
		public string cat_description
		{
			get
			{
				return this._cat_description;
			}
			set
			{
				if (this._cat_description != value)
				{
					this.Oncat_descriptionChanging(value);
					this.SendPropertyChanging();
					this._cat_description = value;
					this.SendPropertyChanged("cat_description");
					this.Oncat_descriptionChanged();
				}
			}
		}

		[Column(Storage = "_sortorder", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal sortorder
		{
			get
			{
				return this._sortorder;
			}
			set
			{
				if (this._sortorder != value)
				{
					this.OnsortorderChanging(value);
					this.SendPropertyChanging();
					this._sortorder = value;
					this.SendPropertyChanged("sortorder");
					this.OnsortorderChanged();
				}
			}
		}

		[Column(Storage = "_fullname", CanBeNull = false, DbType = "varchar(762) NOT NULL")]
		public string fullname
		{
			get
			{
				return this._fullname;
			}
			set
			{
				if (this._fullname != value)
				{
					this.OnfullnameChanging(value);
					this.SendPropertyChanging();
					this._fullname = value;
					this.SendPropertyChanged("fullname");
					this.OnfullnameChanged();
				}
			}
		}

		[Column(Storage = "_shortname", CanBeNull = false, DbType = "varchar(45) NOT NULL")]
		public string shortname
		{
			get
			{
				return this._shortname;
			}
			set
			{
				if (this._shortname != value)
				{
					this.OnshortnameChanging(value);
					this.SendPropertyChanging();
					this._shortname = value;
					this.SendPropertyChanged("shortname");
					this.OnshortnameChanged();
				}
			}
		}

		[Column(Storage = "_idnumber", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string idnumber
		{
			get
			{
				return this._idnumber;
			}
			set
			{
				if (this._idnumber != value)
				{
					this.OnidnumberChanging(value);
					this.SendPropertyChanging();
					this._idnumber = value;
					this.SendPropertyChanged("idnumber");
					this.OnidnumberChanged();
				}
			}
		}

		[Column(Storage = "_summary", CanBeNull = false, DbType = "mediumtext NOT NULL")]
		public string summary
		{
			get
			{
				return this._summary;
			}
			set
			{
				if (this._summary != value)
				{
					this.OnsummaryChanging(value);
					this.SendPropertyChanging();
					this._summary = value;
					this.SendPropertyChanged("summary");
					this.OnsummaryChanged();
				}
			}
		}

		[Column(Storage = "_startdate", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal startdate
		{
			get
			{
				return this._startdate;
			}
			set
			{
				if (this._startdate != value)
				{
					this.OnstartdateChanging(value);
					this.SendPropertyChanging();
					this._startdate = value;
					this.SendPropertyChanged("startdate");
					this.OnstartdateChanged();
				}
			}
		}

		[Column(Storage = "_cost", CanBeNull = false, DbType = "varchar(30) NOT NULL")]
		public string cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if (this._cost != value)
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}

		[Column(Storage = "_currency", CanBeNull = false, DbType = "varchar(9) NOT NULL")]
		public string currency
		{
			get
			{
				return this._currency;
			}
			set
			{
				if (this._currency != value)
				{
					this.OncurrencyChanging(value);
					this.SendPropertyChanging();
					this._currency = value;
					this.SendPropertyChanged("currency");
					this.OncurrencyChanged();
				}
			}
		}

		[Column(Storage = "_defaultroleid", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int defaultroleid
		{
			get
			{
				return this._defaultroleid;
			}
			set
			{
				if (this._defaultroleid != value)
				{
					this.OndefaultroleidChanging(value);
					this.SendPropertyChanging();
					this._defaultroleid = value;
					this.SendPropertyChanged("defaultroleid");
					this.OndefaultroleidChanged();
				}
			}
		}

		[Column(Storage = "_defaultrolename", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string defaultrolename
		{
			get
			{
				return this._defaultrolename;
			}
			set
			{
				if (this._defaultrolename != value)
				{
					this.OndefaultrolenameChanging(value);
					this.SendPropertyChanging();
					this._defaultrolename = value;
					this.SendPropertyChanged("defaultrolename");
					this.OndefaultrolenameChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_mnet_host")]
	public partial class mdl_mnet_host : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private byte _deleted;

		private string _wwwroot;

		private string _ip_address;

		private string _name;

		private string _public_key;

		private decimal _public_key_expires;

		private byte _transport;

		private byte _portno;

		private decimal _last_connect_time;

		private decimal _last_log_id;

		private byte _force_theme;

		private string _theme;

		private decimal _applicationid;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OndeletedChanging(byte value);
		partial void OndeletedChanged();
		partial void OnwwwrootChanging(string value);
		partial void OnwwwrootChanged();
		partial void Onip_addressChanging(string value);
		partial void Onip_addressChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void Onpublic_keyChanging(string value);
		partial void Onpublic_keyChanged();
		partial void Onpublic_key_expiresChanging(decimal value);
		partial void Onpublic_key_expiresChanged();
		partial void OntransportChanging(byte value);
		partial void OntransportChanged();
		partial void OnportnoChanging(byte value);
		partial void OnportnoChanged();
		partial void Onlast_connect_timeChanging(decimal value);
		partial void Onlast_connect_timeChanged();
		partial void Onlast_log_idChanging(decimal value);
		partial void Onlast_log_idChanged();
		partial void Onforce_themeChanging(byte value);
		partial void Onforce_themeChanged();
		partial void OnthemeChanging(string value);
		partial void OnthemeChanged();
		partial void OnapplicationidChanging(decimal value);
		partial void OnapplicationidChanged();
		#endregion

		public mdl_mnet_host()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_deleted", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if (this._deleted != value)
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}

		[Column(Storage = "_wwwroot", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string wwwroot
		{
			get
			{
				return this._wwwroot;
			}
			set
			{
				if (this._wwwroot != value)
				{
					this.OnwwwrootChanging(value);
					this.SendPropertyChanging();
					this._wwwroot = value;
					this.SendPropertyChanged("wwwroot");
					this.OnwwwrootChanged();
				}
			}
		}

		[Column(Storage = "_ip_address", CanBeNull = false, DbType = "varchar(117) NOT NULL")]
		public string ip_address
		{
			get
			{
				return this._ip_address;
			}
			set
			{
				if (this._ip_address != value)
				{
					this.Onip_addressChanging(value);
					this.SendPropertyChanging();
					this._ip_address = value;
					this.SendPropertyChanged("ip_address");
					this.Onip_addressChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(240) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_public_key", CanBeNull = false, DbType = "mediumtext NOT NULL")]
		public string public_key
		{
			get
			{
				return this._public_key;
			}
			set
			{
				if (this._public_key != value)
				{
					this.Onpublic_keyChanging(value);
					this.SendPropertyChanging();
					this._public_key = value;
					this.SendPropertyChanged("public_key");
					this.Onpublic_keyChanged();
				}
			}
		}

		[Column(Storage = "_public_key_expires", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal public_key_expires
		{
			get
			{
				return this._public_key_expires;
			}
			set
			{
				if (this._public_key_expires != value)
				{
					this.Onpublic_key_expiresChanging(value);
					this.SendPropertyChanging();
					this._public_key_expires = value;
					this.SendPropertyChanged("public_key_expires");
					this.Onpublic_key_expiresChanged();
				}
			}
		}

		[Column(Storage = "_transport", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte transport
		{
			get
			{
				return this._transport;
			}
			set
			{
				if (this._transport != value)
				{
					this.OntransportChanging(value);
					this.SendPropertyChanging();
					this._transport = value;
					this.SendPropertyChanged("transport");
					this.OntransportChanged();
				}
			}
		}

		[Column(Storage = "_portno", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte portno
		{
			get
			{
				return this._portno;
			}
			set
			{
				if (this._portno != value)
				{
					this.OnportnoChanging(value);
					this.SendPropertyChanging();
					this._portno = value;
					this.SendPropertyChanged("portno");
					this.OnportnoChanged();
				}
			}
		}

		[Column(Storage = "_last_connect_time", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal last_connect_time
		{
			get
			{
				return this._last_connect_time;
			}
			set
			{
				if (this._last_connect_time != value)
				{
					this.Onlast_connect_timeChanging(value);
					this.SendPropertyChanging();
					this._last_connect_time = value;
					this.SendPropertyChanged("last_connect_time");
					this.Onlast_connect_timeChanged();
				}
			}
		}

		[Column(Storage = "_last_log_id", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal last_log_id
		{
			get
			{
				return this._last_log_id;
			}
			set
			{
				if (this._last_log_id != value)
				{
					this.Onlast_log_idChanging(value);
					this.SendPropertyChanging();
					this._last_log_id = value;
					this.SendPropertyChanged("last_log_id");
					this.Onlast_log_idChanged();
				}
			}
		}

		[Column(Storage = "_force_theme", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte force_theme
		{
			get
			{
				return this._force_theme;
			}
			set
			{
				if (this._force_theme != value)
				{
					this.Onforce_themeChanging(value);
					this.SendPropertyChanging();
					this._force_theme = value;
					this.SendPropertyChanged("force_theme");
					this.Onforce_themeChanged();
				}
			}
		}

		[Column(Storage = "_theme", DbType = "varchar(300)")]
		public string theme
		{
			get
			{
				return this._theme;
			}
			set
			{
				if (this._theme != value)
				{
					this.OnthemeChanging(value);
					this.SendPropertyChanging();
					this._theme = value;
					this.SendPropertyChanged("theme");
					this.OnthemeChanged();
				}
			}
		}

		[Column(Storage = "_applicationid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal applicationid
		{
			get
			{
				return this._applicationid;
			}
			set
			{
				if (this._applicationid != value)
				{
					this.OnapplicationidChanging(value);
					this.SendPropertyChanging();
					this._applicationid = value;
					this.SendPropertyChanged("applicationid");
					this.OnapplicationidChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_mnet_host2service")]
	public partial class mdl_mnet_host2service : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _hostid;

		private decimal _serviceid;

		private byte _publish;

		private byte _subscribe;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnhostidChanging(decimal value);
		partial void OnhostidChanged();
		partial void OnserviceidChanging(decimal value);
		partial void OnserviceidChanged();
		partial void OnpublishChanging(byte value);
		partial void OnpublishChanged();
		partial void OnsubscribeChanging(byte value);
		partial void OnsubscribeChanged();
		#endregion

		public mdl_mnet_host2service()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_hostid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal hostid
		{
			get
			{
				return this._hostid;
			}
			set
			{
				if (this._hostid != value)
				{
					this.OnhostidChanging(value);
					this.SendPropertyChanging();
					this._hostid = value;
					this.SendPropertyChanged("hostid");
					this.OnhostidChanged();
				}
			}
		}

		[Column(Storage = "_serviceid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal serviceid
		{
			get
			{
				return this._serviceid;
			}
			set
			{
				if (this._serviceid != value)
				{
					this.OnserviceidChanging(value);
					this.SendPropertyChanging();
					this._serviceid = value;
					this.SendPropertyChanged("serviceid");
					this.OnserviceidChanged();
				}
			}
		}

		[Column(Storage = "_publish", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte publish
		{
			get
			{
				return this._publish;
			}
			set
			{
				if (this._publish != value)
				{
					this.OnpublishChanging(value);
					this.SendPropertyChanging();
					this._publish = value;
					this.SendPropertyChanged("publish");
					this.OnpublishChanged();
				}
			}
		}

		[Column(Storage = "_subscribe", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte subscribe
		{
			get
			{
				return this._subscribe;
			}
			set
			{
				if (this._subscribe != value)
				{
					this.OnsubscribeChanging(value);
					this.SendPropertyChanging();
					this._subscribe = value;
					this.SendPropertyChanged("subscribe");
					this.OnsubscribeChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_mnet_log")]
	public partial class mdl_mnet_log : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _hostid;

		private decimal _remoteid;

		private decimal _time;

		private decimal _userid;

		private string _ip;

		private decimal _course;

		private string _coursename;

		private string _module;

		private decimal _cmid;

		private string _action;

		private string _url;

		private string _info;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnhostidChanging(decimal value);
		partial void OnhostidChanged();
		partial void OnremoteidChanging(decimal value);
		partial void OnremoteidChanged();
		partial void OntimeChanging(decimal value);
		partial void OntimeChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnipChanging(string value);
		partial void OnipChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OncoursenameChanging(string value);
		partial void OncoursenameChanged();
		partial void OnmoduleChanging(string value);
		partial void OnmoduleChanged();
		partial void OncmidChanging(decimal value);
		partial void OncmidChanged();
		partial void OnactionChanging(string value);
		partial void OnactionChanged();
		partial void OnurlChanging(string value);
		partial void OnurlChanged();
		partial void OninfoChanging(string value);
		partial void OninfoChanged();
		#endregion

		public mdl_mnet_log()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_hostid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal hostid
		{
			get
			{
				return this._hostid;
			}
			set
			{
				if (this._hostid != value)
				{
					this.OnhostidChanging(value);
					this.SendPropertyChanging();
					this._hostid = value;
					this.SendPropertyChanged("hostid");
					this.OnhostidChanged();
				}
			}
		}

		[Column(Storage = "_remoteid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal remoteid
		{
			get
			{
				return this._remoteid;
			}
			set
			{
				if (this._remoteid != value)
				{
					this.OnremoteidChanging(value);
					this.SendPropertyChanging();
					this._remoteid = value;
					this.SendPropertyChanged("remoteid");
					this.OnremoteidChanged();
				}
			}
		}

		[Column(Storage = "_time", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal time
		{
			get
			{
				return this._time;
			}
			set
			{
				if (this._time != value)
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_ip", CanBeNull = false, DbType = "varchar(45) NOT NULL")]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if (this._ip != value)
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_coursename", CanBeNull = false, DbType = "varchar(120) NOT NULL")]
		public string coursename
		{
			get
			{
				return this._coursename;
			}
			set
			{
				if (this._coursename != value)
				{
					this.OncoursenameChanging(value);
					this.SendPropertyChanging();
					this._coursename = value;
					this.SendPropertyChanged("coursename");
					this.OncoursenameChanged();
				}
			}
		}

		[Column(Storage = "_module", CanBeNull = false, DbType = "varchar(60) NOT NULL")]
		public string module
		{
			get
			{
				return this._module;
			}
			set
			{
				if (this._module != value)
				{
					this.OnmoduleChanging(value);
					this.SendPropertyChanging();
					this._module = value;
					this.SendPropertyChanged("module");
					this.OnmoduleChanged();
				}
			}
		}

		[Column(Storage = "_cmid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal cmid
		{
			get
			{
				return this._cmid;
			}
			set
			{
				if (this._cmid != value)
				{
					this.OncmidChanging(value);
					this.SendPropertyChanging();
					this._cmid = value;
					this.SendPropertyChanged("cmid");
					this.OncmidChanged();
				}
			}
		}

		[Column(Storage = "_action", CanBeNull = false, DbType = "varchar(120) NOT NULL")]
		public string action
		{
			get
			{
				return this._action;
			}
			set
			{
				if (this._action != value)
				{
					this.OnactionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("action");
					this.OnactionChanged();
				}
			}
		}

		[Column(Storage = "_url", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if (this._url != value)
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}

		[Column(Storage = "_info", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string info
		{
			get
			{
				return this._info;
			}
			set
			{
				if (this._info != value)
				{
					this.OninfoChanging(value);
					this.SendPropertyChanging();
					this._info = value;
					this.SendPropertyChanged("info");
					this.OninfoChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_mnet_rpc")]
	public partial class mdl_mnet_rpc : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _function_name;

		private string _xmlrpc_path;

		private string _parent_type;

		private string _parent;

		private byte _enabled;

		private string _help;

		private string _profile;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void Onfunction_nameChanging(string value);
		partial void Onfunction_nameChanged();
		partial void Onxmlrpc_pathChanging(string value);
		partial void Onxmlrpc_pathChanged();
		partial void Onparent_typeChanging(string value);
		partial void Onparent_typeChanged();
		partial void OnparentChanging(string value);
		partial void OnparentChanged();
		partial void OnenabledChanging(byte value);
		partial void OnenabledChanged();
		partial void OnhelpChanging(string value);
		partial void OnhelpChanged();
		partial void OnprofileChanging(string value);
		partial void OnprofileChanged();
		#endregion

		public mdl_mnet_rpc()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_function_name", CanBeNull = false, DbType = "varchar(120) NOT NULL")]
		public string function_name
		{
			get
			{
				return this._function_name;
			}
			set
			{
				if (this._function_name != value)
				{
					this.Onfunction_nameChanging(value);
					this.SendPropertyChanging();
					this._function_name = value;
					this.SendPropertyChanged("function_name");
					this.Onfunction_nameChanged();
				}
			}
		}

		[Column(Storage = "_xmlrpc_path", CanBeNull = false, DbType = "varchar(240) NOT NULL")]
		public string xmlrpc_path
		{
			get
			{
				return this._xmlrpc_path;
			}
			set
			{
				if (this._xmlrpc_path != value)
				{
					this.Onxmlrpc_pathChanging(value);
					this.SendPropertyChanging();
					this._xmlrpc_path = value;
					this.SendPropertyChanged("xmlrpc_path");
					this.Onxmlrpc_pathChanged();
				}
			}
		}

		[Column(Storage = "_parent_type", CanBeNull = false, DbType = "varchar(18) NOT NULL")]
		public string parent_type
		{
			get
			{
				return this._parent_type;
			}
			set
			{
				if (this._parent_type != value)
				{
					this.Onparent_typeChanging(value);
					this.SendPropertyChanging();
					this._parent_type = value;
					this.SendPropertyChanged("parent_type");
					this.Onparent_typeChanged();
				}
			}
		}

		[Column(Storage = "_parent", CanBeNull = false, DbType = "varchar(60) NOT NULL")]
		public string parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if (this._parent != value)
				{
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}

		[Column(Storage = "_enabled", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte enabled
		{
			get
			{
				return this._enabled;
			}
			set
			{
				if (this._enabled != value)
				{
					this.OnenabledChanging(value);
					this.SendPropertyChanging();
					this._enabled = value;
					this.SendPropertyChanged("enabled");
					this.OnenabledChanged();
				}
			}
		}

		[Column(Storage = "_help", CanBeNull = false, DbType = "mediumtext NOT NULL")]
		public string help
		{
			get
			{
				return this._help;
			}
			set
			{
				if (this._help != value)
				{
					this.OnhelpChanging(value);
					this.SendPropertyChanging();
					this._help = value;
					this.SendPropertyChanged("help");
					this.OnhelpChanged();
				}
			}
		}

		[Column(Storage = "_profile", CanBeNull = false, DbType = "mediumtext NOT NULL")]
		public string profile
		{
			get
			{
				return this._profile;
			}
			set
			{
				if (this._profile != value)
				{
					this.OnprofileChanging(value);
					this.SendPropertyChanging();
					this._profile = value;
					this.SendPropertyChanged("profile");
					this.OnprofileChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_mnet_service")]
	public partial class mdl_mnet_service : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _name;

		private string _description;

		private string _apiversion;

		private byte _offer;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OndescriptionChanging(string value);
		partial void OndescriptionChanged();
		partial void OnapiversionChanging(string value);
		partial void OnapiversionChanged();
		partial void OnofferChanging(byte value);
		partial void OnofferChanged();
		#endregion

		public mdl_mnet_service()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(120) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_description", CanBeNull = false, DbType = "varchar(120) NOT NULL")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if (this._description != value)
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}

		[Column(Storage = "_apiversion", CanBeNull = false, DbType = "varchar(30) NOT NULL")]
		public string apiversion
		{
			get
			{
				return this._apiversion;
			}
			set
			{
				if (this._apiversion != value)
				{
					this.OnapiversionChanging(value);
					this.SendPropertyChanging();
					this._apiversion = value;
					this.SendPropertyChanged("apiversion");
					this.OnapiversionChanged();
				}
			}
		}

		[Column(Storage = "_offer", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte offer
		{
			get
			{
				return this._offer;
			}
			set
			{
				if (this._offer != value)
				{
					this.OnofferChanging(value);
					this.SendPropertyChanging();
					this._offer = value;
					this.SendPropertyChanged("offer");
					this.OnofferChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_mnet_service2rpc")]
	public partial class mdl_mnet_service2rpc : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _serviceid;

		private decimal _rpcid;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnserviceidChanging(decimal value);
		partial void OnserviceidChanged();
		partial void OnrpcidChanging(decimal value);
		partial void OnrpcidChanged();
		#endregion

		public mdl_mnet_service2rpc()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_serviceid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal serviceid
		{
			get
			{
				return this._serviceid;
			}
			set
			{
				if (this._serviceid != value)
				{
					this.OnserviceidChanging(value);
					this.SendPropertyChanging();
					this._serviceid = value;
					this.SendPropertyChanged("serviceid");
					this.OnserviceidChanged();
				}
			}
		}

		[Column(Storage = "_rpcid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal rpcid
		{
			get
			{
				return this._rpcid;
			}
			set
			{
				if (this._rpcid != value)
				{
					this.OnrpcidChanging(value);
					this.SendPropertyChanging();
					this._rpcid = value;
					this.SendPropertyChanged("rpcid");
					this.OnrpcidChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_mnet_session")]
	public partial class mdl_mnet_session : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _userid;

		private string _username;

		private string _token;

		private decimal _mnethostid;

		private string _useragent;

		private decimal _confirm_timeout;

		private string _session_id;

		private decimal _expires;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnusernameChanging(string value);
		partial void OnusernameChanged();
		partial void OntokenChanging(string value);
		partial void OntokenChanged();
		partial void OnmnethostidChanging(decimal value);
		partial void OnmnethostidChanged();
		partial void OnuseragentChanging(string value);
		partial void OnuseragentChanged();
		partial void Onconfirm_timeoutChanging(decimal value);
		partial void Onconfirm_timeoutChanged();
		partial void Onsession_idChanging(string value);
		partial void Onsession_idChanged();
		partial void OnexpiresChanging(decimal value);
		partial void OnexpiresChanged();
		#endregion

		public mdl_mnet_session()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_username", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if (this._username != value)
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}

		[Column(Storage = "_token", CanBeNull = false, DbType = "varchar(120) NOT NULL")]
		public string token
		{
			get
			{
				return this._token;
			}
			set
			{
				if (this._token != value)
				{
					this.OntokenChanging(value);
					this.SendPropertyChanging();
					this._token = value;
					this.SendPropertyChanged("token");
					this.OntokenChanged();
				}
			}
		}

		[Column(Storage = "_mnethostid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal mnethostid
		{
			get
			{
				return this._mnethostid;
			}
			set
			{
				if (this._mnethostid != value)
				{
					this.OnmnethostidChanging(value);
					this.SendPropertyChanging();
					this._mnethostid = value;
					this.SendPropertyChanged("mnethostid");
					this.OnmnethostidChanged();
				}
			}
		}

		[Column(Storage = "_useragent", CanBeNull = false, DbType = "varchar(120) NOT NULL")]
		public string useragent
		{
			get
			{
				return this._useragent;
			}
			set
			{
				if (this._useragent != value)
				{
					this.OnuseragentChanging(value);
					this.SendPropertyChanging();
					this._useragent = value;
					this.SendPropertyChanged("useragent");
					this.OnuseragentChanged();
				}
			}
		}

		[Column(Storage = "_confirm_timeout", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal confirm_timeout
		{
			get
			{
				return this._confirm_timeout;
			}
			set
			{
				if (this._confirm_timeout != value)
				{
					this.Onconfirm_timeoutChanging(value);
					this.SendPropertyChanging();
					this._confirm_timeout = value;
					this.SendPropertyChanged("confirm_timeout");
					this.Onconfirm_timeoutChanged();
				}
			}
		}

		[Column(Storage = "_session_id", CanBeNull = false, DbType = "varchar(120) NOT NULL")]
		public string session_id
		{
			get
			{
				return this._session_id;
			}
			set
			{
				if (this._session_id != value)
				{
					this.Onsession_idChanging(value);
					this.SendPropertyChanging();
					this._session_id = value;
					this.SendPropertyChanged("session_id");
					this.Onsession_idChanged();
				}
			}
		}

		[Column(Storage = "_expires", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal expires
		{
			get
			{
				return this._expires;
			}
			set
			{
				if (this._expires != value)
				{
					this.OnexpiresChanging(value);
					this.SendPropertyChanging();
					this._expires = value;
					this.SendPropertyChanged("expires");
					this.OnexpiresChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_mnet_sso_access_control")]
	public partial class mdl_mnet_sso_access_control : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _username;

		private decimal _mnet_host_id;

		private string _accessctrl;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnusernameChanging(string value);
		partial void OnusernameChanged();
		partial void Onmnet_host_idChanging(decimal value);
		partial void Onmnet_host_idChanged();
		partial void OnaccessctrlChanging(string value);
		partial void OnaccessctrlChanged();
		#endregion

		public mdl_mnet_sso_access_control()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_username", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if (this._username != value)
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}

		[Column(Storage = "_mnet_host_id", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal mnet_host_id
		{
			get
			{
				return this._mnet_host_id;
			}
			set
			{
				if (this._mnet_host_id != value)
				{
					this.Onmnet_host_idChanging(value);
					this.SendPropertyChanging();
					this._mnet_host_id = value;
					this.SendPropertyChanged("mnet_host_id");
					this.Onmnet_host_idChanged();
				}
			}
		}

		[Column(Storage = "_accessctrl", CanBeNull = false, DbType = "varchar(60) NOT NULL")]
		public string accessctrl
		{
			get
			{
				return this._accessctrl;
			}
			set
			{
				if (this._accessctrl != value)
				{
					this.OnaccessctrlChanging(value);
					this.SendPropertyChanging();
					this._accessctrl = value;
					this.SendPropertyChanged("accessctrl");
					this.OnaccessctrlChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_modules")]
	public partial class mdl_module : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _name;

		private long _version;

		private decimal _cron;

		private decimal _lastcron;

		private string _search;

		private short _visible;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnversionChanging(long value);
		partial void OnversionChanged();
		partial void OncronChanging(decimal value);
		partial void OncronChanged();
		partial void OnlastcronChanging(decimal value);
		partial void OnlastcronChanged();
		partial void OnsearchChanging(string value);
		partial void OnsearchChanged();
		partial void OnvisibleChanging(short value);
		partial void OnvisibleChanged();
		#endregion

		public mdl_module()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(60) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_version", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long version
		{
			get
			{
				return this._version;
			}
			set
			{
				if (this._version != value)
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}

		[Column(Storage = "_cron", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal cron
		{
			get
			{
				return this._cron;
			}
			set
			{
				if (this._cron != value)
				{
					this.OncronChanging(value);
					this.SendPropertyChanging();
					this._cron = value;
					this.SendPropertyChanged("cron");
					this.OncronChanged();
				}
			}
		}

		[Column(Storage = "_lastcron", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal lastcron
		{
			get
			{
				return this._lastcron;
			}
			set
			{
				if (this._lastcron != value)
				{
					this.OnlastcronChanging(value);
					this.SendPropertyChanging();
					this._lastcron = value;
					this.SendPropertyChanged("lastcron");
					this.OnlastcronChanged();
				}
			}
		}

		[Column(Storage = "_search", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string search
		{
			get
			{
				return this._search;
			}
			set
			{
				if (this._search != value)
				{
					this.OnsearchChanging(value);
					this.SendPropertyChanging();
					this._search = value;
					this.SendPropertyChanged("search");
					this.OnsearchChanged();
				}
			}
		}

		[Column(Storage = "_visible", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short visible
		{
			get
			{
				return this._visible;
			}
			set
			{
				if (this._visible != value)
				{
					this.OnvisibleChanging(value);
					this.SendPropertyChanging();
					this._visible = value;
					this.SendPropertyChanged("visible");
					this.OnvisibleChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_post")]
	public partial class mdl_post : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _module;

		private decimal _userid;

		private decimal _courseid;

		private decimal _groupid;

		private decimal _moduleid;

		private decimal _coursemoduleid;

		private string _subject;

		private string _summary;

		private string _content;

		private string _uniquehash;

		private decimal _rating;

		private decimal _format;

		private string _attachment;

		private string _publishstate;

		private decimal _lastmodified;

		private decimal _created;

		private System.Nullable<decimal> _usermodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnmoduleChanging(string value);
		partial void OnmoduleChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OngroupidChanging(decimal value);
		partial void OngroupidChanged();
		partial void OnmoduleidChanging(decimal value);
		partial void OnmoduleidChanged();
		partial void OncoursemoduleidChanging(decimal value);
		partial void OncoursemoduleidChanged();
		partial void OnsubjectChanging(string value);
		partial void OnsubjectChanged();
		partial void OnsummaryChanging(string value);
		partial void OnsummaryChanged();
		partial void OncontentChanging(string value);
		partial void OncontentChanged();
		partial void OnuniquehashChanging(string value);
		partial void OnuniquehashChanged();
		partial void OnratingChanging(decimal value);
		partial void OnratingChanged();
		partial void OnformatChanging(decimal value);
		partial void OnformatChanged();
		partial void OnattachmentChanging(string value);
		partial void OnattachmentChanged();
		partial void OnpublishstateChanging(string value);
		partial void OnpublishstateChanged();
		partial void OnlastmodifiedChanging(decimal value);
		partial void OnlastmodifiedChanged();
		partial void OncreatedChanging(decimal value);
		partial void OncreatedChanged();
		partial void OnusermodifiedChanging(System.Nullable<decimal> value);
		partial void OnusermodifiedChanged();
		#endregion

		public mdl_post()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_module", CanBeNull = false, DbType = "varchar(60) NOT NULL")]
		public string module
		{
			get
			{
				return this._module;
			}
			set
			{
				if (this._module != value)
				{
					this.OnmoduleChanging(value);
					this.SendPropertyChanging();
					this._module = value;
					this.SendPropertyChanged("module");
					this.OnmoduleChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_groupid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal groupid
		{
			get
			{
				return this._groupid;
			}
			set
			{
				if (this._groupid != value)
				{
					this.OngroupidChanging(value);
					this.SendPropertyChanging();
					this._groupid = value;
					this.SendPropertyChanged("groupid");
					this.OngroupidChanged();
				}
			}
		}

		[Column(Storage = "_moduleid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal moduleid
		{
			get
			{
				return this._moduleid;
			}
			set
			{
				if (this._moduleid != value)
				{
					this.OnmoduleidChanging(value);
					this.SendPropertyChanging();
					this._moduleid = value;
					this.SendPropertyChanged("moduleid");
					this.OnmoduleidChanged();
				}
			}
		}

		[Column(Storage = "_coursemoduleid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal coursemoduleid
		{
			get
			{
				return this._coursemoduleid;
			}
			set
			{
				if (this._coursemoduleid != value)
				{
					this.OncoursemoduleidChanging(value);
					this.SendPropertyChanging();
					this._coursemoduleid = value;
					this.SendPropertyChanged("coursemoduleid");
					this.OncoursemoduleidChanged();
				}
			}
		}

		[Column(Storage = "_subject", CanBeNull = false, DbType = "varchar(384) NOT NULL")]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if (this._subject != value)
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}

		[Column(Storage = "_summary", DbType = "longtext")]
		public string summary
		{
			get
			{
				return this._summary;
			}
			set
			{
				if (this._summary != value)
				{
					this.OnsummaryChanging(value);
					this.SendPropertyChanging();
					this._summary = value;
					this.SendPropertyChanged("summary");
					this.OnsummaryChanged();
				}
			}
		}

		[Column(Storage = "_content", DbType = "longtext")]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if (this._content != value)
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}

		[Column(Storage = "_uniquehash", CanBeNull = false, DbType = "varchar(384) NOT NULL")]
		public string uniquehash
		{
			get
			{
				return this._uniquehash;
			}
			set
			{
				if (this._uniquehash != value)
				{
					this.OnuniquehashChanging(value);
					this.SendPropertyChanging();
					this._uniquehash = value;
					this.SendPropertyChanged("uniquehash");
					this.OnuniquehashChanged();
				}
			}
		}

		[Column(Storage = "_rating", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal rating
		{
			get
			{
				return this._rating;
			}
			set
			{
				if (this._rating != value)
				{
					this.OnratingChanging(value);
					this.SendPropertyChanging();
					this._rating = value;
					this.SendPropertyChanged("rating");
					this.OnratingChanged();
				}
			}
		}

		[Column(Storage = "_format", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal format
		{
			get
			{
				return this._format;
			}
			set
			{
				if (this._format != value)
				{
					this.OnformatChanging(value);
					this.SendPropertyChanging();
					this._format = value;
					this.SendPropertyChanged("format");
					this.OnformatChanged();
				}
			}
		}

		[Column(Storage = "_attachment", DbType = "varchar(300)")]
		public string attachment
		{
			get
			{
				return this._attachment;
			}
			set
			{
				if (this._attachment != value)
				{
					this.OnattachmentChanging(value);
					this.SendPropertyChanging();
					this._attachment = value;
					this.SendPropertyChanged("attachment");
					this.OnattachmentChanged();
				}
			}
		}

		[Column(Storage = "_publishstate", CanBeNull = false, DbType = "enum NOT NULL")]
		public string publishstate
		{
			get
			{
				return this._publishstate;
			}
			set
			{
				if (this._publishstate != value)
				{
					this.OnpublishstateChanging(value);
					this.SendPropertyChanging();
					this._publishstate = value;
					this.SendPropertyChanged("publishstate");
					this.OnpublishstateChanged();
				}
			}
		}

		[Column(Storage = "_lastmodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal lastmodified
		{
			get
			{
				return this._lastmodified;
			}
			set
			{
				if (this._lastmodified != value)
				{
					this.OnlastmodifiedChanging(value);
					this.SendPropertyChanging();
					this._lastmodified = value;
					this.SendPropertyChanged("lastmodified");
					this.OnlastmodifiedChanged();
				}
			}
		}

		[Column(Storage = "_created", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal created
		{
			get
			{
				return this._created;
			}
			set
			{
				if (this._created != value)
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}

		[Column(Storage = "_usermodified", DbType = "bigint(10)")]
		public System.Nullable<decimal> usermodified
		{
			get
			{
				return this._usermodified;
			}
			set
			{
				if (this._usermodified != value)
				{
					this.OnusermodifiedChanging(value);
					this.SendPropertyChanging();
					this._usermodified = value;
					this.SendPropertyChanged("usermodified");
					this.OnusermodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_question")]
	public partial class mdl_question : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private long _category;

		private decimal _parent;

		private string _name;

		private string _questiontext;

		private short _questiontextformat;

		private string _image;

		private string _generalfeedback;

		private decimal _defaultgrade;

		private double _penalty;

		private string _qtype;

		private decimal _length;

		private string _stamp;

		private string _version;

		private byte _hidden;

		private decimal _timecreated;

		private decimal _timemodified;

		private System.Nullable<decimal> _createdby;

		private System.Nullable<decimal> _modifiedby;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncategoryChanging(long value);
		partial void OncategoryChanged();
		partial void OnparentChanging(decimal value);
		partial void OnparentChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnquestiontextChanging(string value);
		partial void OnquestiontextChanged();
		partial void OnquestiontextformatChanging(short value);
		partial void OnquestiontextformatChanged();
		partial void OnimageChanging(string value);
		partial void OnimageChanged();
		partial void OngeneralfeedbackChanging(string value);
		partial void OngeneralfeedbackChanged();
		partial void OndefaultgradeChanging(decimal value);
		partial void OndefaultgradeChanged();
		partial void OnpenaltyChanging(double value);
		partial void OnpenaltyChanged();
		partial void OnqtypeChanging(string value);
		partial void OnqtypeChanged();
		partial void OnlengthChanging(decimal value);
		partial void OnlengthChanged();
		partial void OnstampChanging(string value);
		partial void OnstampChanged();
		partial void OnversionChanging(string value);
		partial void OnversionChanged();
		partial void OnhiddenChanging(byte value);
		partial void OnhiddenChanged();
		partial void OntimecreatedChanging(decimal value);
		partial void OntimecreatedChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		partial void OncreatedbyChanging(System.Nullable<decimal> value);
		partial void OncreatedbyChanged();
		partial void OnmodifiedbyChanging(System.Nullable<decimal> value);
		partial void OnmodifiedbyChanged();
		#endregion

		public mdl_question()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_category", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long category
		{
			get
			{
				return this._category;
			}
			set
			{
				if (this._category != value)
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}

		[Column(Storage = "_parent", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if (this._parent != value)
				{
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_questiontext", CanBeNull = false, DbType = "text NOT NULL")]
		public string questiontext
		{
			get
			{
				return this._questiontext;
			}
			set
			{
				if (this._questiontext != value)
				{
					this.OnquestiontextChanging(value);
					this.SendPropertyChanging();
					this._questiontext = value;
					this.SendPropertyChanged("questiontext");
					this.OnquestiontextChanged();
				}
			}
		}

		[Column(Storage = "_questiontextformat", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public short questiontextformat
		{
			get
			{
				return this._questiontextformat;
			}
			set
			{
				if (this._questiontextformat != value)
				{
					this.OnquestiontextformatChanging(value);
					this.SendPropertyChanging();
					this._questiontextformat = value;
					this.SendPropertyChanged("questiontextformat");
					this.OnquestiontextformatChanged();
				}
			}
		}

		[Column(Storage = "_image", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if (this._image != value)
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}

		[Column(Storage = "_generalfeedback", CanBeNull = false, DbType = "text NOT NULL")]
		public string generalfeedback
		{
			get
			{
				return this._generalfeedback;
			}
			set
			{
				if (this._generalfeedback != value)
				{
					this.OngeneralfeedbackChanging(value);
					this.SendPropertyChanging();
					this._generalfeedback = value;
					this.SendPropertyChanged("generalfeedback");
					this.OngeneralfeedbackChanged();
				}
			}
		}

		[Column(Storage = "_defaultgrade", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal defaultgrade
		{
			get
			{
				return this._defaultgrade;
			}
			set
			{
				if (this._defaultgrade != value)
				{
					this.OndefaultgradeChanging(value);
					this.SendPropertyChanging();
					this._defaultgrade = value;
					this.SendPropertyChanged("defaultgrade");
					this.OndefaultgradeChanged();
				}
			}
		}

		[Column(Storage = "_penalty", CanBeNull = false, DbType = "double NOT NULL")]
		public double penalty
		{
			get
			{
				return this._penalty;
			}
			set
			{
				if (this._penalty != value)
				{
					this.OnpenaltyChanging(value);
					this.SendPropertyChanging();
					this._penalty = value;
					this.SendPropertyChanged("penalty");
					this.OnpenaltyChanged();
				}
			}
		}

		[Column(Storage = "_qtype", CanBeNull = false, DbType = "varchar(60) NOT NULL")]
		public string qtype
		{
			get
			{
				return this._qtype;
			}
			set
			{
				if (this._qtype != value)
				{
					this.OnqtypeChanging(value);
					this.SendPropertyChanging();
					this._qtype = value;
					this.SendPropertyChanged("qtype");
					this.OnqtypeChanged();
				}
			}
		}

		[Column(Storage = "_length", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal length
		{
			get
			{
				return this._length;
			}
			set
			{
				if (this._length != value)
				{
					this.OnlengthChanging(value);
					this.SendPropertyChanging();
					this._length = value;
					this.SendPropertyChanged("length");
					this.OnlengthChanged();
				}
			}
		}

		[Column(Storage = "_stamp", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string stamp
		{
			get
			{
				return this._stamp;
			}
			set
			{
				if (this._stamp != value)
				{
					this.OnstampChanging(value);
					this.SendPropertyChanging();
					this._stamp = value;
					this.SendPropertyChanged("stamp");
					this.OnstampChanged();
				}
			}
		}

		[Column(Storage = "_version", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string version
		{
			get
			{
				return this._version;
			}
			set
			{
				if (this._version != value)
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}

		[Column(Storage = "_hidden", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte hidden
		{
			get
			{
				return this._hidden;
			}
			set
			{
				if (this._hidden != value)
				{
					this.OnhiddenChanging(value);
					this.SendPropertyChanging();
					this._hidden = value;
					this.SendPropertyChanged("hidden");
					this.OnhiddenChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_createdby", DbType = "bigint(10)")]
		public System.Nullable<decimal> createdby
		{
			get
			{
				return this._createdby;
			}
			set
			{
				if (this._createdby != value)
				{
					this.OncreatedbyChanging(value);
					this.SendPropertyChanging();
					this._createdby = value;
					this.SendPropertyChanged("createdby");
					this.OncreatedbyChanged();
				}
			}
		}

		[Column(Storage = "_modifiedby", DbType = "bigint(10)")]
		public System.Nullable<decimal> modifiedby
		{
			get
			{
				return this._modifiedby;
			}
			set
			{
				if (this._modifiedby != value)
				{
					this.OnmodifiedbyChanging(value);
					this.SendPropertyChanging();
					this._modifiedby = value;
					this.SendPropertyChanged("modifiedby");
					this.OnmodifiedbyChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_question_answers")]
	public partial class mdl_question_answer : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _question;

		private string _answer;

		private double _fraction;

		private string _feedback;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnquestionChanging(decimal value);
		partial void OnquestionChanged();
		partial void OnanswerChanging(string value);
		partial void OnanswerChanged();
		partial void OnfractionChanging(double value);
		partial void OnfractionChanged();
		partial void OnfeedbackChanging(string value);
		partial void OnfeedbackChanged();
		#endregion

		public mdl_question_answer()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_question", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal question
		{
			get
			{
				return this._question;
			}
			set
			{
				if (this._question != value)
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}

		[Column(Storage = "_answer", CanBeNull = false, DbType = "text NOT NULL")]
		public string answer
		{
			get
			{
				return this._answer;
			}
			set
			{
				if (this._answer != value)
				{
					this.OnanswerChanging(value);
					this.SendPropertyChanging();
					this._answer = value;
					this.SendPropertyChanged("answer");
					this.OnanswerChanged();
				}
			}
		}

		[Column(Storage = "_fraction", CanBeNull = false, DbType = "double NOT NULL")]
		public double fraction
		{
			get
			{
				return this._fraction;
			}
			set
			{
				if (this._fraction != value)
				{
					this.OnfractionChanging(value);
					this.SendPropertyChanging();
					this._fraction = value;
					this.SendPropertyChanged("fraction");
					this.OnfractionChanged();
				}
			}
		}

		[Column(Storage = "_feedback", CanBeNull = false, DbType = "text NOT NULL")]
		public string feedback
		{
			get
			{
				return this._feedback;
			}
			set
			{
				if (this._feedback != value)
				{
					this.OnfeedbackChanging(value);
					this.SendPropertyChanging();
					this._feedback = value;
					this.SendPropertyChanged("feedback");
					this.OnfeedbackChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_question_attempts")]
	public partial class mdl_question_attempt : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _modulename;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnmodulenameChanging(string value);
		partial void OnmodulenameChanged();
		#endregion

		public mdl_question_attempt()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_modulename", CanBeNull = false, DbType = "varchar(60) NOT NULL")]
		public string modulename
		{
			get
			{
				return this._modulename;
			}
			set
			{
				if (this._modulename != value)
				{
					this.OnmodulenameChanging(value);
					this.SendPropertyChanging();
					this._modulename = value;
					this.SendPropertyChanged("modulename");
					this.OnmodulenameChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_question_calculated")]
	public partial class mdl_question_calculated : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _question;

		private decimal _answer;

		private string _tolerance;

		private long _tolerancetype;

		private long _correctanswerlength;

		private long _correctanswerformat;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnquestionChanging(decimal value);
		partial void OnquestionChanged();
		partial void OnanswerChanging(decimal value);
		partial void OnanswerChanged();
		partial void OntoleranceChanging(string value);
		partial void OntoleranceChanged();
		partial void OntolerancetypeChanging(long value);
		partial void OntolerancetypeChanged();
		partial void OncorrectanswerlengthChanging(long value);
		partial void OncorrectanswerlengthChanged();
		partial void OncorrectanswerformatChanging(long value);
		partial void OncorrectanswerformatChanged();
		#endregion

		public mdl_question_calculated()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_question", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal question
		{
			get
			{
				return this._question;
			}
			set
			{
				if (this._question != value)
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}

		[Column(Storage = "_answer", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal answer
		{
			get
			{
				return this._answer;
			}
			set
			{
				if (this._answer != value)
				{
					this.OnanswerChanging(value);
					this.SendPropertyChanging();
					this._answer = value;
					this.SendPropertyChanged("answer");
					this.OnanswerChanged();
				}
			}
		}

		[Column(Storage = "_tolerance", CanBeNull = false, DbType = "varchar(60) NOT NULL")]
		public string tolerance
		{
			get
			{
				return this._tolerance;
			}
			set
			{
				if (this._tolerance != value)
				{
					this.OntoleranceChanging(value);
					this.SendPropertyChanging();
					this._tolerance = value;
					this.SendPropertyChanged("tolerance");
					this.OntoleranceChanged();
				}
			}
		}

		[Column(Storage = "_tolerancetype", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long tolerancetype
		{
			get
			{
				return this._tolerancetype;
			}
			set
			{
				if (this._tolerancetype != value)
				{
					this.OntolerancetypeChanging(value);
					this.SendPropertyChanging();
					this._tolerancetype = value;
					this.SendPropertyChanged("tolerancetype");
					this.OntolerancetypeChanged();
				}
			}
		}

		[Column(Storage = "_correctanswerlength", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long correctanswerlength
		{
			get
			{
				return this._correctanswerlength;
			}
			set
			{
				if (this._correctanswerlength != value)
				{
					this.OncorrectanswerlengthChanging(value);
					this.SendPropertyChanging();
					this._correctanswerlength = value;
					this.SendPropertyChanged("correctanswerlength");
					this.OncorrectanswerlengthChanged();
				}
			}
		}

		[Column(Storage = "_correctanswerformat", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long correctanswerformat
		{
			get
			{
				return this._correctanswerformat;
			}
			set
			{
				if (this._correctanswerformat != value)
				{
					this.OncorrectanswerformatChanging(value);
					this.SendPropertyChanging();
					this._correctanswerformat = value;
					this.SendPropertyChanged("correctanswerformat");
					this.OncorrectanswerformatChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_question_categories")]
	public partial class mdl_question_category : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _name;

		private decimal _contextid;

		private string _info;

		private string _stamp;

		private decimal _parent;

		private decimal _sortorder;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OncontextidChanging(decimal value);
		partial void OncontextidChanged();
		partial void OninfoChanging(string value);
		partial void OninfoChanged();
		partial void OnstampChanging(string value);
		partial void OnstampChanged();
		partial void OnparentChanging(decimal value);
		partial void OnparentChanged();
		partial void OnsortorderChanging(decimal value);
		partial void OnsortorderChanged();
		#endregion

		public mdl_question_category()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_contextid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal contextid
		{
			get
			{
				return this._contextid;
			}
			set
			{
				if (this._contextid != value)
				{
					this.OncontextidChanging(value);
					this.SendPropertyChanging();
					this._contextid = value;
					this.SendPropertyChanged("contextid");
					this.OncontextidChanged();
				}
			}
		}

		[Column(Storage = "_info", CanBeNull = false, DbType = "text NOT NULL")]
		public string info
		{
			get
			{
				return this._info;
			}
			set
			{
				if (this._info != value)
				{
					this.OninfoChanging(value);
					this.SendPropertyChanging();
					this._info = value;
					this.SendPropertyChanged("info");
					this.OninfoChanged();
				}
			}
		}

		[Column(Storage = "_stamp", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string stamp
		{
			get
			{
				return this._stamp;
			}
			set
			{
				if (this._stamp != value)
				{
					this.OnstampChanging(value);
					this.SendPropertyChanging();
					this._stamp = value;
					this.SendPropertyChanged("stamp");
					this.OnstampChanged();
				}
			}
		}

		[Column(Storage = "_parent", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if (this._parent != value)
				{
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}

		[Column(Storage = "_sortorder", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal sortorder
		{
			get
			{
				return this._sortorder;
			}
			set
			{
				if (this._sortorder != value)
				{
					this.OnsortorderChanging(value);
					this.SendPropertyChanging();
					this._sortorder = value;
					this.SendPropertyChanged("sortorder");
					this.OnsortorderChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_question_dataset_definitions")]
	public partial class mdl_question_dataset_definition : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _category;

		private string _name;

		private long _type;

		private string _options;

		private decimal _itemcount;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncategoryChanging(decimal value);
		partial void OncategoryChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OntypeChanging(long value);
		partial void OntypeChanged();
		partial void OnoptionsChanging(string value);
		partial void OnoptionsChanged();
		partial void OnitemcountChanging(decimal value);
		partial void OnitemcountChanged();
		#endregion

		public mdl_question_dataset_definition()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_category", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal category
		{
			get
			{
				return this._category;
			}
			set
			{
				if (this._category != value)
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_type", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long type
		{
			get
			{
				return this._type;
			}
			set
			{
				if (this._type != value)
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}

		[Column(Storage = "_options", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string options
		{
			get
			{
				return this._options;
			}
			set
			{
				if (this._options != value)
				{
					this.OnoptionsChanging(value);
					this.SendPropertyChanging();
					this._options = value;
					this.SendPropertyChanged("options");
					this.OnoptionsChanged();
				}
			}
		}

		[Column(Storage = "_itemcount", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal itemcount
		{
			get
			{
				return this._itemcount;
			}
			set
			{
				if (this._itemcount != value)
				{
					this.OnitemcountChanging(value);
					this.SendPropertyChanging();
					this._itemcount = value;
					this.SendPropertyChanged("itemcount");
					this.OnitemcountChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_question_dataset_items")]
	public partial class mdl_question_dataset_item : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _definition;

		private decimal _itemnumber;

		private string _value;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OndefinitionChanging(decimal value);
		partial void OndefinitionChanged();
		partial void OnitemnumberChanging(decimal value);
		partial void OnitemnumberChanged();
		partial void OnvalueChanging(string value);
		partial void OnvalueChanged();
		#endregion

		public mdl_question_dataset_item()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_definition", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal definition
		{
			get
			{
				return this._definition;
			}
			set
			{
				if (this._definition != value)
				{
					this.OndefinitionChanging(value);
					this.SendPropertyChanging();
					this._definition = value;
					this.SendPropertyChanged("definition");
					this.OndefinitionChanged();
				}
			}
		}

		[Column(Storage = "_itemnumber", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal itemnumber
		{
			get
			{
				return this._itemnumber;
			}
			set
			{
				if (this._itemnumber != value)
				{
					this.OnitemnumberChanging(value);
					this.SendPropertyChanging();
					this._itemnumber = value;
					this.SendPropertyChanged("itemnumber");
					this.OnitemnumberChanged();
				}
			}
		}

		[Column(Storage = "_value", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if (this._value != value)
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_question_datasets")]
	public partial class mdl_question_dataset : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _question;

		private decimal _datasetdefinition;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnquestionChanging(decimal value);
		partial void OnquestionChanged();
		partial void OndatasetdefinitionChanging(decimal value);
		partial void OndatasetdefinitionChanged();
		#endregion

		public mdl_question_dataset()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_question", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal question
		{
			get
			{
				return this._question;
			}
			set
			{
				if (this._question != value)
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}

		[Column(Storage = "_datasetdefinition", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal datasetdefinition
		{
			get
			{
				return this._datasetdefinition;
			}
			set
			{
				if (this._datasetdefinition != value)
				{
					this.OndatasetdefinitionChanging(value);
					this.SendPropertyChanging();
					this._datasetdefinition = value;
					this.SendPropertyChanged("datasetdefinition");
					this.OndatasetdefinitionChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_question_match")]
	public partial class mdl_question_match : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _question;

		private string _subquestions;

		private short _shuffleanswers;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnquestionChanging(decimal value);
		partial void OnquestionChanged();
		partial void OnsubquestionsChanging(string value);
		partial void OnsubquestionsChanged();
		partial void OnshuffleanswersChanging(short value);
		partial void OnshuffleanswersChanged();
		#endregion

		public mdl_question_match()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_question", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal question
		{
			get
			{
				return this._question;
			}
			set
			{
				if (this._question != value)
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}

		[Column(Storage = "_subquestions", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string subquestions
		{
			get
			{
				return this._subquestions;
			}
			set
			{
				if (this._subquestions != value)
				{
					this.OnsubquestionsChanging(value);
					this.SendPropertyChanging();
					this._subquestions = value;
					this.SendPropertyChanged("subquestions");
					this.OnsubquestionsChanged();
				}
			}
		}

		[Column(Storage = "_shuffleanswers", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public short shuffleanswers
		{
			get
			{
				return this._shuffleanswers;
			}
			set
			{
				if (this._shuffleanswers != value)
				{
					this.OnshuffleanswersChanging(value);
					this.SendPropertyChanging();
					this._shuffleanswers = value;
					this.SendPropertyChanged("shuffleanswers");
					this.OnshuffleanswersChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_question_match_sub")]
	public partial class mdl_question_match_sub : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _code;

		private decimal _question;

		private string _questiontext;

		private string _answertext;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncodeChanging(decimal value);
		partial void OncodeChanged();
		partial void OnquestionChanging(decimal value);
		partial void OnquestionChanged();
		partial void OnquestiontextChanging(string value);
		partial void OnquestiontextChanged();
		partial void OnanswertextChanging(string value);
		partial void OnanswertextChanged();
		#endregion

		public mdl_question_match_sub()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_code", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal code
		{
			get
			{
				return this._code;
			}
			set
			{
				if (this._code != value)
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}

		[Column(Storage = "_question", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal question
		{
			get
			{
				return this._question;
			}
			set
			{
				if (this._question != value)
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}

		[Column(Storage = "_questiontext", CanBeNull = false, DbType = "text NOT NULL")]
		public string questiontext
		{
			get
			{
				return this._questiontext;
			}
			set
			{
				if (this._questiontext != value)
				{
					this.OnquestiontextChanging(value);
					this.SendPropertyChanging();
					this._questiontext = value;
					this.SendPropertyChanged("questiontext");
					this.OnquestiontextChanged();
				}
			}
		}

		[Column(Storage = "_answertext", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string answertext
		{
			get
			{
				return this._answertext;
			}
			set
			{
				if (this._answertext != value)
				{
					this.OnanswertextChanging(value);
					this.SendPropertyChanging();
					this._answertext = value;
					this.SendPropertyChanged("answertext");
					this.OnanswertextChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_question_multianswer")]
	public partial class mdl_question_multianswer : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _question;

		private string _sequence;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnquestionChanging(decimal value);
		partial void OnquestionChanged();
		partial void OnsequenceChanging(string value);
		partial void OnsequenceChanged();
		#endregion

		public mdl_question_multianswer()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_question", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal question
		{
			get
			{
				return this._question;
			}
			set
			{
				if (this._question != value)
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}

		[Column(Storage = "_sequence", CanBeNull = false, DbType = "text NOT NULL")]
		public string sequence
		{
			get
			{
				return this._sequence;
			}
			set
			{
				if (this._sequence != value)
				{
					this.OnsequenceChanging(value);
					this.SendPropertyChanging();
					this._sequence = value;
					this.SendPropertyChanged("sequence");
					this.OnsequenceChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_question_multichoice")]
	public partial class mdl_question_multichoice : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _question;

		private short _layout;

		private string _answers;

		private short _single;

		private short _shuffleanswers;

		private string _correctfeedback;

		private string _partiallycorrectfeedback;

		private string _incorrectfeedback;

		private string _answernumbering;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnquestionChanging(decimal value);
		partial void OnquestionChanged();
		partial void OnlayoutChanging(short value);
		partial void OnlayoutChanged();
		partial void OnanswersChanging(string value);
		partial void OnanswersChanged();
		partial void OnsingleChanging(short value);
		partial void OnsingleChanged();
		partial void OnshuffleanswersChanging(short value);
		partial void OnshuffleanswersChanged();
		partial void OncorrectfeedbackChanging(string value);
		partial void OncorrectfeedbackChanged();
		partial void OnpartiallycorrectfeedbackChanging(string value);
		partial void OnpartiallycorrectfeedbackChanged();
		partial void OnincorrectfeedbackChanging(string value);
		partial void OnincorrectfeedbackChanged();
		partial void OnanswernumberingChanging(string value);
		partial void OnanswernumberingChanged();
		#endregion

		public mdl_question_multichoice()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_question", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal question
		{
			get
			{
				return this._question;
			}
			set
			{
				if (this._question != value)
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}

		[Column(Storage = "_layout", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public short layout
		{
			get
			{
				return this._layout;
			}
			set
			{
				if (this._layout != value)
				{
					this.OnlayoutChanging(value);
					this.SendPropertyChanging();
					this._layout = value;
					this.SendPropertyChanged("layout");
					this.OnlayoutChanged();
				}
			}
		}

		[Column(Storage = "_answers", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string answers
		{
			get
			{
				return this._answers;
			}
			set
			{
				if (this._answers != value)
				{
					this.OnanswersChanging(value);
					this.SendPropertyChanging();
					this._answers = value;
					this.SendPropertyChanged("answers");
					this.OnanswersChanged();
				}
			}
		}

		[Column(Storage = "_single", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public short single
		{
			get
			{
				return this._single;
			}
			set
			{
				if (this._single != value)
				{
					this.OnsingleChanging(value);
					this.SendPropertyChanging();
					this._single = value;
					this.SendPropertyChanged("single");
					this.OnsingleChanged();
				}
			}
		}

		[Column(Storage = "_shuffleanswers", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public short shuffleanswers
		{
			get
			{
				return this._shuffleanswers;
			}
			set
			{
				if (this._shuffleanswers != value)
				{
					this.OnshuffleanswersChanging(value);
					this.SendPropertyChanging();
					this._shuffleanswers = value;
					this.SendPropertyChanged("shuffleanswers");
					this.OnshuffleanswersChanged();
				}
			}
		}

		[Column(Storage = "_correctfeedback", CanBeNull = false, DbType = "text NOT NULL")]
		public string correctfeedback
		{
			get
			{
				return this._correctfeedback;
			}
			set
			{
				if (this._correctfeedback != value)
				{
					this.OncorrectfeedbackChanging(value);
					this.SendPropertyChanging();
					this._correctfeedback = value;
					this.SendPropertyChanged("correctfeedback");
					this.OncorrectfeedbackChanged();
				}
			}
		}

		[Column(Storage = "_partiallycorrectfeedback", CanBeNull = false, DbType = "text NOT NULL")]
		public string partiallycorrectfeedback
		{
			get
			{
				return this._partiallycorrectfeedback;
			}
			set
			{
				if (this._partiallycorrectfeedback != value)
				{
					this.OnpartiallycorrectfeedbackChanging(value);
					this.SendPropertyChanging();
					this._partiallycorrectfeedback = value;
					this.SendPropertyChanged("partiallycorrectfeedback");
					this.OnpartiallycorrectfeedbackChanged();
				}
			}
		}

		[Column(Storage = "_incorrectfeedback", CanBeNull = false, DbType = "text NOT NULL")]
		public string incorrectfeedback
		{
			get
			{
				return this._incorrectfeedback;
			}
			set
			{
				if (this._incorrectfeedback != value)
				{
					this.OnincorrectfeedbackChanging(value);
					this.SendPropertyChanging();
					this._incorrectfeedback = value;
					this.SendPropertyChanged("incorrectfeedback");
					this.OnincorrectfeedbackChanged();
				}
			}
		}

		[Column(Storage = "_answernumbering", CanBeNull = false, DbType = "varchar(30) NOT NULL")]
		public string answernumbering
		{
			get
			{
				return this._answernumbering;
			}
			set
			{
				if (this._answernumbering != value)
				{
					this.OnanswernumberingChanging(value);
					this.SendPropertyChanging();
					this._answernumbering = value;
					this.SendPropertyChanged("answernumbering");
					this.OnanswernumberingChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_question_numerical")]
	public partial class mdl_question_numerical : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _question;

		private decimal _answer;

		private string _tolerance;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnquestionChanging(decimal value);
		partial void OnquestionChanged();
		partial void OnanswerChanging(decimal value);
		partial void OnanswerChanged();
		partial void OntoleranceChanging(string value);
		partial void OntoleranceChanged();
		#endregion

		public mdl_question_numerical()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_question", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal question
		{
			get
			{
				return this._question;
			}
			set
			{
				if (this._question != value)
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}

		[Column(Storage = "_answer", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal answer
		{
			get
			{
				return this._answer;
			}
			set
			{
				if (this._answer != value)
				{
					this.OnanswerChanging(value);
					this.SendPropertyChanging();
					this._answer = value;
					this.SendPropertyChanged("answer");
					this.OnanswerChanged();
				}
			}
		}

		[Column(Storage = "_tolerance", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string tolerance
		{
			get
			{
				return this._tolerance;
			}
			set
			{
				if (this._tolerance != value)
				{
					this.OntoleranceChanging(value);
					this.SendPropertyChanging();
					this._tolerance = value;
					this.SendPropertyChanged("tolerance");
					this.OntoleranceChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_question_numerical_units")]
	public partial class mdl_question_numerical_unit : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _question;

		private decimal _multiplier;

		private string _unit;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnquestionChanging(decimal value);
		partial void OnquestionChanged();
		partial void OnmultiplierChanging(decimal value);
		partial void OnmultiplierChanged();
		partial void OnunitChanging(string value);
		partial void OnunitChanged();
		#endregion

		public mdl_question_numerical_unit()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_question", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal question
		{
			get
			{
				return this._question;
			}
			set
			{
				if (this._question != value)
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}

		[Column(Storage = "_multiplier", CanBeNull = false, DbType = "decimal(40,20) NOT NULL")]
		public decimal multiplier
		{
			get
			{
				return this._multiplier;
			}
			set
			{
				if (this._multiplier != value)
				{
					this.OnmultiplierChanging(value);
					this.SendPropertyChanging();
					this._multiplier = value;
					this.SendPropertyChanged("multiplier");
					this.OnmultiplierChanged();
				}
			}
		}

		[Column(Storage = "_unit", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string unit
		{
			get
			{
				return this._unit;
			}
			set
			{
				if (this._unit != value)
				{
					this.OnunitChanging(value);
					this.SendPropertyChanging();
					this._unit = value;
					this.SendPropertyChanged("unit");
					this.OnunitChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_question_randomsamatch")]
	public partial class mdl_question_randomsamatch : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _question;

		private decimal _choose;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnquestionChanging(decimal value);
		partial void OnquestionChanged();
		partial void OnchooseChanging(decimal value);
		partial void OnchooseChanged();
		#endregion

		public mdl_question_randomsamatch()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_question", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal question
		{
			get
			{
				return this._question;
			}
			set
			{
				if (this._question != value)
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}

		[Column(Storage = "_choose", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal choose
		{
			get
			{
				return this._choose;
			}
			set
			{
				if (this._choose != value)
				{
					this.OnchooseChanging(value);
					this.SendPropertyChanging();
					this._choose = value;
					this.SendPropertyChanged("choose");
					this.OnchooseChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_question_sessions")]
	public partial class mdl_question_session : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _attemptid;

		private decimal _questionid;

		private decimal _newest;

		private decimal _newgraded;

		private double _sumpenalty;

		private string _manualcomment;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnattemptidChanging(decimal value);
		partial void OnattemptidChanged();
		partial void OnquestionidChanging(decimal value);
		partial void OnquestionidChanged();
		partial void OnnewestChanging(decimal value);
		partial void OnnewestChanged();
		partial void OnnewgradedChanging(decimal value);
		partial void OnnewgradedChanged();
		partial void OnsumpenaltyChanging(double value);
		partial void OnsumpenaltyChanged();
		partial void OnmanualcommentChanging(string value);
		partial void OnmanualcommentChanged();
		#endregion

		public mdl_question_session()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_attemptid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal attemptid
		{
			get
			{
				return this._attemptid;
			}
			set
			{
				if (this._attemptid != value)
				{
					this.OnattemptidChanging(value);
					this.SendPropertyChanging();
					this._attemptid = value;
					this.SendPropertyChanged("attemptid");
					this.OnattemptidChanged();
				}
			}
		}

		[Column(Storage = "_questionid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal questionid
		{
			get
			{
				return this._questionid;
			}
			set
			{
				if (this._questionid != value)
				{
					this.OnquestionidChanging(value);
					this.SendPropertyChanging();
					this._questionid = value;
					this.SendPropertyChanged("questionid");
					this.OnquestionidChanged();
				}
			}
		}

		[Column(Storage = "_newest", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal newest
		{
			get
			{
				return this._newest;
			}
			set
			{
				if (this._newest != value)
				{
					this.OnnewestChanging(value);
					this.SendPropertyChanging();
					this._newest = value;
					this.SendPropertyChanged("newest");
					this.OnnewestChanged();
				}
			}
		}

		[Column(Storage = "_newgraded", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal newgraded
		{
			get
			{
				return this._newgraded;
			}
			set
			{
				if (this._newgraded != value)
				{
					this.OnnewgradedChanging(value);
					this.SendPropertyChanging();
					this._newgraded = value;
					this.SendPropertyChanged("newgraded");
					this.OnnewgradedChanged();
				}
			}
		}

		[Column(Storage = "_sumpenalty", CanBeNull = false, DbType = "double NOT NULL")]
		public double sumpenalty
		{
			get
			{
				return this._sumpenalty;
			}
			set
			{
				if (this._sumpenalty != value)
				{
					this.OnsumpenaltyChanging(value);
					this.SendPropertyChanging();
					this._sumpenalty = value;
					this.SendPropertyChanged("sumpenalty");
					this.OnsumpenaltyChanged();
				}
			}
		}

		[Column(Storage = "_manualcomment", CanBeNull = false, DbType = "text NOT NULL")]
		public string manualcomment
		{
			get
			{
				return this._manualcomment;
			}
			set
			{
				if (this._manualcomment != value)
				{
					this.OnmanualcommentChanging(value);
					this.SendPropertyChanging();
					this._manualcomment = value;
					this.SendPropertyChanged("manualcomment");
					this.OnmanualcommentChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_question_shortanswer")]
	public partial class mdl_question_shortanswer : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _question;

		private string _answers;

		private short _usecase;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnquestionChanging(decimal value);
		partial void OnquestionChanged();
		partial void OnanswersChanging(string value);
		partial void OnanswersChanged();
		partial void OnusecaseChanging(short value);
		partial void OnusecaseChanged();
		#endregion

		public mdl_question_shortanswer()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_question", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal question
		{
			get
			{
				return this._question;
			}
			set
			{
				if (this._question != value)
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}

		[Column(Storage = "_answers", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string answers
		{
			get
			{
				return this._answers;
			}
			set
			{
				if (this._answers != value)
				{
					this.OnanswersChanging(value);
					this.SendPropertyChanging();
					this._answers = value;
					this.SendPropertyChanged("answers");
					this.OnanswersChanged();
				}
			}
		}

		[Column(Storage = "_usecase", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public short usecase
		{
			get
			{
				return this._usecase;
			}
			set
			{
				if (this._usecase != value)
				{
					this.OnusecaseChanging(value);
					this.SendPropertyChanging();
					this._usecase = value;
					this.SendPropertyChanged("usecase");
					this.OnusecaseChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_question_states")]
	public partial class mdl_question_state : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _attempt;

		private decimal _question;

		private decimal _originalquestion;

		private int _seq_number;

		private string _answer;

		private decimal _timestamp;

		private int _event;

		private double _grade;

		private double _raw_grade;

		private double _penalty;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnattemptChanging(decimal value);
		partial void OnattemptChanged();
		partial void OnquestionChanging(decimal value);
		partial void OnquestionChanged();
		partial void OnoriginalquestionChanging(decimal value);
		partial void OnoriginalquestionChanged();
		partial void Onseq_numberChanging(int value);
		partial void Onseq_numberChanged();
		partial void OnanswerChanging(string value);
		partial void OnanswerChanged();
		partial void OntimestampChanging(decimal value);
		partial void OntimestampChanged();
		partial void OneventChanging(int value);
		partial void OneventChanged();
		partial void OngradeChanging(double value);
		partial void OngradeChanged();
		partial void Onraw_gradeChanging(double value);
		partial void Onraw_gradeChanged();
		partial void OnpenaltyChanging(double value);
		partial void OnpenaltyChanged();
		#endregion

		public mdl_question_state()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_attempt", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal attempt
		{
			get
			{
				return this._attempt;
			}
			set
			{
				if (this._attempt != value)
				{
					this.OnattemptChanging(value);
					this.SendPropertyChanging();
					this._attempt = value;
					this.SendPropertyChanged("attempt");
					this.OnattemptChanged();
				}
			}
		}

		[Column(Storage = "_question", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal question
		{
			get
			{
				return this._question;
			}
			set
			{
				if (this._question != value)
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}

		[Column(Storage = "_originalquestion", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal originalquestion
		{
			get
			{
				return this._originalquestion;
			}
			set
			{
				if (this._originalquestion != value)
				{
					this.OnoriginalquestionChanging(value);
					this.SendPropertyChanging();
					this._originalquestion = value;
					this.SendPropertyChanged("originalquestion");
					this.OnoriginalquestionChanged();
				}
			}
		}

		[Column(Storage = "_seq_number", CanBeNull = false, DbType = "mediumint(6) NOT NULL")]
		public int seq_number
		{
			get
			{
				return this._seq_number;
			}
			set
			{
				if (this._seq_number != value)
				{
					this.Onseq_numberChanging(value);
					this.SendPropertyChanging();
					this._seq_number = value;
					this.SendPropertyChanged("seq_number");
					this.Onseq_numberChanged();
				}
			}
		}

		[Column(Storage = "_answer", CanBeNull = false, DbType = "text NOT NULL")]
		public string answer
		{
			get
			{
				return this._answer;
			}
			set
			{
				if (this._answer != value)
				{
					this.OnanswerChanging(value);
					this.SendPropertyChanging();
					this._answer = value;
					this.SendPropertyChanged("answer");
					this.OnanswerChanged();
				}
			}
		}

		[Column(Storage = "_timestamp", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if (this._timestamp != value)
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}

		[Column(Storage = "_event", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int @event
		{
			get
			{
				return this._event;
			}
			set
			{
				if (this._event != value)
				{
					this.OneventChanging(value);
					this.SendPropertyChanging();
					this._event = value;
					this.SendPropertyChanged("@event");
					this.OneventChanged();
				}
			}
		}

		[Column(Storage = "_grade", CanBeNull = false, DbType = "double NOT NULL")]
		public double grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if (this._grade != value)
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}

		[Column(Storage = "_raw_grade", CanBeNull = false, DbType = "double NOT NULL")]
		public double raw_grade
		{
			get
			{
				return this._raw_grade;
			}
			set
			{
				if (this._raw_grade != value)
				{
					this.Onraw_gradeChanging(value);
					this.SendPropertyChanging();
					this._raw_grade = value;
					this.SendPropertyChanged("raw_grade");
					this.Onraw_gradeChanged();
				}
			}
		}

		[Column(Storage = "_penalty", CanBeNull = false, DbType = "double NOT NULL")]
		public double penalty
		{
			get
			{
				return this._penalty;
			}
			set
			{
				if (this._penalty != value)
				{
					this.OnpenaltyChanging(value);
					this.SendPropertyChanging();
					this._penalty = value;
					this.SendPropertyChanged("penalty");
					this.OnpenaltyChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_question_truefalse")]
	public partial class mdl_question_truefalse : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _question;

		private decimal _trueanswer;

		private decimal _falseanswer;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnquestionChanging(decimal value);
		partial void OnquestionChanged();
		partial void OntrueanswerChanging(decimal value);
		partial void OntrueanswerChanged();
		partial void OnfalseanswerChanging(decimal value);
		partial void OnfalseanswerChanged();
		#endregion

		public mdl_question_truefalse()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_question", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal question
		{
			get
			{
				return this._question;
			}
			set
			{
				if (this._question != value)
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}

		[Column(Storage = "_trueanswer", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal trueanswer
		{
			get
			{
				return this._trueanswer;
			}
			set
			{
				if (this._trueanswer != value)
				{
					this.OntrueanswerChanging(value);
					this.SendPropertyChanging();
					this._trueanswer = value;
					this.SendPropertyChanged("trueanswer");
					this.OntrueanswerChanged();
				}
			}
		}

		[Column(Storage = "_falseanswer", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal falseanswer
		{
			get
			{
				return this._falseanswer;
			}
			set
			{
				if (this._falseanswer != value)
				{
					this.OnfalseanswerChanging(value);
					this.SendPropertyChanging();
					this._falseanswer = value;
					this.SendPropertyChanged("falseanswer");
					this.OnfalseanswerChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_quiz")]
	public partial class mdl_quiz : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private string _name;

		private string _intro;

		private decimal _timeopen;

		private decimal _timeclose;

		private decimal _optionflags;

		private int _penaltyscheme;

		private int _attempts;

		private short _attemptonlast;

		private short _grademethod;

		private short _decimalpoints;

		private decimal _review;

		private long _questionsperpage;

		private short _shufflequestions;

		private short _shuffleanswers;

		private string _questions;

		private long _sumgrades;

		private long _grade;

		private decimal _timecreated;

		private decimal _timemodified;

		private decimal _timelimit;

		private string _password;

		private string _subnet;

		private short _popup;

		private long _delay1;

		private long _delay2;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnintroChanging(string value);
		partial void OnintroChanged();
		partial void OntimeopenChanging(decimal value);
		partial void OntimeopenChanged();
		partial void OntimecloseChanging(decimal value);
		partial void OntimecloseChanged();
		partial void OnoptionflagsChanging(decimal value);
		partial void OnoptionflagsChanged();
		partial void OnpenaltyschemeChanging(int value);
		partial void OnpenaltyschemeChanged();
		partial void OnattemptsChanging(int value);
		partial void OnattemptsChanged();
		partial void OnattemptonlastChanging(short value);
		partial void OnattemptonlastChanged();
		partial void OngrademethodChanging(short value);
		partial void OngrademethodChanged();
		partial void OndecimalpointsChanging(short value);
		partial void OndecimalpointsChanged();
		partial void OnreviewChanging(decimal value);
		partial void OnreviewChanged();
		partial void OnquestionsperpageChanging(long value);
		partial void OnquestionsperpageChanged();
		partial void OnshufflequestionsChanging(short value);
		partial void OnshufflequestionsChanged();
		partial void OnshuffleanswersChanging(short value);
		partial void OnshuffleanswersChanged();
		partial void OnquestionsChanging(string value);
		partial void OnquestionsChanged();
		partial void OnsumgradesChanging(long value);
		partial void OnsumgradesChanged();
		partial void OngradeChanging(long value);
		partial void OngradeChanged();
		partial void OntimecreatedChanging(decimal value);
		partial void OntimecreatedChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		partial void OntimelimitChanging(decimal value);
		partial void OntimelimitChanged();
		partial void OnpasswordChanging(string value);
		partial void OnpasswordChanged();
		partial void OnsubnetChanging(string value);
		partial void OnsubnetChanged();
		partial void OnpopupChanging(short value);
		partial void OnpopupChanged();
		partial void Ondelay1Changing(long value);
		partial void Ondelay1Changed();
		partial void Ondelay2Changing(long value);
		partial void Ondelay2Changed();
		#endregion

		public mdl_quiz()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_intro", CanBeNull = false, DbType = "text NOT NULL")]
		public string intro
		{
			get
			{
				return this._intro;
			}
			set
			{
				if (this._intro != value)
				{
					this.OnintroChanging(value);
					this.SendPropertyChanging();
					this._intro = value;
					this.SendPropertyChanged("intro");
					this.OnintroChanged();
				}
			}
		}

		[Column(Storage = "_timeopen", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeopen
		{
			get
			{
				return this._timeopen;
			}
			set
			{
				if (this._timeopen != value)
				{
					this.OntimeopenChanging(value);
					this.SendPropertyChanging();
					this._timeopen = value;
					this.SendPropertyChanged("timeopen");
					this.OntimeopenChanged();
				}
			}
		}

		[Column(Storage = "_timeclose", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeclose
		{
			get
			{
				return this._timeclose;
			}
			set
			{
				if (this._timeclose != value)
				{
					this.OntimecloseChanging(value);
					this.SendPropertyChanging();
					this._timeclose = value;
					this.SendPropertyChanged("timeclose");
					this.OntimecloseChanged();
				}
			}
		}

		[Column(Storage = "_optionflags", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal optionflags
		{
			get
			{
				return this._optionflags;
			}
			set
			{
				if (this._optionflags != value)
				{
					this.OnoptionflagsChanging(value);
					this.SendPropertyChanging();
					this._optionflags = value;
					this.SendPropertyChanged("optionflags");
					this.OnoptionflagsChanged();
				}
			}
		}

		[Column(Storage = "_penaltyscheme", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int penaltyscheme
		{
			get
			{
				return this._penaltyscheme;
			}
			set
			{
				if (this._penaltyscheme != value)
				{
					this.OnpenaltyschemeChanging(value);
					this.SendPropertyChanging();
					this._penaltyscheme = value;
					this.SendPropertyChanged("penaltyscheme");
					this.OnpenaltyschemeChanged();
				}
			}
		}

		[Column(Storage = "_attempts", CanBeNull = false, DbType = "mediumint(6) NOT NULL")]
		public int attempts
		{
			get
			{
				return this._attempts;
			}
			set
			{
				if (this._attempts != value)
				{
					this.OnattemptsChanging(value);
					this.SendPropertyChanging();
					this._attempts = value;
					this.SendPropertyChanged("attempts");
					this.OnattemptsChanged();
				}
			}
		}

		[Column(Storage = "_attemptonlast", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public short attemptonlast
		{
			get
			{
				return this._attemptonlast;
			}
			set
			{
				if (this._attemptonlast != value)
				{
					this.OnattemptonlastChanging(value);
					this.SendPropertyChanging();
					this._attemptonlast = value;
					this.SendPropertyChanged("attemptonlast");
					this.OnattemptonlastChanged();
				}
			}
		}

		[Column(Storage = "_grademethod", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public short grademethod
		{
			get
			{
				return this._grademethod;
			}
			set
			{
				if (this._grademethod != value)
				{
					this.OngrademethodChanging(value);
					this.SendPropertyChanging();
					this._grademethod = value;
					this.SendPropertyChanged("grademethod");
					this.OngrademethodChanged();
				}
			}
		}

		[Column(Storage = "_decimalpoints", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public short decimalpoints
		{
			get
			{
				return this._decimalpoints;
			}
			set
			{
				if (this._decimalpoints != value)
				{
					this.OndecimalpointsChanging(value);
					this.SendPropertyChanging();
					this._decimalpoints = value;
					this.SendPropertyChanged("decimalpoints");
					this.OndecimalpointsChanged();
				}
			}
		}

		[Column(Storage = "_review", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal review
		{
			get
			{
				return this._review;
			}
			set
			{
				if (this._review != value)
				{
					this.OnreviewChanging(value);
					this.SendPropertyChanging();
					this._review = value;
					this.SendPropertyChanged("review");
					this.OnreviewChanged();
				}
			}
		}

		[Column(Storage = "_questionsperpage", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long questionsperpage
		{
			get
			{
				return this._questionsperpage;
			}
			set
			{
				if (this._questionsperpage != value)
				{
					this.OnquestionsperpageChanging(value);
					this.SendPropertyChanging();
					this._questionsperpage = value;
					this.SendPropertyChanged("questionsperpage");
					this.OnquestionsperpageChanged();
				}
			}
		}

		[Column(Storage = "_shufflequestions", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public short shufflequestions
		{
			get
			{
				return this._shufflequestions;
			}
			set
			{
				if (this._shufflequestions != value)
				{
					this.OnshufflequestionsChanging(value);
					this.SendPropertyChanging();
					this._shufflequestions = value;
					this.SendPropertyChanged("shufflequestions");
					this.OnshufflequestionsChanged();
				}
			}
		}

		[Column(Storage = "_shuffleanswers", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public short shuffleanswers
		{
			get
			{
				return this._shuffleanswers;
			}
			set
			{
				if (this._shuffleanswers != value)
				{
					this.OnshuffleanswersChanging(value);
					this.SendPropertyChanging();
					this._shuffleanswers = value;
					this.SendPropertyChanged("shuffleanswers");
					this.OnshuffleanswersChanged();
				}
			}
		}

		[Column(Storage = "_questions", CanBeNull = false, DbType = "text NOT NULL")]
		public string questions
		{
			get
			{
				return this._questions;
			}
			set
			{
				if (this._questions != value)
				{
					this.OnquestionsChanging(value);
					this.SendPropertyChanging();
					this._questions = value;
					this.SendPropertyChanged("questions");
					this.OnquestionsChanged();
				}
			}
		}

		[Column(Storage = "_sumgrades", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long sumgrades
		{
			get
			{
				return this._sumgrades;
			}
			set
			{
				if (this._sumgrades != value)
				{
					this.OnsumgradesChanging(value);
					this.SendPropertyChanging();
					this._sumgrades = value;
					this.SendPropertyChanged("sumgrades");
					this.OnsumgradesChanged();
				}
			}
		}

		[Column(Storage = "_grade", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if (this._grade != value)
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_timelimit", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timelimit
		{
			get
			{
				return this._timelimit;
			}
			set
			{
				if (this._timelimit != value)
				{
					this.OntimelimitChanging(value);
					this.SendPropertyChanging();
					this._timelimit = value;
					this.SendPropertyChanged("timelimit");
					this.OntimelimitChanged();
				}
			}
		}

		[Column(Storage = "_password", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if (this._password != value)
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}

		[Column(Storage = "_subnet", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string subnet
		{
			get
			{
				return this._subnet;
			}
			set
			{
				if (this._subnet != value)
				{
					this.OnsubnetChanging(value);
					this.SendPropertyChanging();
					this._subnet = value;
					this.SendPropertyChanged("subnet");
					this.OnsubnetChanged();
				}
			}
		}

		[Column(Storage = "_popup", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public short popup
		{
			get
			{
				return this._popup;
			}
			set
			{
				if (this._popup != value)
				{
					this.OnpopupChanging(value);
					this.SendPropertyChanging();
					this._popup = value;
					this.SendPropertyChanged("popup");
					this.OnpopupChanged();
				}
			}
		}

		[Column(Storage = "_delay1", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long delay1
		{
			get
			{
				return this._delay1;
			}
			set
			{
				if (this._delay1 != value)
				{
					this.Ondelay1Changing(value);
					this.SendPropertyChanging();
					this._delay1 = value;
					this.SendPropertyChanged("delay1");
					this.Ondelay1Changed();
				}
			}
		}

		[Column(Storage = "_delay2", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long delay2
		{
			get
			{
				return this._delay2;
			}
			set
			{
				if (this._delay2 != value)
				{
					this.Ondelay2Changing(value);
					this.SendPropertyChanging();
					this._delay2 = value;
					this.SendPropertyChanged("delay2");
					this.Ondelay2Changed();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_quiz_attempts")]
	public partial class mdl_quiz_attempt : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _uniqueid;

		private decimal _quiz;

		private decimal _userid;

		private int _attempt;

		private double _sumgrades;

		private decimal _timestart;

		private decimal _timefinish;

		private decimal _timemodified;

		private string _layout;

		private int _preview;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuniqueidChanging(decimal value);
		partial void OnuniqueidChanged();
		partial void OnquizChanging(decimal value);
		partial void OnquizChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnattemptChanging(int value);
		partial void OnattemptChanged();
		partial void OnsumgradesChanging(double value);
		partial void OnsumgradesChanged();
		partial void OntimestartChanging(decimal value);
		partial void OntimestartChanged();
		partial void OntimefinishChanging(decimal value);
		partial void OntimefinishChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		partial void OnlayoutChanging(string value);
		partial void OnlayoutChanged();
		partial void OnpreviewChanging(int value);
		partial void OnpreviewChanged();
		#endregion

		public mdl_quiz_attempt()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_uniqueid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal uniqueid
		{
			get
			{
				return this._uniqueid;
			}
			set
			{
				if (this._uniqueid != value)
				{
					this.OnuniqueidChanging(value);
					this.SendPropertyChanging();
					this._uniqueid = value;
					this.SendPropertyChanged("uniqueid");
					this.OnuniqueidChanged();
				}
			}
		}

		[Column(Storage = "_quiz", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal quiz
		{
			get
			{
				return this._quiz;
			}
			set
			{
				if (this._quiz != value)
				{
					this.OnquizChanging(value);
					this.SendPropertyChanging();
					this._quiz = value;
					this.SendPropertyChanged("quiz");
					this.OnquizChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_attempt", CanBeNull = false, DbType = "mediumint(6) NOT NULL")]
		public int attempt
		{
			get
			{
				return this._attempt;
			}
			set
			{
				if (this._attempt != value)
				{
					this.OnattemptChanging(value);
					this.SendPropertyChanging();
					this._attempt = value;
					this.SendPropertyChanged("attempt");
					this.OnattemptChanged();
				}
			}
		}

		[Column(Storage = "_sumgrades", CanBeNull = false, DbType = "double NOT NULL")]
		public double sumgrades
		{
			get
			{
				return this._sumgrades;
			}
			set
			{
				if (this._sumgrades != value)
				{
					this.OnsumgradesChanging(value);
					this.SendPropertyChanging();
					this._sumgrades = value;
					this.SendPropertyChanged("sumgrades");
					this.OnsumgradesChanged();
				}
			}
		}

		[Column(Storage = "_timestart", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timestart
		{
			get
			{
				return this._timestart;
			}
			set
			{
				if (this._timestart != value)
				{
					this.OntimestartChanging(value);
					this.SendPropertyChanging();
					this._timestart = value;
					this.SendPropertyChanged("timestart");
					this.OntimestartChanged();
				}
			}
		}

		[Column(Storage = "_timefinish", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timefinish
		{
			get
			{
				return this._timefinish;
			}
			set
			{
				if (this._timefinish != value)
				{
					this.OntimefinishChanging(value);
					this.SendPropertyChanging();
					this._timefinish = value;
					this.SendPropertyChanged("timefinish");
					this.OntimefinishChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_layout", CanBeNull = false, DbType = "text NOT NULL")]
		public string layout
		{
			get
			{
				return this._layout;
			}
			set
			{
				if (this._layout != value)
				{
					this.OnlayoutChanging(value);
					this.SendPropertyChanging();
					this._layout = value;
					this.SendPropertyChanged("layout");
					this.OnlayoutChanged();
				}
			}
		}

		[Column(Storage = "_preview", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int preview
		{
			get
			{
				return this._preview;
			}
			set
			{
				if (this._preview != value)
				{
					this.OnpreviewChanging(value);
					this.SendPropertyChanging();
					this._preview = value;
					this.SendPropertyChanged("preview");
					this.OnpreviewChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_quiz_feedback")]
	public partial class mdl_quiz_feedback : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _quizid;

		private string _feedbacktext;

		private double _mingrade;

		private double _maxgrade;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnquizidChanging(decimal value);
		partial void OnquizidChanged();
		partial void OnfeedbacktextChanging(string value);
		partial void OnfeedbacktextChanged();
		partial void OnmingradeChanging(double value);
		partial void OnmingradeChanged();
		partial void OnmaxgradeChanging(double value);
		partial void OnmaxgradeChanged();
		#endregion

		public mdl_quiz_feedback()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_quizid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal quizid
		{
			get
			{
				return this._quizid;
			}
			set
			{
				if (this._quizid != value)
				{
					this.OnquizidChanging(value);
					this.SendPropertyChanging();
					this._quizid = value;
					this.SendPropertyChanged("quizid");
					this.OnquizidChanged();
				}
			}
		}

		[Column(Storage = "_feedbacktext", CanBeNull = false, DbType = "text NOT NULL")]
		public string feedbacktext
		{
			get
			{
				return this._feedbacktext;
			}
			set
			{
				if (this._feedbacktext != value)
				{
					this.OnfeedbacktextChanging(value);
					this.SendPropertyChanging();
					this._feedbacktext = value;
					this.SendPropertyChanged("feedbacktext");
					this.OnfeedbacktextChanged();
				}
			}
		}

		[Column(Storage = "_mingrade", CanBeNull = false, DbType = "double NOT NULL")]
		public double mingrade
		{
			get
			{
				return this._mingrade;
			}
			set
			{
				if (this._mingrade != value)
				{
					this.OnmingradeChanging(value);
					this.SendPropertyChanging();
					this._mingrade = value;
					this.SendPropertyChanged("mingrade");
					this.OnmingradeChanged();
				}
			}
		}

		[Column(Storage = "_maxgrade", CanBeNull = false, DbType = "double NOT NULL")]
		public double maxgrade
		{
			get
			{
				return this._maxgrade;
			}
			set
			{
				if (this._maxgrade != value)
				{
					this.OnmaxgradeChanging(value);
					this.SendPropertyChanging();
					this._maxgrade = value;
					this.SendPropertyChanged("maxgrade");
					this.OnmaxgradeChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_quiz_grades")]
	public partial class mdl_quiz_grade : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _quiz;

		private decimal _userid;

		private double _grade;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnquizChanging(decimal value);
		partial void OnquizChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OngradeChanging(double value);
		partial void OngradeChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_quiz_grade()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_quiz", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal quiz
		{
			get
			{
				return this._quiz;
			}
			set
			{
				if (this._quiz != value)
				{
					this.OnquizChanging(value);
					this.SendPropertyChanging();
					this._quiz = value;
					this.SendPropertyChanged("quiz");
					this.OnquizChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_grade", CanBeNull = false, DbType = "double NOT NULL")]
		public double grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if (this._grade != value)
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_quiz_question_instances")]
	public partial class mdl_quiz_question_instance : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _quiz;

		private decimal _question;

		private int _grade;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnquizChanging(decimal value);
		partial void OnquizChanged();
		partial void OnquestionChanging(decimal value);
		partial void OnquestionChanged();
		partial void OngradeChanging(int value);
		partial void OngradeChanged();
		#endregion

		public mdl_quiz_question_instance()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_quiz", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal quiz
		{
			get
			{
				return this._quiz;
			}
			set
			{
				if (this._quiz != value)
				{
					this.OnquizChanging(value);
					this.SendPropertyChanging();
					this._quiz = value;
					this.SendPropertyChanged("quiz");
					this.OnquizChanged();
				}
			}
		}

		[Column(Storage = "_question", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal question
		{
			get
			{
				return this._question;
			}
			set
			{
				if (this._question != value)
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}

		[Column(Storage = "_grade", CanBeNull = false, DbType = "mediumint(6) NOT NULL")]
		public int grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if (this._grade != value)
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_quiz_question_versions")]
	public partial class mdl_quiz_question_version : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _quiz;

		private decimal _oldquestion;

		private decimal _newquestion;

		private decimal _originalquestion;

		private decimal _userid;

		private decimal _timestamp;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnquizChanging(decimal value);
		partial void OnquizChanged();
		partial void OnoldquestionChanging(decimal value);
		partial void OnoldquestionChanged();
		partial void OnnewquestionChanging(decimal value);
		partial void OnnewquestionChanged();
		partial void OnoriginalquestionChanging(decimal value);
		partial void OnoriginalquestionChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OntimestampChanging(decimal value);
		partial void OntimestampChanged();
		#endregion

		public mdl_quiz_question_version()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_quiz", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal quiz
		{
			get
			{
				return this._quiz;
			}
			set
			{
				if (this._quiz != value)
				{
					this.OnquizChanging(value);
					this.SendPropertyChanging();
					this._quiz = value;
					this.SendPropertyChanged("quiz");
					this.OnquizChanged();
				}
			}
		}

		[Column(Storage = "_oldquestion", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal oldquestion
		{
			get
			{
				return this._oldquestion;
			}
			set
			{
				if (this._oldquestion != value)
				{
					this.OnoldquestionChanging(value);
					this.SendPropertyChanging();
					this._oldquestion = value;
					this.SendPropertyChanged("oldquestion");
					this.OnoldquestionChanged();
				}
			}
		}

		[Column(Storage = "_newquestion", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal newquestion
		{
			get
			{
				return this._newquestion;
			}
			set
			{
				if (this._newquestion != value)
				{
					this.OnnewquestionChanging(value);
					this.SendPropertyChanging();
					this._newquestion = value;
					this.SendPropertyChanged("newquestion");
					this.OnnewquestionChanged();
				}
			}
		}

		[Column(Storage = "_originalquestion", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal originalquestion
		{
			get
			{
				return this._originalquestion;
			}
			set
			{
				if (this._originalquestion != value)
				{
					this.OnoriginalquestionChanging(value);
					this.SendPropertyChanging();
					this._originalquestion = value;
					this.SendPropertyChanged("originalquestion");
					this.OnoriginalquestionChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_timestamp", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if (this._timestamp != value)
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_resource")]
	public partial class mdl_resource : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private string _name;

		private string _type;

		private string _reference;

		private string _summary;

		private string _alltext;

		private string _popup;

		private string _options;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OntypeChanging(string value);
		partial void OntypeChanged();
		partial void OnreferenceChanging(string value);
		partial void OnreferenceChanged();
		partial void OnsummaryChanging(string value);
		partial void OnsummaryChanged();
		partial void OnalltextChanging(string value);
		partial void OnalltextChanged();
		partial void OnpopupChanging(string value);
		partial void OnpopupChanged();
		partial void OnoptionsChanging(string value);
		partial void OnoptionsChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_resource()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_type", CanBeNull = false, DbType = "varchar(90) NOT NULL")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if (this._type != value)
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}

		[Column(Storage = "_reference", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string reference
		{
			get
			{
				return this._reference;
			}
			set
			{
				if (this._reference != value)
				{
					this.OnreferenceChanging(value);
					this.SendPropertyChanging();
					this._reference = value;
					this.SendPropertyChanged("reference");
					this.OnreferenceChanged();
				}
			}
		}

		[Column(Storage = "_summary", DbType = "text")]
		public string summary
		{
			get
			{
				return this._summary;
			}
			set
			{
				if (this._summary != value)
				{
					this.OnsummaryChanging(value);
					this.SendPropertyChanging();
					this._summary = value;
					this.SendPropertyChanged("summary");
					this.OnsummaryChanged();
				}
			}
		}

		[Column(Storage = "_alltext", CanBeNull = false, DbType = "mediumtext NOT NULL")]
		public string alltext
		{
			get
			{
				return this._alltext;
			}
			set
			{
				if (this._alltext != value)
				{
					this.OnalltextChanging(value);
					this.SendPropertyChanging();
					this._alltext = value;
					this.SendPropertyChanged("alltext");
					this.OnalltextChanged();
				}
			}
		}

		[Column(Storage = "_popup", CanBeNull = false, DbType = "text NOT NULL")]
		public string popup
		{
			get
			{
				return this._popup;
			}
			set
			{
				if (this._popup != value)
				{
					this.OnpopupChanging(value);
					this.SendPropertyChanging();
					this._popup = value;
					this.SendPropertyChanged("popup");
					this.OnpopupChanged();
				}
			}
		}

		[Column(Storage = "_options", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string options
		{
			get
			{
				return this._options;
			}
			set
			{
				if (this._options != value)
				{
					this.OnoptionsChanging(value);
					this.SendPropertyChanging();
					this._options = value;
					this.SendPropertyChanged("options");
					this.OnoptionsChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_role")]
	public partial class mdl_role : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _name;

		private string _shortname;

		private string _description;

		private decimal _sortorder;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnshortnameChanging(string value);
		partial void OnshortnameChanged();
		partial void OndescriptionChanging(string value);
		partial void OndescriptionChanged();
		partial void OnsortorderChanging(decimal value);
		partial void OnsortorderChanged();
		#endregion

		public mdl_role()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_shortname", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string shortname
		{
			get
			{
				return this._shortname;
			}
			set
			{
				if (this._shortname != value)
				{
					this.OnshortnameChanging(value);
					this.SendPropertyChanging();
					this._shortname = value;
					this.SendPropertyChanged("shortname");
					this.OnshortnameChanged();
				}
			}
		}

		[Column(Storage = "_description", CanBeNull = false, DbType = "text NOT NULL")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if (this._description != value)
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}

		[Column(Storage = "_sortorder", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal sortorder
		{
			get
			{
				return this._sortorder;
			}
			set
			{
				if (this._sortorder != value)
				{
					this.OnsortorderChanging(value);
					this.SendPropertyChanging();
					this._sortorder = value;
					this.SendPropertyChanged("sortorder");
					this.OnsortorderChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_role_allow_assign")]
	public partial class mdl_role_allow_assign : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _roleid;

		private decimal _allowassign;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnroleidChanging(decimal value);
		partial void OnroleidChanged();
		partial void OnallowassignChanging(decimal value);
		partial void OnallowassignChanged();
		#endregion

		public mdl_role_allow_assign()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_roleid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal roleid
		{
			get
			{
				return this._roleid;
			}
			set
			{
				if (this._roleid != value)
				{
					this.OnroleidChanging(value);
					this.SendPropertyChanging();
					this._roleid = value;
					this.SendPropertyChanged("roleid");
					this.OnroleidChanged();
				}
			}
		}

		[Column(Storage = "_allowassign", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal allowassign
		{
			get
			{
				return this._allowassign;
			}
			set
			{
				if (this._allowassign != value)
				{
					this.OnallowassignChanging(value);
					this.SendPropertyChanging();
					this._allowassign = value;
					this.SendPropertyChanged("allowassign");
					this.OnallowassignChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_role_allow_override")]
	public partial class mdl_role_allow_override : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _roleid;

		private decimal _allowoverride;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnroleidChanging(decimal value);
		partial void OnroleidChanged();
		partial void OnallowoverrideChanging(decimal value);
		partial void OnallowoverrideChanged();
		#endregion

		public mdl_role_allow_override()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_roleid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal roleid
		{
			get
			{
				return this._roleid;
			}
			set
			{
				if (this._roleid != value)
				{
					this.OnroleidChanging(value);
					this.SendPropertyChanging();
					this._roleid = value;
					this.SendPropertyChanged("roleid");
					this.OnroleidChanged();
				}
			}
		}

		[Column(Storage = "_allowoverride", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal allowoverride
		{
			get
			{
				return this._allowoverride;
			}
			set
			{
				if (this._allowoverride != value)
				{
					this.OnallowoverrideChanging(value);
					this.SendPropertyChanging();
					this._allowoverride = value;
					this.SendPropertyChanged("allowoverride");
					this.OnallowoverrideChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_role_assignments")]
	public partial class mdl_role_assignment : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _roleid;

		private decimal _contextid;

		private decimal _userid;

		private byte _hidden;

		private decimal _timestart;

		private decimal _timeend;

		private decimal _timemodified;

		private decimal _modifierid;

		private string _enrol;

		private decimal _sortorder;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnroleidChanging(decimal value);
		partial void OnroleidChanged();
		partial void OncontextidChanging(decimal value);
		partial void OncontextidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnhiddenChanging(byte value);
		partial void OnhiddenChanged();
		partial void OntimestartChanging(decimal value);
		partial void OntimestartChanged();
		partial void OntimeendChanging(decimal value);
		partial void OntimeendChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		partial void OnmodifieridChanging(decimal value);
		partial void OnmodifieridChanged();
		partial void OnenrolChanging(string value);
		partial void OnenrolChanged();
		partial void OnsortorderChanging(decimal value);
		partial void OnsortorderChanged();
		#endregion

		public mdl_role_assignment()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_roleid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal roleid
		{
			get
			{
				return this._roleid;
			}
			set
			{
				if (this._roleid != value)
				{
					this.OnroleidChanging(value);
					this.SendPropertyChanging();
					this._roleid = value;
					this.SendPropertyChanged("roleid");
					this.OnroleidChanged();
				}
			}
		}

		[Column(Storage = "_contextid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal contextid
		{
			get
			{
				return this._contextid;
			}
			set
			{
				if (this._contextid != value)
				{
					this.OncontextidChanging(value);
					this.SendPropertyChanging();
					this._contextid = value;
					this.SendPropertyChanged("contextid");
					this.OncontextidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_hidden", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte hidden
		{
			get
			{
				return this._hidden;
			}
			set
			{
				if (this._hidden != value)
				{
					this.OnhiddenChanging(value);
					this.SendPropertyChanging();
					this._hidden = value;
					this.SendPropertyChanged("hidden");
					this.OnhiddenChanged();
				}
			}
		}

		[Column(Storage = "_timestart", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timestart
		{
			get
			{
				return this._timestart;
			}
			set
			{
				if (this._timestart != value)
				{
					this.OntimestartChanging(value);
					this.SendPropertyChanging();
					this._timestart = value;
					this.SendPropertyChanged("timestart");
					this.OntimestartChanged();
				}
			}
		}

		[Column(Storage = "_timeend", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeend
		{
			get
			{
				return this._timeend;
			}
			set
			{
				if (this._timeend != value)
				{
					this.OntimeendChanging(value);
					this.SendPropertyChanging();
					this._timeend = value;
					this.SendPropertyChanged("timeend");
					this.OntimeendChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_modifierid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal modifierid
		{
			get
			{
				return this._modifierid;
			}
			set
			{
				if (this._modifierid != value)
				{
					this.OnmodifieridChanging(value);
					this.SendPropertyChanging();
					this._modifierid = value;
					this.SendPropertyChanged("modifierid");
					this.OnmodifieridChanged();
				}
			}
		}

		[Column(Storage = "_enrol", CanBeNull = false, DbType = "varchar(60) NOT NULL")]
		public string enrol
		{
			get
			{
				return this._enrol;
			}
			set
			{
				if (this._enrol != value)
				{
					this.OnenrolChanging(value);
					this.SendPropertyChanging();
					this._enrol = value;
					this.SendPropertyChanged("enrol");
					this.OnenrolChanged();
				}
			}
		}

		[Column(Storage = "_sortorder", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal sortorder
		{
			get
			{
				return this._sortorder;
			}
			set
			{
				if (this._sortorder != value)
				{
					this.OnsortorderChanging(value);
					this.SendPropertyChanging();
					this._sortorder = value;
					this.SendPropertyChanged("sortorder");
					this.OnsortorderChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_role_capabilities")]
	public partial class mdl_role_capabilit : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _contextid;

		private decimal _roleid;

		private string _capability;

		private long _permission;

		private decimal _timemodified;

		private decimal _modifierid;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncontextidChanging(decimal value);
		partial void OncontextidChanged();
		partial void OnroleidChanging(decimal value);
		partial void OnroleidChanged();
		partial void OncapabilityChanging(string value);
		partial void OncapabilityChanged();
		partial void OnpermissionChanging(long value);
		partial void OnpermissionChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		partial void OnmodifieridChanging(decimal value);
		partial void OnmodifieridChanged();
		#endregion

		public mdl_role_capabilit()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_contextid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal contextid
		{
			get
			{
				return this._contextid;
			}
			set
			{
				if (this._contextid != value)
				{
					this.OncontextidChanging(value);
					this.SendPropertyChanging();
					this._contextid = value;
					this.SendPropertyChanged("contextid");
					this.OncontextidChanged();
				}
			}
		}

		[Column(Storage = "_roleid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal roleid
		{
			get
			{
				return this._roleid;
			}
			set
			{
				if (this._roleid != value)
				{
					this.OnroleidChanging(value);
					this.SendPropertyChanging();
					this._roleid = value;
					this.SendPropertyChanged("roleid");
					this.OnroleidChanged();
				}
			}
		}

		[Column(Storage = "_capability", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string capability
		{
			get
			{
				return this._capability;
			}
			set
			{
				if (this._capability != value)
				{
					this.OncapabilityChanging(value);
					this.SendPropertyChanging();
					this._capability = value;
					this.SendPropertyChanged("capability");
					this.OncapabilityChanged();
				}
			}
		}

		[Column(Storage = "_permission", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long permission
		{
			get
			{
				return this._permission;
			}
			set
			{
				if (this._permission != value)
				{
					this.OnpermissionChanging(value);
					this.SendPropertyChanging();
					this._permission = value;
					this.SendPropertyChanged("permission");
					this.OnpermissionChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_modifierid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal modifierid
		{
			get
			{
				return this._modifierid;
			}
			set
			{
				if (this._modifierid != value)
				{
					this.OnmodifieridChanging(value);
					this.SendPropertyChanging();
					this._modifierid = value;
					this.SendPropertyChanged("modifierid");
					this.OnmodifieridChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_role_names")]
	public partial class mdl_role_name : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _roleid;

		private decimal _contextid;

		private string _name;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnroleidChanging(decimal value);
		partial void OnroleidChanged();
		partial void OncontextidChanging(decimal value);
		partial void OncontextidChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		#endregion

		public mdl_role_name()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_roleid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal roleid
		{
			get
			{
				return this._roleid;
			}
			set
			{
				if (this._roleid != value)
				{
					this.OnroleidChanging(value);
					this.SendPropertyChanging();
					this._roleid = value;
					this.SendPropertyChanged("roleid");
					this.OnroleidChanged();
				}
			}
		}

		[Column(Storage = "_contextid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal contextid
		{
			get
			{
				return this._contextid;
			}
			set
			{
				if (this._contextid != value)
				{
					this.OncontextidChanging(value);
					this.SendPropertyChanging();
					this._contextid = value;
					this.SendPropertyChanged("contextid");
					this.OncontextidChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_role_sortorder")]
	public partial class mdl_role_sortorder : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _userid;

		private decimal _roleid;

		private decimal _contextid;

		private long _sortoder;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnroleidChanging(decimal value);
		partial void OnroleidChanged();
		partial void OncontextidChanging(decimal value);
		partial void OncontextidChanged();
		partial void OnsortoderChanging(long value);
		partial void OnsortoderChanged();
		#endregion

		public mdl_role_sortorder()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_roleid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal roleid
		{
			get
			{
				return this._roleid;
			}
			set
			{
				if (this._roleid != value)
				{
					this.OnroleidChanging(value);
					this.SendPropertyChanging();
					this._roleid = value;
					this.SendPropertyChanged("roleid");
					this.OnroleidChanged();
				}
			}
		}

		[Column(Storage = "_contextid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal contextid
		{
			get
			{
				return this._contextid;
			}
			set
			{
				if (this._contextid != value)
				{
					this.OncontextidChanging(value);
					this.SendPropertyChanging();
					this._contextid = value;
					this.SendPropertyChanged("contextid");
					this.OncontextidChanged();
				}
			}
		}

		[Column(Storage = "_sortoder", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long sortoder
		{
			get
			{
				return this._sortoder;
			}
			set
			{
				if (this._sortoder != value)
				{
					this.OnsortoderChanging(value);
					this.SendPropertyChanging();
					this._sortoder = value;
					this.SendPropertyChanged("sortoder");
					this.OnsortoderChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_scale")]
	public partial class mdl_scale : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _courseid;

		private decimal _userid;

		private string _name;

		private string _scale;

		private string _description;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnscaleChanging(string value);
		partial void OnscaleChanged();
		partial void OndescriptionChanging(string value);
		partial void OndescriptionChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_scale()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_scale", CanBeNull = false, DbType = "text NOT NULL")]
		public string scale
		{
			get
			{
				return this._scale;
			}
			set
			{
				if (this._scale != value)
				{
					this.OnscaleChanging(value);
					this.SendPropertyChanging();
					this._scale = value;
					this.SendPropertyChanged("scale");
					this.OnscaleChanged();
				}
			}
		}

		[Column(Storage = "_description", CanBeNull = false, DbType = "text NOT NULL")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if (this._description != value)
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_scale_history")]
	public partial class mdl_scale_history : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _action;

		private decimal _oldid;

		private string _source;

		private System.Nullable<decimal> _timemodified;

		private System.Nullable<decimal> _loggeduser;

		private decimal _courseid;

		private decimal _userid;

		private string _name;

		private string _scale;

		private string _description;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnactionChanging(decimal value);
		partial void OnactionChanged();
		partial void OnoldidChanging(decimal value);
		partial void OnoldidChanged();
		partial void OnsourceChanging(string value);
		partial void OnsourceChanged();
		partial void OntimemodifiedChanging(System.Nullable<decimal> value);
		partial void OntimemodifiedChanged();
		partial void OnloggeduserChanging(System.Nullable<decimal> value);
		partial void OnloggeduserChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnscaleChanging(string value);
		partial void OnscaleChanged();
		partial void OndescriptionChanging(string value);
		partial void OndescriptionChanged();
		#endregion

		public mdl_scale_history()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_action", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal action
		{
			get
			{
				return this._action;
			}
			set
			{
				if (this._action != value)
				{
					this.OnactionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("action");
					this.OnactionChanged();
				}
			}
		}

		[Column(Storage = "_oldid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal oldid
		{
			get
			{
				return this._oldid;
			}
			set
			{
				if (this._oldid != value)
				{
					this.OnoldidChanging(value);
					this.SendPropertyChanging();
					this._oldid = value;
					this.SendPropertyChanged("oldid");
					this.OnoldidChanged();
				}
			}
		}

		[Column(Storage = "_source", DbType = "varchar(765)")]
		public string source
		{
			get
			{
				return this._source;
			}
			set
			{
				if (this._source != value)
				{
					this.OnsourceChanging(value);
					this.SendPropertyChanging();
					this._source = value;
					this.SendPropertyChanged("source");
					this.OnsourceChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", DbType = "bigint(10)")]
		public System.Nullable<decimal> timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_loggeduser", DbType = "bigint(10)")]
		public System.Nullable<decimal> loggeduser
		{
			get
			{
				return this._loggeduser;
			}
			set
			{
				if (this._loggeduser != value)
				{
					this.OnloggeduserChanging(value);
					this.SendPropertyChanging();
					this._loggeduser = value;
					this.SendPropertyChanged("loggeduser");
					this.OnloggeduserChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_scale", CanBeNull = false, DbType = "text NOT NULL")]
		public string scale
		{
			get
			{
				return this._scale;
			}
			set
			{
				if (this._scale != value)
				{
					this.OnscaleChanging(value);
					this.SendPropertyChanging();
					this._scale = value;
					this.SendPropertyChanged("scale");
					this.OnscaleChanged();
				}
			}
		}

		[Column(Storage = "_description", CanBeNull = false, DbType = "text NOT NULL")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if (this._description != value)
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_scorm")]
	public partial class mdl_scorm : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private string _name;

		private string _reference;

		private string _summary;

		private string _version;

		private double _maxgrade;

		private short _grademethod;

		private long _whatgrade;

		private long _maxattempt;

		private byte _updatefreq;

		private string _md5hash;

		private decimal _launch;

		private byte _skipview;

		private short _hidebrowse;

		private short _hidetoc;

		private short _hidenav;

		private byte _auto;

		private byte _popup;

		private string _options;

		private decimal _width;

		private decimal _height;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnreferenceChanging(string value);
		partial void OnreferenceChanged();
		partial void OnsummaryChanging(string value);
		partial void OnsummaryChanged();
		partial void OnversionChanging(string value);
		partial void OnversionChanged();
		partial void OnmaxgradeChanging(double value);
		partial void OnmaxgradeChanged();
		partial void OngrademethodChanging(short value);
		partial void OngrademethodChanged();
		partial void OnwhatgradeChanging(long value);
		partial void OnwhatgradeChanged();
		partial void OnmaxattemptChanging(long value);
		partial void OnmaxattemptChanged();
		partial void OnupdatefreqChanging(byte value);
		partial void OnupdatefreqChanged();
		partial void Onmd5hashChanging(string value);
		partial void Onmd5hashChanged();
		partial void OnlaunchChanging(decimal value);
		partial void OnlaunchChanged();
		partial void OnskipviewChanging(byte value);
		partial void OnskipviewChanged();
		partial void OnhidebrowseChanging(short value);
		partial void OnhidebrowseChanged();
		partial void OnhidetocChanging(short value);
		partial void OnhidetocChanged();
		partial void OnhidenavChanging(short value);
		partial void OnhidenavChanged();
		partial void OnautoChanging(byte value);
		partial void OnautoChanged();
		partial void OnpopupChanging(byte value);
		partial void OnpopupChanged();
		partial void OnoptionsChanging(string value);
		partial void OnoptionsChanged();
		partial void OnwidthChanging(decimal value);
		partial void OnwidthChanged();
		partial void OnheightChanging(decimal value);
		partial void OnheightChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_scorm()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_reference", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string reference
		{
			get
			{
				return this._reference;
			}
			set
			{
				if (this._reference != value)
				{
					this.OnreferenceChanging(value);
					this.SendPropertyChanging();
					this._reference = value;
					this.SendPropertyChanged("reference");
					this.OnreferenceChanged();
				}
			}
		}

		[Column(Storage = "_summary", CanBeNull = false, DbType = "text NOT NULL")]
		public string summary
		{
			get
			{
				return this._summary;
			}
			set
			{
				if (this._summary != value)
				{
					this.OnsummaryChanging(value);
					this.SendPropertyChanging();
					this._summary = value;
					this.SendPropertyChanged("summary");
					this.OnsummaryChanged();
				}
			}
		}

		[Column(Storage = "_version", CanBeNull = false, DbType = "varchar(27) NOT NULL")]
		public string version
		{
			get
			{
				return this._version;
			}
			set
			{
				if (this._version != value)
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}

		[Column(Storage = "_maxgrade", CanBeNull = false, DbType = "double NOT NULL")]
		public double maxgrade
		{
			get
			{
				return this._maxgrade;
			}
			set
			{
				if (this._maxgrade != value)
				{
					this.OnmaxgradeChanging(value);
					this.SendPropertyChanging();
					this._maxgrade = value;
					this.SendPropertyChanged("maxgrade");
					this.OnmaxgradeChanged();
				}
			}
		}

		[Column(Storage = "_grademethod", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public short grademethod
		{
			get
			{
				return this._grademethod;
			}
			set
			{
				if (this._grademethod != value)
				{
					this.OngrademethodChanging(value);
					this.SendPropertyChanging();
					this._grademethod = value;
					this.SendPropertyChanged("grademethod");
					this.OngrademethodChanged();
				}
			}
		}

		[Column(Storage = "_whatgrade", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long whatgrade
		{
			get
			{
				return this._whatgrade;
			}
			set
			{
				if (this._whatgrade != value)
				{
					this.OnwhatgradeChanging(value);
					this.SendPropertyChanging();
					this._whatgrade = value;
					this.SendPropertyChanged("whatgrade");
					this.OnwhatgradeChanged();
				}
			}
		}

		[Column(Storage = "_maxattempt", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long maxattempt
		{
			get
			{
				return this._maxattempt;
			}
			set
			{
				if (this._maxattempt != value)
				{
					this.OnmaxattemptChanging(value);
					this.SendPropertyChanging();
					this._maxattempt = value;
					this.SendPropertyChanged("maxattempt");
					this.OnmaxattemptChanged();
				}
			}
		}

		[Column(Storage = "_updatefreq", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte updatefreq
		{
			get
			{
				return this._updatefreq;
			}
			set
			{
				if (this._updatefreq != value)
				{
					this.OnupdatefreqChanging(value);
					this.SendPropertyChanging();
					this._updatefreq = value;
					this.SendPropertyChanged("updatefreq");
					this.OnupdatefreqChanged();
				}
			}
		}

		[Column(Storage = "_md5hash", CanBeNull = false, DbType = "varchar(96) NOT NULL")]
		public string md5hash
		{
			get
			{
				return this._md5hash;
			}
			set
			{
				if (this._md5hash != value)
				{
					this.Onmd5hashChanging(value);
					this.SendPropertyChanging();
					this._md5hash = value;
					this.SendPropertyChanged("md5hash");
					this.Onmd5hashChanged();
				}
			}
		}

		[Column(Storage = "_launch", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal launch
		{
			get
			{
				return this._launch;
			}
			set
			{
				if (this._launch != value)
				{
					this.OnlaunchChanging(value);
					this.SendPropertyChanging();
					this._launch = value;
					this.SendPropertyChanged("launch");
					this.OnlaunchChanged();
				}
			}
		}

		[Column(Storage = "_skipview", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte skipview
		{
			get
			{
				return this._skipview;
			}
			set
			{
				if (this._skipview != value)
				{
					this.OnskipviewChanging(value);
					this.SendPropertyChanging();
					this._skipview = value;
					this.SendPropertyChanged("skipview");
					this.OnskipviewChanged();
				}
			}
		}

		[Column(Storage = "_hidebrowse", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short hidebrowse
		{
			get
			{
				return this._hidebrowse;
			}
			set
			{
				if (this._hidebrowse != value)
				{
					this.OnhidebrowseChanging(value);
					this.SendPropertyChanging();
					this._hidebrowse = value;
					this.SendPropertyChanged("hidebrowse");
					this.OnhidebrowseChanged();
				}
			}
		}

		[Column(Storage = "_hidetoc", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short hidetoc
		{
			get
			{
				return this._hidetoc;
			}
			set
			{
				if (this._hidetoc != value)
				{
					this.OnhidetocChanging(value);
					this.SendPropertyChanging();
					this._hidetoc = value;
					this.SendPropertyChanged("hidetoc");
					this.OnhidetocChanged();
				}
			}
		}

		[Column(Storage = "_hidenav", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short hidenav
		{
			get
			{
				return this._hidenav;
			}
			set
			{
				if (this._hidenav != value)
				{
					this.OnhidenavChanging(value);
					this.SendPropertyChanging();
					this._hidenav = value;
					this.SendPropertyChanged("hidenav");
					this.OnhidenavChanged();
				}
			}
		}

		[Column(Storage = "_auto", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte auto
		{
			get
			{
				return this._auto;
			}
			set
			{
				if (this._auto != value)
				{
					this.OnautoChanging(value);
					this.SendPropertyChanging();
					this._auto = value;
					this.SendPropertyChanged("auto");
					this.OnautoChanged();
				}
			}
		}

		[Column(Storage = "_popup", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte popup
		{
			get
			{
				return this._popup;
			}
			set
			{
				if (this._popup != value)
				{
					this.OnpopupChanging(value);
					this.SendPropertyChanging();
					this._popup = value;
					this.SendPropertyChanged("popup");
					this.OnpopupChanged();
				}
			}
		}

		[Column(Storage = "_options", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string options
		{
			get
			{
				return this._options;
			}
			set
			{
				if (this._options != value)
				{
					this.OnoptionsChanging(value);
					this.SendPropertyChanging();
					this._options = value;
					this.SendPropertyChanged("options");
					this.OnoptionsChanged();
				}
			}
		}

		[Column(Storage = "_width", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal width
		{
			get
			{
				return this._width;
			}
			set
			{
				if (this._width != value)
				{
					this.OnwidthChanging(value);
					this.SendPropertyChanging();
					this._width = value;
					this.SendPropertyChanged("width");
					this.OnwidthChanged();
				}
			}
		}

		[Column(Storage = "_height", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal height
		{
			get
			{
				return this._height;
			}
			set
			{
				if (this._height != value)
				{
					this.OnheightChanging(value);
					this.SendPropertyChanging();
					this._height = value;
					this.SendPropertyChanged("height");
					this.OnheightChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_scorm_scoes")]
	public partial class mdl_scorm_scoe : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _scorm;

		private string _manifest;

		private string _organization;

		private string _parent;

		private string _identifier;

		private string _launch;

		private string _scormtype;

		private string _title;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnscormChanging(decimal value);
		partial void OnscormChanged();
		partial void OnmanifestChanging(string value);
		partial void OnmanifestChanged();
		partial void OnorganizationChanging(string value);
		partial void OnorganizationChanged();
		partial void OnparentChanging(string value);
		partial void OnparentChanged();
		partial void OnidentifierChanging(string value);
		partial void OnidentifierChanged();
		partial void OnlaunchChanging(string value);
		partial void OnlaunchChanged();
		partial void OnscormtypeChanging(string value);
		partial void OnscormtypeChanged();
		partial void OntitleChanging(string value);
		partial void OntitleChanged();
		#endregion

		public mdl_scorm_scoe()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_scorm", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal scorm
		{
			get
			{
				return this._scorm;
			}
			set
			{
				if (this._scorm != value)
				{
					this.OnscormChanging(value);
					this.SendPropertyChanging();
					this._scorm = value;
					this.SendPropertyChanged("scorm");
					this.OnscormChanged();
				}
			}
		}

		[Column(Storage = "_manifest", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string manifest
		{
			get
			{
				return this._manifest;
			}
			set
			{
				if (this._manifest != value)
				{
					this.OnmanifestChanging(value);
					this.SendPropertyChanging();
					this._manifest = value;
					this.SendPropertyChanged("manifest");
					this.OnmanifestChanged();
				}
			}
		}

		[Column(Storage = "_organization", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string organization
		{
			get
			{
				return this._organization;
			}
			set
			{
				if (this._organization != value)
				{
					this.OnorganizationChanging(value);
					this.SendPropertyChanging();
					this._organization = value;
					this.SendPropertyChanged("organization");
					this.OnorganizationChanged();
				}
			}
		}

		[Column(Storage = "_parent", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if (this._parent != value)
				{
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}

		[Column(Storage = "_identifier", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string identifier
		{
			get
			{
				return this._identifier;
			}
			set
			{
				if (this._identifier != value)
				{
					this.OnidentifierChanging(value);
					this.SendPropertyChanging();
					this._identifier = value;
					this.SendPropertyChanged("identifier");
					this.OnidentifierChanged();
				}
			}
		}

		[Column(Storage = "_launch", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string launch
		{
			get
			{
				return this._launch;
			}
			set
			{
				if (this._launch != value)
				{
					this.OnlaunchChanging(value);
					this.SendPropertyChanging();
					this._launch = value;
					this.SendPropertyChanged("launch");
					this.OnlaunchChanged();
				}
			}
		}

		[Column(Storage = "_scormtype", CanBeNull = false, DbType = "varchar(15) NOT NULL")]
		public string scormtype
		{
			get
			{
				return this._scormtype;
			}
			set
			{
				if (this._scormtype != value)
				{
					this.OnscormtypeChanging(value);
					this.SendPropertyChanging();
					this._scormtype = value;
					this.SendPropertyChanged("scormtype");
					this.OnscormtypeChanged();
				}
			}
		}

		[Column(Storage = "_title", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if (this._title != value)
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_scorm_scoes_data")]
	public partial class mdl_scorm_scoes_data : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _scoid;

		private string _name;

		private string _value;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnscoidChanging(decimal value);
		partial void OnscoidChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnvalueChanging(string value);
		partial void OnvalueChanged();
		#endregion

		public mdl_scorm_scoes_data()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_scoid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal scoid
		{
			get
			{
				return this._scoid;
			}
			set
			{
				if (this._scoid != value)
				{
					this.OnscoidChanging(value);
					this.SendPropertyChanging();
					this._scoid = value;
					this.SendPropertyChanged("scoid");
					this.OnscoidChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_value", CanBeNull = false, DbType = "text NOT NULL")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if (this._value != value)
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_scorm_scoes_track")]
	public partial class mdl_scorm_scoes_track : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _userid;

		private long _scormid;

		private decimal _scoid;

		private decimal _attempt;

		private string _element;

		private string _value;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnscormidChanging(long value);
		partial void OnscormidChanged();
		partial void OnscoidChanging(decimal value);
		partial void OnscoidChanged();
		partial void OnattemptChanging(decimal value);
		partial void OnattemptChanged();
		partial void OnelementChanging(string value);
		partial void OnelementChanged();
		partial void OnvalueChanging(string value);
		partial void OnvalueChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_scorm_scoes_track()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_scormid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long scormid
		{
			get
			{
				return this._scormid;
			}
			set
			{
				if (this._scormid != value)
				{
					this.OnscormidChanging(value);
					this.SendPropertyChanging();
					this._scormid = value;
					this.SendPropertyChanged("scormid");
					this.OnscormidChanged();
				}
			}
		}

		[Column(Storage = "_scoid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal scoid
		{
			get
			{
				return this._scoid;
			}
			set
			{
				if (this._scoid != value)
				{
					this.OnscoidChanging(value);
					this.SendPropertyChanging();
					this._scoid = value;
					this.SendPropertyChanged("scoid");
					this.OnscoidChanged();
				}
			}
		}

		[Column(Storage = "_attempt", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal attempt
		{
			get
			{
				return this._attempt;
			}
			set
			{
				if (this._attempt != value)
				{
					this.OnattemptChanging(value);
					this.SendPropertyChanging();
					this._attempt = value;
					this.SendPropertyChanged("attempt");
					this.OnattemptChanged();
				}
			}
		}

		[Column(Storage = "_element", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string element
		{
			get
			{
				return this._element;
			}
			set
			{
				if (this._element != value)
				{
					this.OnelementChanging(value);
					this.SendPropertyChanging();
					this._element = value;
					this.SendPropertyChanged("element");
					this.OnelementChanged();
				}
			}
		}

		[Column(Storage = "_value", CanBeNull = false, DbType = "longtext NOT NULL")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if (this._value != value)
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_scorm_seq_mapinfo")]
	public partial class mdl_scorm_seq_mapinfo : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _scoid;

		private decimal _objectiveid;

		private decimal _targetobjectiveid;

		private short _readsatisfiedstatus;

		private short _readnormalizedmeasure;

		private short _writesatisfiedstatus;

		private short _writenormalizedmeasure;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnscoidChanging(decimal value);
		partial void OnscoidChanged();
		partial void OnobjectiveidChanging(decimal value);
		partial void OnobjectiveidChanged();
		partial void OntargetobjectiveidChanging(decimal value);
		partial void OntargetobjectiveidChanged();
		partial void OnreadsatisfiedstatusChanging(short value);
		partial void OnreadsatisfiedstatusChanged();
		partial void OnreadnormalizedmeasureChanging(short value);
		partial void OnreadnormalizedmeasureChanged();
		partial void OnwritesatisfiedstatusChanging(short value);
		partial void OnwritesatisfiedstatusChanged();
		partial void OnwritenormalizedmeasureChanging(short value);
		partial void OnwritenormalizedmeasureChanged();
		#endregion

		public mdl_scorm_seq_mapinfo()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_scoid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal scoid
		{
			get
			{
				return this._scoid;
			}
			set
			{
				if (this._scoid != value)
				{
					this.OnscoidChanging(value);
					this.SendPropertyChanging();
					this._scoid = value;
					this.SendPropertyChanged("scoid");
					this.OnscoidChanged();
				}
			}
		}

		[Column(Storage = "_objectiveid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal objectiveid
		{
			get
			{
				return this._objectiveid;
			}
			set
			{
				if (this._objectiveid != value)
				{
					this.OnobjectiveidChanging(value);
					this.SendPropertyChanging();
					this._objectiveid = value;
					this.SendPropertyChanged("objectiveid");
					this.OnobjectiveidChanged();
				}
			}
		}

		[Column(Storage = "_targetobjectiveid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal targetobjectiveid
		{
			get
			{
				return this._targetobjectiveid;
			}
			set
			{
				if (this._targetobjectiveid != value)
				{
					this.OntargetobjectiveidChanging(value);
					this.SendPropertyChanging();
					this._targetobjectiveid = value;
					this.SendPropertyChanged("targetobjectiveid");
					this.OntargetobjectiveidChanged();
				}
			}
		}

		[Column(Storage = "_readsatisfiedstatus", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short readsatisfiedstatus
		{
			get
			{
				return this._readsatisfiedstatus;
			}
			set
			{
				if (this._readsatisfiedstatus != value)
				{
					this.OnreadsatisfiedstatusChanging(value);
					this.SendPropertyChanging();
					this._readsatisfiedstatus = value;
					this.SendPropertyChanged("readsatisfiedstatus");
					this.OnreadsatisfiedstatusChanged();
				}
			}
		}

		[Column(Storage = "_readnormalizedmeasure", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short readnormalizedmeasure
		{
			get
			{
				return this._readnormalizedmeasure;
			}
			set
			{
				if (this._readnormalizedmeasure != value)
				{
					this.OnreadnormalizedmeasureChanging(value);
					this.SendPropertyChanging();
					this._readnormalizedmeasure = value;
					this.SendPropertyChanged("readnormalizedmeasure");
					this.OnreadnormalizedmeasureChanged();
				}
			}
		}

		[Column(Storage = "_writesatisfiedstatus", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short writesatisfiedstatus
		{
			get
			{
				return this._writesatisfiedstatus;
			}
			set
			{
				if (this._writesatisfiedstatus != value)
				{
					this.OnwritesatisfiedstatusChanging(value);
					this.SendPropertyChanging();
					this._writesatisfiedstatus = value;
					this.SendPropertyChanged("writesatisfiedstatus");
					this.OnwritesatisfiedstatusChanged();
				}
			}
		}

		[Column(Storage = "_writenormalizedmeasure", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short writenormalizedmeasure
		{
			get
			{
				return this._writenormalizedmeasure;
			}
			set
			{
				if (this._writenormalizedmeasure != value)
				{
					this.OnwritenormalizedmeasureChanging(value);
					this.SendPropertyChanging();
					this._writenormalizedmeasure = value;
					this.SendPropertyChanged("writenormalizedmeasure");
					this.OnwritenormalizedmeasureChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_scorm_seq_objective")]
	public partial class mdl_scorm_seq_objective : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _scoid;

		private short _primaryobj;

		private decimal _objectiveid;

		private short _satisfiedbymeasure;

		private float _minnormalizedmeasure;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnscoidChanging(decimal value);
		partial void OnscoidChanged();
		partial void OnprimaryobjChanging(short value);
		partial void OnprimaryobjChanged();
		partial void OnobjectiveidChanging(decimal value);
		partial void OnobjectiveidChanged();
		partial void OnsatisfiedbymeasureChanging(short value);
		partial void OnsatisfiedbymeasureChanged();
		partial void OnminnormalizedmeasureChanging(float value);
		partial void OnminnormalizedmeasureChanged();
		#endregion

		public mdl_scorm_seq_objective()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_scoid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal scoid
		{
			get
			{
				return this._scoid;
			}
			set
			{
				if (this._scoid != value)
				{
					this.OnscoidChanging(value);
					this.SendPropertyChanging();
					this._scoid = value;
					this.SendPropertyChanged("scoid");
					this.OnscoidChanged();
				}
			}
		}

		[Column(Storage = "_primaryobj", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short primaryobj
		{
			get
			{
				return this._primaryobj;
			}
			set
			{
				if (this._primaryobj != value)
				{
					this.OnprimaryobjChanging(value);
					this.SendPropertyChanging();
					this._primaryobj = value;
					this.SendPropertyChanged("primaryobj");
					this.OnprimaryobjChanged();
				}
			}
		}

		[Column(Storage = "_objectiveid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal objectiveid
		{
			get
			{
				return this._objectiveid;
			}
			set
			{
				if (this._objectiveid != value)
				{
					this.OnobjectiveidChanging(value);
					this.SendPropertyChanging();
					this._objectiveid = value;
					this.SendPropertyChanged("objectiveid");
					this.OnobjectiveidChanged();
				}
			}
		}

		[Column(Storage = "_satisfiedbymeasure", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short satisfiedbymeasure
		{
			get
			{
				return this._satisfiedbymeasure;
			}
			set
			{
				if (this._satisfiedbymeasure != value)
				{
					this.OnsatisfiedbymeasureChanging(value);
					this.SendPropertyChanging();
					this._satisfiedbymeasure = value;
					this.SendPropertyChanged("satisfiedbymeasure");
					this.OnsatisfiedbymeasureChanged();
				}
			}
		}

		[Column(Storage = "_minnormalizedmeasure", CanBeNull = false, DbType = "float(11,4) NOT NULL")]
		public float minnormalizedmeasure
		{
			get
			{
				return this._minnormalizedmeasure;
			}
			set
			{
				if (this._minnormalizedmeasure != value)
				{
					this.OnminnormalizedmeasureChanging(value);
					this.SendPropertyChanging();
					this._minnormalizedmeasure = value;
					this.SendPropertyChanged("minnormalizedmeasure");
					this.OnminnormalizedmeasureChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_scorm_seq_rolluprule")]
	public partial class mdl_scorm_seq_rolluprule : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _scoid;

		private string _childactivityset;

		private decimal _minimumcount;

		private float _minimumpercent;

		private string _conditioncombination;

		private string _action;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnscoidChanging(decimal value);
		partial void OnscoidChanged();
		partial void OnchildactivitysetChanging(string value);
		partial void OnchildactivitysetChanged();
		partial void OnminimumcountChanging(decimal value);
		partial void OnminimumcountChanged();
		partial void OnminimumpercentChanging(float value);
		partial void OnminimumpercentChanged();
		partial void OnconditioncombinationChanging(string value);
		partial void OnconditioncombinationChanged();
		partial void OnactionChanging(string value);
		partial void OnactionChanged();
		#endregion

		public mdl_scorm_seq_rolluprule()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_scoid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal scoid
		{
			get
			{
				return this._scoid;
			}
			set
			{
				if (this._scoid != value)
				{
					this.OnscoidChanging(value);
					this.SendPropertyChanging();
					this._scoid = value;
					this.SendPropertyChanged("scoid");
					this.OnscoidChanged();
				}
			}
		}

		[Column(Storage = "_childactivityset", CanBeNull = false, DbType = "varchar(45) NOT NULL")]
		public string childactivityset
		{
			get
			{
				return this._childactivityset;
			}
			set
			{
				if (this._childactivityset != value)
				{
					this.OnchildactivitysetChanging(value);
					this.SendPropertyChanging();
					this._childactivityset = value;
					this.SendPropertyChanged("childactivityset");
					this.OnchildactivitysetChanged();
				}
			}
		}

		[Column(Storage = "_minimumcount", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal minimumcount
		{
			get
			{
				return this._minimumcount;
			}
			set
			{
				if (this._minimumcount != value)
				{
					this.OnminimumcountChanging(value);
					this.SendPropertyChanging();
					this._minimumcount = value;
					this.SendPropertyChanged("minimumcount");
					this.OnminimumcountChanged();
				}
			}
		}

		[Column(Storage = "_minimumpercent", CanBeNull = false, DbType = "float(11,4) NOT NULL")]
		public float minimumpercent
		{
			get
			{
				return this._minimumpercent;
			}
			set
			{
				if (this._minimumpercent != value)
				{
					this.OnminimumpercentChanging(value);
					this.SendPropertyChanging();
					this._minimumpercent = value;
					this.SendPropertyChanged("minimumpercent");
					this.OnminimumpercentChanged();
				}
			}
		}

		[Column(Storage = "_conditioncombination", CanBeNull = false, DbType = "varchar(9) NOT NULL")]
		public string conditioncombination
		{
			get
			{
				return this._conditioncombination;
			}
			set
			{
				if (this._conditioncombination != value)
				{
					this.OnconditioncombinationChanging(value);
					this.SendPropertyChanging();
					this._conditioncombination = value;
					this.SendPropertyChanged("conditioncombination");
					this.OnconditioncombinationChanged();
				}
			}
		}

		[Column(Storage = "_action", CanBeNull = false, DbType = "varchar(45) NOT NULL")]
		public string action
		{
			get
			{
				return this._action;
			}
			set
			{
				if (this._action != value)
				{
					this.OnactionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("action");
					this.OnactionChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_scorm_seq_rolluprulecond")]
	public partial class mdl_scorm_seq_rolluprulecond : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _scoid;

		private decimal _rollupruleid;

		private string _operator;

		private string _cond;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnscoidChanging(decimal value);
		partial void OnscoidChanged();
		partial void OnrollupruleidChanging(decimal value);
		partial void OnrollupruleidChanged();
		partial void OnoperatorChanging(string value);
		partial void OnoperatorChanged();
		partial void OncondChanging(string value);
		partial void OncondChanged();
		#endregion

		public mdl_scorm_seq_rolluprulecond()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_scoid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal scoid
		{
			get
			{
				return this._scoid;
			}
			set
			{
				if (this._scoid != value)
				{
					this.OnscoidChanging(value);
					this.SendPropertyChanging();
					this._scoid = value;
					this.SendPropertyChanged("scoid");
					this.OnscoidChanged();
				}
			}
		}

		[Column(Storage = "_rollupruleid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal rollupruleid
		{
			get
			{
				return this._rollupruleid;
			}
			set
			{
				if (this._rollupruleid != value)
				{
					this.OnrollupruleidChanging(value);
					this.SendPropertyChanging();
					this._rollupruleid = value;
					this.SendPropertyChanged("rollupruleid");
					this.OnrollupruleidChanged();
				}
			}
		}

		[Column(Storage = "_operator", CanBeNull = false, DbType = "varchar(15) NOT NULL")]
		public string @operator
		{
			get
			{
				return this._operator;
			}
			set
			{
				if (this._operator != value)
				{
					this.OnoperatorChanging(value);
					this.SendPropertyChanging();
					this._operator = value;
					this.SendPropertyChanged("@operator");
					this.OnoperatorChanged();
				}
			}
		}

		[Column(Storage = "_cond", CanBeNull = false, DbType = "varchar(75) NOT NULL")]
		public string cond
		{
			get
			{
				return this._cond;
			}
			set
			{
				if (this._cond != value)
				{
					this.OncondChanging(value);
					this.SendPropertyChanging();
					this._cond = value;
					this.SendPropertyChanged("cond");
					this.OncondChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_scorm_seq_rulecond")]
	public partial class mdl_scorm_seq_rulecond : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _scoid;

		private decimal _ruleconditionsid;

		private string _refrencedobjective;

		private float _measurethreshold;

		private string _operator;

		private string _cond;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnscoidChanging(decimal value);
		partial void OnscoidChanged();
		partial void OnruleconditionsidChanging(decimal value);
		partial void OnruleconditionsidChanged();
		partial void OnrefrencedobjectiveChanging(string value);
		partial void OnrefrencedobjectiveChanged();
		partial void OnmeasurethresholdChanging(float value);
		partial void OnmeasurethresholdChanged();
		partial void OnoperatorChanging(string value);
		partial void OnoperatorChanged();
		partial void OncondChanging(string value);
		partial void OncondChanged();
		#endregion

		public mdl_scorm_seq_rulecond()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_scoid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal scoid
		{
			get
			{
				return this._scoid;
			}
			set
			{
				if (this._scoid != value)
				{
					this.OnscoidChanging(value);
					this.SendPropertyChanging();
					this._scoid = value;
					this.SendPropertyChanged("scoid");
					this.OnscoidChanged();
				}
			}
		}

		[Column(Storage = "_ruleconditionsid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal ruleconditionsid
		{
			get
			{
				return this._ruleconditionsid;
			}
			set
			{
				if (this._ruleconditionsid != value)
				{
					this.OnruleconditionsidChanging(value);
					this.SendPropertyChanging();
					this._ruleconditionsid = value;
					this.SendPropertyChanged("ruleconditionsid");
					this.OnruleconditionsidChanged();
				}
			}
		}

		[Column(Storage = "_refrencedobjective", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string refrencedobjective
		{
			get
			{
				return this._refrencedobjective;
			}
			set
			{
				if (this._refrencedobjective != value)
				{
					this.OnrefrencedobjectiveChanging(value);
					this.SendPropertyChanging();
					this._refrencedobjective = value;
					this.SendPropertyChanged("refrencedobjective");
					this.OnrefrencedobjectiveChanged();
				}
			}
		}

		[Column(Storage = "_measurethreshold", CanBeNull = false, DbType = "float(11,4) NOT NULL")]
		public float measurethreshold
		{
			get
			{
				return this._measurethreshold;
			}
			set
			{
				if (this._measurethreshold != value)
				{
					this.OnmeasurethresholdChanging(value);
					this.SendPropertyChanging();
					this._measurethreshold = value;
					this.SendPropertyChanged("measurethreshold");
					this.OnmeasurethresholdChanged();
				}
			}
		}

		[Column(Storage = "_operator", CanBeNull = false, DbType = "varchar(15) NOT NULL")]
		public string @operator
		{
			get
			{
				return this._operator;
			}
			set
			{
				if (this._operator != value)
				{
					this.OnoperatorChanging(value);
					this.SendPropertyChanging();
					this._operator = value;
					this.SendPropertyChanged("@operator");
					this.OnoperatorChanged();
				}
			}
		}

		[Column(Storage = "_cond", CanBeNull = false, DbType = "varchar(90) NOT NULL")]
		public string cond
		{
			get
			{
				return this._cond;
			}
			set
			{
				if (this._cond != value)
				{
					this.OncondChanging(value);
					this.SendPropertyChanging();
					this._cond = value;
					this.SendPropertyChanged("cond");
					this.OncondChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_scorm_seq_ruleconds")]
	public partial class mdl_scorm_seq_rulecond1 : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _scoid;

		private string _conditioncombination;

		private byte _ruletype;

		private string _action;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnscoidChanging(decimal value);
		partial void OnscoidChanged();
		partial void OnconditioncombinationChanging(string value);
		partial void OnconditioncombinationChanged();
		partial void OnruletypeChanging(byte value);
		partial void OnruletypeChanged();
		partial void OnactionChanging(string value);
		partial void OnactionChanged();
		#endregion

		public mdl_scorm_seq_rulecond1()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_scoid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal scoid
		{
			get
			{
				return this._scoid;
			}
			set
			{
				if (this._scoid != value)
				{
					this.OnscoidChanging(value);
					this.SendPropertyChanging();
					this._scoid = value;
					this.SendPropertyChanged("scoid");
					this.OnscoidChanged();
				}
			}
		}

		[Column(Storage = "_conditioncombination", CanBeNull = false, DbType = "varchar(9) NOT NULL")]
		public string conditioncombination
		{
			get
			{
				return this._conditioncombination;
			}
			set
			{
				if (this._conditioncombination != value)
				{
					this.OnconditioncombinationChanging(value);
					this.SendPropertyChanging();
					this._conditioncombination = value;
					this.SendPropertyChanged("conditioncombination");
					this.OnconditioncombinationChanged();
				}
			}
		}

		[Column(Storage = "_ruletype", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte ruletype
		{
			get
			{
				return this._ruletype;
			}
			set
			{
				if (this._ruletype != value)
				{
					this.OnruletypeChanging(value);
					this.SendPropertyChanging();
					this._ruletype = value;
					this.SendPropertyChanged("ruletype");
					this.OnruletypeChanged();
				}
			}
		}

		[Column(Storage = "_action", CanBeNull = false, DbType = "varchar(75) NOT NULL")]
		public string action
		{
			get
			{
				return this._action;
			}
			set
			{
				if (this._action != value)
				{
					this.OnactionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("action");
					this.OnactionChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_sessions2")]
	public partial class mdl_sessions2 : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _sesskey;

		private System.DateTime _expiry;

		private string _expireref;

		private System.DateTime _created;

		private System.DateTime _modified;

		private string _sessdata;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnsesskeyChanging(string value);
		partial void OnsesskeyChanged();
		partial void OnexpiryChanging(System.DateTime value);
		partial void OnexpiryChanged();
		partial void OnexpirerefChanging(string value);
		partial void OnexpirerefChanged();
		partial void OncreatedChanging(System.DateTime value);
		partial void OncreatedChanged();
		partial void OnmodifiedChanging(System.DateTime value);
		partial void OnmodifiedChanged();
		partial void OnsessdataChanging(string value);
		partial void OnsessdataChanged();
		#endregion

		public mdl_sessions2()
		{
			OnCreated();
		}

		[Column(Storage = "_sesskey", CanBeNull = false, DbType = "varchar(192) NOT NULL", IsPrimaryKey = true)]
		public string sesskey
		{
			get
			{
				return this._sesskey;
			}
			set
			{
				if (this._sesskey != value)
				{
					this.OnsesskeyChanging(value);
					this.SendPropertyChanging();
					this._sesskey = value;
					this.SendPropertyChanged("sesskey");
					this.OnsesskeyChanged();
				}
			}
		}

		[Column(Storage = "_expiry", CanBeNull = false, DbType = "datetime NOT NULL")]
		public System.DateTime expiry
		{
			get
			{
				return this._expiry;
			}
			set
			{
				if (this._expiry != value)
				{
					this.OnexpiryChanging(value);
					this.SendPropertyChanging();
					this._expiry = value;
					this.SendPropertyChanged("expiry");
					this.OnexpiryChanged();
				}
			}
		}

		[Column(Storage = "_expireref", DbType = "varchar(750)")]
		public string expireref
		{
			get
			{
				return this._expireref;
			}
			set
			{
				if (this._expireref != value)
				{
					this.OnexpirerefChanging(value);
					this.SendPropertyChanging();
					this._expireref = value;
					this.SendPropertyChanged("expireref");
					this.OnexpirerefChanged();
				}
			}
		}

		[Column(Storage = "_created", CanBeNull = false, DbType = "datetime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if (this._created != value)
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}

		[Column(Storage = "_modified", CanBeNull = false, DbType = "datetime NOT NULL")]
		public System.DateTime modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if (this._modified != value)
				{
					this.OnmodifiedChanging(value);
					this.SendPropertyChanging();
					this._modified = value;
					this.SendPropertyChanged("modified");
					this.OnmodifiedChanged();
				}
			}
		}

		[Column(Storage = "_sessdata", DbType = "longtext")]
		public string sessdata
		{
			get
			{
				return this._sessdata;
			}
			set
			{
				if (this._sessdata != value)
				{
					this.OnsessdataChanging(value);
					this.SendPropertyChanging();
					this._sessdata = value;
					this.SendPropertyChanged("sessdata");
					this.OnsessdataChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_stats_daily")]
	public partial class mdl_stats_daily : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _courseid;

		private decimal _timeend;

		private decimal _roleid;

		private string _stattype;

		private decimal _stat1;

		private decimal _stat2;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OntimeendChanging(decimal value);
		partial void OntimeendChanged();
		partial void OnroleidChanging(decimal value);
		partial void OnroleidChanged();
		partial void OnstattypeChanging(string value);
		partial void OnstattypeChanged();
		partial void Onstat1Changing(decimal value);
		partial void Onstat1Changed();
		partial void Onstat2Changing(decimal value);
		partial void Onstat2Changed();
		#endregion

		public mdl_stats_daily()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_timeend", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeend
		{
			get
			{
				return this._timeend;
			}
			set
			{
				if (this._timeend != value)
				{
					this.OntimeendChanging(value);
					this.SendPropertyChanging();
					this._timeend = value;
					this.SendPropertyChanged("timeend");
					this.OntimeendChanged();
				}
			}
		}

		[Column(Storage = "_roleid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal roleid
		{
			get
			{
				return this._roleid;
			}
			set
			{
				if (this._roleid != value)
				{
					this.OnroleidChanging(value);
					this.SendPropertyChanging();
					this._roleid = value;
					this.SendPropertyChanged("roleid");
					this.OnroleidChanged();
				}
			}
		}

		[Column(Storage = "_stattype", CanBeNull = false, DbType = "enum NOT NULL")]
		public string stattype
		{
			get
			{
				return this._stattype;
			}
			set
			{
				if (this._stattype != value)
				{
					this.OnstattypeChanging(value);
					this.SendPropertyChanging();
					this._stattype = value;
					this.SendPropertyChanged("stattype");
					this.OnstattypeChanged();
				}
			}
		}

		[Column(Storage = "_stat1", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal stat1
		{
			get
			{
				return this._stat1;
			}
			set
			{
				if (this._stat1 != value)
				{
					this.Onstat1Changing(value);
					this.SendPropertyChanging();
					this._stat1 = value;
					this.SendPropertyChanged("stat1");
					this.Onstat1Changed();
				}
			}
		}

		[Column(Storage = "_stat2", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal stat2
		{
			get
			{
				return this._stat2;
			}
			set
			{
				if (this._stat2 != value)
				{
					this.Onstat2Changing(value);
					this.SendPropertyChanging();
					this._stat2 = value;
					this.SendPropertyChanged("stat2");
					this.Onstat2Changed();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_stats_monthly")]
	public partial class mdl_stats_monthly : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _courseid;

		private decimal _timeend;

		private decimal _roleid;

		private string _stattype;

		private decimal _stat1;

		private decimal _stat2;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OntimeendChanging(decimal value);
		partial void OntimeendChanged();
		partial void OnroleidChanging(decimal value);
		partial void OnroleidChanged();
		partial void OnstattypeChanging(string value);
		partial void OnstattypeChanged();
		partial void Onstat1Changing(decimal value);
		partial void Onstat1Changed();
		partial void Onstat2Changing(decimal value);
		partial void Onstat2Changed();
		#endregion

		public mdl_stats_monthly()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_timeend", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeend
		{
			get
			{
				return this._timeend;
			}
			set
			{
				if (this._timeend != value)
				{
					this.OntimeendChanging(value);
					this.SendPropertyChanging();
					this._timeend = value;
					this.SendPropertyChanged("timeend");
					this.OntimeendChanged();
				}
			}
		}

		[Column(Storage = "_roleid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal roleid
		{
			get
			{
				return this._roleid;
			}
			set
			{
				if (this._roleid != value)
				{
					this.OnroleidChanging(value);
					this.SendPropertyChanging();
					this._roleid = value;
					this.SendPropertyChanged("roleid");
					this.OnroleidChanged();
				}
			}
		}

		[Column(Storage = "_stattype", CanBeNull = false, DbType = "enum NOT NULL")]
		public string stattype
		{
			get
			{
				return this._stattype;
			}
			set
			{
				if (this._stattype != value)
				{
					this.OnstattypeChanging(value);
					this.SendPropertyChanging();
					this._stattype = value;
					this.SendPropertyChanged("stattype");
					this.OnstattypeChanged();
				}
			}
		}

		[Column(Storage = "_stat1", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal stat1
		{
			get
			{
				return this._stat1;
			}
			set
			{
				if (this._stat1 != value)
				{
					this.Onstat1Changing(value);
					this.SendPropertyChanging();
					this._stat1 = value;
					this.SendPropertyChanged("stat1");
					this.Onstat1Changed();
				}
			}
		}

		[Column(Storage = "_stat2", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal stat2
		{
			get
			{
				return this._stat2;
			}
			set
			{
				if (this._stat2 != value)
				{
					this.Onstat2Changing(value);
					this.SendPropertyChanging();
					this._stat2 = value;
					this.SendPropertyChanged("stat2");
					this.Onstat2Changed();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_stats_user_daily")]
	public partial class mdl_stats_user_daily : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _courseid;

		private decimal _userid;

		private decimal _roleid;

		private decimal _timeend;

		private decimal _statsreads;

		private decimal _statswrites;

		private string _stattype;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnroleidChanging(decimal value);
		partial void OnroleidChanged();
		partial void OntimeendChanging(decimal value);
		partial void OntimeendChanged();
		partial void OnstatsreadsChanging(decimal value);
		partial void OnstatsreadsChanged();
		partial void OnstatswritesChanging(decimal value);
		partial void OnstatswritesChanged();
		partial void OnstattypeChanging(string value);
		partial void OnstattypeChanged();
		#endregion

		public mdl_stats_user_daily()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_roleid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal roleid
		{
			get
			{
				return this._roleid;
			}
			set
			{
				if (this._roleid != value)
				{
					this.OnroleidChanging(value);
					this.SendPropertyChanging();
					this._roleid = value;
					this.SendPropertyChanged("roleid");
					this.OnroleidChanged();
				}
			}
		}

		[Column(Storage = "_timeend", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeend
		{
			get
			{
				return this._timeend;
			}
			set
			{
				if (this._timeend != value)
				{
					this.OntimeendChanging(value);
					this.SendPropertyChanging();
					this._timeend = value;
					this.SendPropertyChanged("timeend");
					this.OntimeendChanged();
				}
			}
		}

		[Column(Storage = "_statsreads", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal statsreads
		{
			get
			{
				return this._statsreads;
			}
			set
			{
				if (this._statsreads != value)
				{
					this.OnstatsreadsChanging(value);
					this.SendPropertyChanging();
					this._statsreads = value;
					this.SendPropertyChanged("statsreads");
					this.OnstatsreadsChanged();
				}
			}
		}

		[Column(Storage = "_statswrites", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal statswrites
		{
			get
			{
				return this._statswrites;
			}
			set
			{
				if (this._statswrites != value)
				{
					this.OnstatswritesChanging(value);
					this.SendPropertyChanging();
					this._statswrites = value;
					this.SendPropertyChanged("statswrites");
					this.OnstatswritesChanged();
				}
			}
		}

		[Column(Storage = "_stattype", CanBeNull = false, DbType = "varchar(90) NOT NULL")]
		public string stattype
		{
			get
			{
				return this._stattype;
			}
			set
			{
				if (this._stattype != value)
				{
					this.OnstattypeChanging(value);
					this.SendPropertyChanging();
					this._stattype = value;
					this.SendPropertyChanged("stattype");
					this.OnstattypeChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_stats_user_monthly")]
	public partial class mdl_stats_user_monthly : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _courseid;

		private decimal _userid;

		private decimal _roleid;

		private decimal _timeend;

		private decimal _statsreads;

		private decimal _statswrites;

		private string _stattype;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnroleidChanging(decimal value);
		partial void OnroleidChanged();
		partial void OntimeendChanging(decimal value);
		partial void OntimeendChanged();
		partial void OnstatsreadsChanging(decimal value);
		partial void OnstatsreadsChanged();
		partial void OnstatswritesChanging(decimal value);
		partial void OnstatswritesChanged();
		partial void OnstattypeChanging(string value);
		partial void OnstattypeChanged();
		#endregion

		public mdl_stats_user_monthly()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_roleid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal roleid
		{
			get
			{
				return this._roleid;
			}
			set
			{
				if (this._roleid != value)
				{
					this.OnroleidChanging(value);
					this.SendPropertyChanging();
					this._roleid = value;
					this.SendPropertyChanged("roleid");
					this.OnroleidChanged();
				}
			}
		}

		[Column(Storage = "_timeend", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeend
		{
			get
			{
				return this._timeend;
			}
			set
			{
				if (this._timeend != value)
				{
					this.OntimeendChanging(value);
					this.SendPropertyChanging();
					this._timeend = value;
					this.SendPropertyChanged("timeend");
					this.OntimeendChanged();
				}
			}
		}

		[Column(Storage = "_statsreads", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal statsreads
		{
			get
			{
				return this._statsreads;
			}
			set
			{
				if (this._statsreads != value)
				{
					this.OnstatsreadsChanging(value);
					this.SendPropertyChanging();
					this._statsreads = value;
					this.SendPropertyChanged("statsreads");
					this.OnstatsreadsChanged();
				}
			}
		}

		[Column(Storage = "_statswrites", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal statswrites
		{
			get
			{
				return this._statswrites;
			}
			set
			{
				if (this._statswrites != value)
				{
					this.OnstatswritesChanging(value);
					this.SendPropertyChanging();
					this._statswrites = value;
					this.SendPropertyChanged("statswrites");
					this.OnstatswritesChanged();
				}
			}
		}

		[Column(Storage = "_stattype", CanBeNull = false, DbType = "varchar(90) NOT NULL")]
		public string stattype
		{
			get
			{
				return this._stattype;
			}
			set
			{
				if (this._stattype != value)
				{
					this.OnstattypeChanging(value);
					this.SendPropertyChanging();
					this._stattype = value;
					this.SendPropertyChanged("stattype");
					this.OnstattypeChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_stats_user_weekly")]
	public partial class mdl_stats_user_weekly : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _courseid;

		private decimal _userid;

		private decimal _roleid;

		private decimal _timeend;

		private decimal _statsreads;

		private decimal _statswrites;

		private string _stattype;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnroleidChanging(decimal value);
		partial void OnroleidChanged();
		partial void OntimeendChanging(decimal value);
		partial void OntimeendChanged();
		partial void OnstatsreadsChanging(decimal value);
		partial void OnstatsreadsChanged();
		partial void OnstatswritesChanging(decimal value);
		partial void OnstatswritesChanged();
		partial void OnstattypeChanging(string value);
		partial void OnstattypeChanged();
		#endregion

		public mdl_stats_user_weekly()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_roleid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal roleid
		{
			get
			{
				return this._roleid;
			}
			set
			{
				if (this._roleid != value)
				{
					this.OnroleidChanging(value);
					this.SendPropertyChanging();
					this._roleid = value;
					this.SendPropertyChanged("roleid");
					this.OnroleidChanged();
				}
			}
		}

		[Column(Storage = "_timeend", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeend
		{
			get
			{
				return this._timeend;
			}
			set
			{
				if (this._timeend != value)
				{
					this.OntimeendChanging(value);
					this.SendPropertyChanging();
					this._timeend = value;
					this.SendPropertyChanged("timeend");
					this.OntimeendChanged();
				}
			}
		}

		[Column(Storage = "_statsreads", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal statsreads
		{
			get
			{
				return this._statsreads;
			}
			set
			{
				if (this._statsreads != value)
				{
					this.OnstatsreadsChanging(value);
					this.SendPropertyChanging();
					this._statsreads = value;
					this.SendPropertyChanged("statsreads");
					this.OnstatsreadsChanged();
				}
			}
		}

		[Column(Storage = "_statswrites", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal statswrites
		{
			get
			{
				return this._statswrites;
			}
			set
			{
				if (this._statswrites != value)
				{
					this.OnstatswritesChanging(value);
					this.SendPropertyChanging();
					this._statswrites = value;
					this.SendPropertyChanged("statswrites");
					this.OnstatswritesChanged();
				}
			}
		}

		[Column(Storage = "_stattype", CanBeNull = false, DbType = "varchar(90) NOT NULL")]
		public string stattype
		{
			get
			{
				return this._stattype;
			}
			set
			{
				if (this._stattype != value)
				{
					this.OnstattypeChanging(value);
					this.SendPropertyChanging();
					this._stattype = value;
					this.SendPropertyChanged("stattype");
					this.OnstattypeChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_stats_weekly")]
	public partial class mdl_stats_weekly : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _courseid;

		private decimal _timeend;

		private decimal _roleid;

		private string _stattype;

		private decimal _stat1;

		private decimal _stat2;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OntimeendChanging(decimal value);
		partial void OntimeendChanged();
		partial void OnroleidChanging(decimal value);
		partial void OnroleidChanged();
		partial void OnstattypeChanging(string value);
		partial void OnstattypeChanged();
		partial void Onstat1Changing(decimal value);
		partial void Onstat1Changed();
		partial void Onstat2Changing(decimal value);
		partial void Onstat2Changed();
		#endregion

		public mdl_stats_weekly()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_timeend", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeend
		{
			get
			{
				return this._timeend;
			}
			set
			{
				if (this._timeend != value)
				{
					this.OntimeendChanging(value);
					this.SendPropertyChanging();
					this._timeend = value;
					this.SendPropertyChanged("timeend");
					this.OntimeendChanged();
				}
			}
		}

		[Column(Storage = "_roleid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal roleid
		{
			get
			{
				return this._roleid;
			}
			set
			{
				if (this._roleid != value)
				{
					this.OnroleidChanging(value);
					this.SendPropertyChanging();
					this._roleid = value;
					this.SendPropertyChanged("roleid");
					this.OnroleidChanged();
				}
			}
		}

		[Column(Storage = "_stattype", CanBeNull = false, DbType = "enum NOT NULL")]
		public string stattype
		{
			get
			{
				return this._stattype;
			}
			set
			{
				if (this._stattype != value)
				{
					this.OnstattypeChanging(value);
					this.SendPropertyChanging();
					this._stattype = value;
					this.SendPropertyChanged("stattype");
					this.OnstattypeChanged();
				}
			}
		}

		[Column(Storage = "_stat1", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal stat1
		{
			get
			{
				return this._stat1;
			}
			set
			{
				if (this._stat1 != value)
				{
					this.Onstat1Changing(value);
					this.SendPropertyChanging();
					this._stat1 = value;
					this.SendPropertyChanged("stat1");
					this.Onstat1Changed();
				}
			}
		}

		[Column(Storage = "_stat2", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal stat2
		{
			get
			{
				return this._stat2;
			}
			set
			{
				if (this._stat2 != value)
				{
					this.Onstat2Changing(value);
					this.SendPropertyChanging();
					this._stat2 = value;
					this.SendPropertyChanged("stat2");
					this.Onstat2Changed();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_survey")]
	public partial class mdl_survey : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private decimal _template;

		private int _days;

		private decimal _timecreated;

		private decimal _timemodified;

		private string _name;

		private string _intro;

		private string _questions;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OntemplateChanging(decimal value);
		partial void OntemplateChanged();
		partial void OndaysChanging(int value);
		partial void OndaysChanged();
		partial void OntimecreatedChanging(decimal value);
		partial void OntimecreatedChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnintroChanging(string value);
		partial void OnintroChanged();
		partial void OnquestionsChanging(string value);
		partial void OnquestionsChanged();
		#endregion

		public mdl_survey()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_template", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal template
		{
			get
			{
				return this._template;
			}
			set
			{
				if (this._template != value)
				{
					this.OntemplateChanging(value);
					this.SendPropertyChanging();
					this._template = value;
					this.SendPropertyChanged("template");
					this.OntemplateChanged();
				}
			}
		}

		[Column(Storage = "_days", CanBeNull = false, DbType = "mediumint(6) NOT NULL")]
		public int days
		{
			get
			{
				return this._days;
			}
			set
			{
				if (this._days != value)
				{
					this.OndaysChanging(value);
					this.SendPropertyChanging();
					this._days = value;
					this.SendPropertyChanged("days");
					this.OndaysChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_intro", CanBeNull = false, DbType = "text NOT NULL")]
		public string intro
		{
			get
			{
				return this._intro;
			}
			set
			{
				if (this._intro != value)
				{
					this.OnintroChanging(value);
					this.SendPropertyChanging();
					this._intro = value;
					this.SendPropertyChanged("intro");
					this.OnintroChanged();
				}
			}
		}

		[Column(Storage = "_questions", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string questions
		{
			get
			{
				return this._questions;
			}
			set
			{
				if (this._questions != value)
				{
					this.OnquestionsChanging(value);
					this.SendPropertyChanging();
					this._questions = value;
					this.SendPropertyChanged("questions");
					this.OnquestionsChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_survey_analysis")]
	public partial class mdl_survey_analysi : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _survey;

		private decimal _userid;

		private string _notes;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnsurveyChanging(decimal value);
		partial void OnsurveyChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnnotesChanging(string value);
		partial void OnnotesChanged();
		#endregion

		public mdl_survey_analysi()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_survey", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal survey
		{
			get
			{
				return this._survey;
			}
			set
			{
				if (this._survey != value)
				{
					this.OnsurveyChanging(value);
					this.SendPropertyChanging();
					this._survey = value;
					this.SendPropertyChanged("survey");
					this.OnsurveyChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_notes", CanBeNull = false, DbType = "text NOT NULL")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if (this._notes != value)
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_survey_answers")]
	public partial class mdl_survey_answer : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _userid;

		private decimal _survey;

		private decimal _question;

		private decimal _time;

		private string _answer1;

		private string _answer2;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnsurveyChanging(decimal value);
		partial void OnsurveyChanged();
		partial void OnquestionChanging(decimal value);
		partial void OnquestionChanged();
		partial void OntimeChanging(decimal value);
		partial void OntimeChanged();
		partial void Onanswer1Changing(string value);
		partial void Onanswer1Changed();
		partial void Onanswer2Changing(string value);
		partial void Onanswer2Changed();
		#endregion

		public mdl_survey_answer()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_survey", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal survey
		{
			get
			{
				return this._survey;
			}
			set
			{
				if (this._survey != value)
				{
					this.OnsurveyChanging(value);
					this.SendPropertyChanging();
					this._survey = value;
					this.SendPropertyChanged("survey");
					this.OnsurveyChanged();
				}
			}
		}

		[Column(Storage = "_question", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal question
		{
			get
			{
				return this._question;
			}
			set
			{
				if (this._question != value)
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}

		[Column(Storage = "_time", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal time
		{
			get
			{
				return this._time;
			}
			set
			{
				if (this._time != value)
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}

		[Column(Storage = "_answer1", CanBeNull = false, DbType = "text NOT NULL")]
		public string answer1
		{
			get
			{
				return this._answer1;
			}
			set
			{
				if (this._answer1 != value)
				{
					this.Onanswer1Changing(value);
					this.SendPropertyChanging();
					this._answer1 = value;
					this.SendPropertyChanged("answer1");
					this.Onanswer1Changed();
				}
			}
		}

		[Column(Storage = "_answer2", CanBeNull = false, DbType = "text NOT NULL")]
		public string answer2
		{
			get
			{
				return this._answer2;
			}
			set
			{
				if (this._answer2 != value)
				{
					this.Onanswer2Changing(value);
					this.SendPropertyChanging();
					this._answer2 = value;
					this.SendPropertyChanged("answer2");
					this.Onanswer2Changed();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_survey_questions")]
	public partial class mdl_survey_question : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _text;

		private string _shorttext;

		private string _multi;

		private string _intro;

		private short _type;

		private string _options;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OntextChanging(string value);
		partial void OntextChanged();
		partial void OnshorttextChanging(string value);
		partial void OnshorttextChanged();
		partial void OnmultiChanging(string value);
		partial void OnmultiChanged();
		partial void OnintroChanging(string value);
		partial void OnintroChanged();
		partial void OntypeChanging(short value);
		partial void OntypeChanged();
		partial void OnoptionsChanging(string value);
		partial void OnoptionsChanged();
		#endregion

		public mdl_survey_question()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_text", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if (this._text != value)
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}

		[Column(Storage = "_shorttext", CanBeNull = false, DbType = "varchar(90) NOT NULL")]
		public string shorttext
		{
			get
			{
				return this._shorttext;
			}
			set
			{
				if (this._shorttext != value)
				{
					this.OnshorttextChanging(value);
					this.SendPropertyChanging();
					this._shorttext = value;
					this.SendPropertyChanged("shorttext");
					this.OnshorttextChanged();
				}
			}
		}

		[Column(Storage = "_multi", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string multi
		{
			get
			{
				return this._multi;
			}
			set
			{
				if (this._multi != value)
				{
					this.OnmultiChanging(value);
					this.SendPropertyChanging();
					this._multi = value;
					this.SendPropertyChanged("multi");
					this.OnmultiChanged();
				}
			}
		}

		[Column(Storage = "_intro", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string intro
		{
			get
			{
				return this._intro;
			}
			set
			{
				if (this._intro != value)
				{
					this.OnintroChanging(value);
					this.SendPropertyChanging();
					this._intro = value;
					this.SendPropertyChanged("intro");
					this.OnintroChanged();
				}
			}
		}

		[Column(Storage = "_type", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public short type
		{
			get
			{
				return this._type;
			}
			set
			{
				if (this._type != value)
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}

		[Column(Storage = "_options", DbType = "text")]
		public string options
		{
			get
			{
				return this._options;
			}
			set
			{
				if (this._options != value)
				{
					this.OnoptionsChanging(value);
					this.SendPropertyChanging();
					this._options = value;
					this.SendPropertyChanged("options");
					this.OnoptionsChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_tag")]
	public partial class mdl_tag : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _userid;

		private string _name;

		private string _rawname;

		private string _tagtype;

		private string _description;

		private byte _descriptionformat;

		private System.Nullable<int> _flag;

		private System.Nullable<decimal> _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnrawnameChanging(string value);
		partial void OnrawnameChanged();
		partial void OntagtypeChanging(string value);
		partial void OntagtypeChanged();
		partial void OndescriptionChanging(string value);
		partial void OndescriptionChanged();
		partial void OndescriptionformatChanging(byte value);
		partial void OndescriptionformatChanged();
		partial void OnflagChanging(System.Nullable<int> value);
		partial void OnflagChanged();
		partial void OntimemodifiedChanging(System.Nullable<decimal> value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_tag()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_rawname", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string rawname
		{
			get
			{
				return this._rawname;
			}
			set
			{
				if (this._rawname != value)
				{
					this.OnrawnameChanging(value);
					this.SendPropertyChanging();
					this._rawname = value;
					this.SendPropertyChanged("rawname");
					this.OnrawnameChanged();
				}
			}
		}

		[Column(Storage = "_tagtype", DbType = "varchar(765)")]
		public string tagtype
		{
			get
			{
				return this._tagtype;
			}
			set
			{
				if (this._tagtype != value)
				{
					this.OntagtypeChanging(value);
					this.SendPropertyChanging();
					this._tagtype = value;
					this.SendPropertyChanged("tagtype");
					this.OntagtypeChanged();
				}
			}
		}

		[Column(Storage = "_description", DbType = "text")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if (this._description != value)
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}

		[Column(Storage = "_descriptionformat", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte descriptionformat
		{
			get
			{
				return this._descriptionformat;
			}
			set
			{
				if (this._descriptionformat != value)
				{
					this.OndescriptionformatChanging(value);
					this.SendPropertyChanging();
					this._descriptionformat = value;
					this.SendPropertyChanged("descriptionformat");
					this.OndescriptionformatChanged();
				}
			}
		}

		[Column(Storage = "_flag", DbType = "smallint(4)")]
		public System.Nullable<int> flag
		{
			get
			{
				return this._flag;
			}
			set
			{
				if (this._flag != value)
				{
					this.OnflagChanging(value);
					this.SendPropertyChanging();
					this._flag = value;
					this.SendPropertyChanged("flag");
					this.OnflagChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", DbType = "bigint(10)")]
		public System.Nullable<decimal> timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_tag_correlation")]
	public partial class mdl_tag_correlation : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _tagid;

		private string _correlatedtags;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OntagidChanging(decimal value);
		partial void OntagidChanged();
		partial void OncorrelatedtagsChanging(string value);
		partial void OncorrelatedtagsChanged();
		#endregion

		public mdl_tag_correlation()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_tagid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal tagid
		{
			get
			{
				return this._tagid;
			}
			set
			{
				if (this._tagid != value)
				{
					this.OntagidChanging(value);
					this.SendPropertyChanging();
					this._tagid = value;
					this.SendPropertyChanged("tagid");
					this.OntagidChanged();
				}
			}
		}

		[Column(Storage = "_correlatedtags", CanBeNull = false, DbType = "text NOT NULL")]
		public string correlatedtags
		{
			get
			{
				return this._correlatedtags;
			}
			set
			{
				if (this._correlatedtags != value)
				{
					this.OncorrelatedtagsChanging(value);
					this.SendPropertyChanging();
					this._correlatedtags = value;
					this.SendPropertyChanged("correlatedtags");
					this.OncorrelatedtagsChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_tag_instance")]
	public partial class mdl_tag_instance : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _tagid;

		private string _itemtype;

		private decimal _itemid;

		private System.Nullable<decimal> _ordering;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OntagidChanging(decimal value);
		partial void OntagidChanged();
		partial void OnitemtypeChanging(string value);
		partial void OnitemtypeChanged();
		partial void OnitemidChanging(decimal value);
		partial void OnitemidChanged();
		partial void OnorderingChanging(System.Nullable<decimal> value);
		partial void OnorderingChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_tag_instance()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_tagid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal tagid
		{
			get
			{
				return this._tagid;
			}
			set
			{
				if (this._tagid != value)
				{
					this.OntagidChanging(value);
					this.SendPropertyChanging();
					this._tagid = value;
					this.SendPropertyChanged("tagid");
					this.OntagidChanged();
				}
			}
		}

		[Column(Storage = "_itemtype", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string itemtype
		{
			get
			{
				return this._itemtype;
			}
			set
			{
				if (this._itemtype != value)
				{
					this.OnitemtypeChanging(value);
					this.SendPropertyChanging();
					this._itemtype = value;
					this.SendPropertyChanged("itemtype");
					this.OnitemtypeChanged();
				}
			}
		}

		[Column(Storage = "_itemid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal itemid
		{
			get
			{
				return this._itemid;
			}
			set
			{
				if (this._itemid != value)
				{
					this.OnitemidChanging(value);
					this.SendPropertyChanging();
					this._itemid = value;
					this.SendPropertyChanged("itemid");
					this.OnitemidChanged();
				}
			}
		}

		[Column(Storage = "_ordering", DbType = "bigint(10)")]
		public System.Nullable<decimal> ordering
		{
			get
			{
				return this._ordering;
			}
			set
			{
				if (this._ordering != value)
				{
					this.OnorderingChanging(value);
					this.SendPropertyChanging();
					this._ordering = value;
					this.SendPropertyChanged("ordering");
					this.OnorderingChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_timezone")]
	public partial class mdl_timezone : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _name;

		private long _year;

		private string _tzrule;

		private long _gmtoff;

		private long _dstoff;

		private short _dst_month;

		private short _dst_startday;

		private short _dst_weekday;

		private short _dst_skipweeks;

		private string _dst_time;

		private short _std_month;

		private short _std_startday;

		private short _std_weekday;

		private short _std_skipweeks;

		private string _std_time;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnyearChanging(long value);
		partial void OnyearChanged();
		partial void OntzruleChanging(string value);
		partial void OntzruleChanged();
		partial void OngmtoffChanging(long value);
		partial void OngmtoffChanged();
		partial void OndstoffChanging(long value);
		partial void OndstoffChanged();
		partial void Ondst_monthChanging(short value);
		partial void Ondst_monthChanged();
		partial void Ondst_startdayChanging(short value);
		partial void Ondst_startdayChanged();
		partial void Ondst_weekdayChanging(short value);
		partial void Ondst_weekdayChanged();
		partial void Ondst_skipweeksChanging(short value);
		partial void Ondst_skipweeksChanged();
		partial void Ondst_timeChanging(string value);
		partial void Ondst_timeChanged();
		partial void Onstd_monthChanging(short value);
		partial void Onstd_monthChanged();
		partial void Onstd_startdayChanging(short value);
		partial void Onstd_startdayChanged();
		partial void Onstd_weekdayChanging(short value);
		partial void Onstd_weekdayChanged();
		partial void Onstd_skipweeksChanging(short value);
		partial void Onstd_skipweeksChanged();
		partial void Onstd_timeChanging(string value);
		partial void Onstd_timeChanged();
		#endregion

		public mdl_timezone()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_year", CanBeNull = false, DbType = "bigint(11) NOT NULL")]
		public long year
		{
			get
			{
				return this._year;
			}
			set
			{
				if (this._year != value)
				{
					this.OnyearChanging(value);
					this.SendPropertyChanging();
					this._year = value;
					this.SendPropertyChanged("year");
					this.OnyearChanged();
				}
			}
		}

		[Column(Storage = "_tzrule", CanBeNull = false, DbType = "varchar(60) NOT NULL")]
		public string tzrule
		{
			get
			{
				return this._tzrule;
			}
			set
			{
				if (this._tzrule != value)
				{
					this.OntzruleChanging(value);
					this.SendPropertyChanging();
					this._tzrule = value;
					this.SendPropertyChanged("tzrule");
					this.OntzruleChanged();
				}
			}
		}

		[Column(Storage = "_gmtoff", CanBeNull = false, DbType = "bigint(11) NOT NULL")]
		public long gmtoff
		{
			get
			{
				return this._gmtoff;
			}
			set
			{
				if (this._gmtoff != value)
				{
					this.OngmtoffChanging(value);
					this.SendPropertyChanging();
					this._gmtoff = value;
					this.SendPropertyChanged("gmtoff");
					this.OngmtoffChanged();
				}
			}
		}

		[Column(Storage = "_dstoff", CanBeNull = false, DbType = "bigint(11) NOT NULL")]
		public long dstoff
		{
			get
			{
				return this._dstoff;
			}
			set
			{
				if (this._dstoff != value)
				{
					this.OndstoffChanging(value);
					this.SendPropertyChanging();
					this._dstoff = value;
					this.SendPropertyChanged("dstoff");
					this.OndstoffChanged();
				}
			}
		}

		[Column(Storage = "_dst_month", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public short dst_month
		{
			get
			{
				return this._dst_month;
			}
			set
			{
				if (this._dst_month != value)
				{
					this.Ondst_monthChanging(value);
					this.SendPropertyChanging();
					this._dst_month = value;
					this.SendPropertyChanged("dst_month");
					this.Ondst_monthChanged();
				}
			}
		}

		[Column(Storage = "_dst_startday", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public short dst_startday
		{
			get
			{
				return this._dst_startday;
			}
			set
			{
				if (this._dst_startday != value)
				{
					this.Ondst_startdayChanging(value);
					this.SendPropertyChanging();
					this._dst_startday = value;
					this.SendPropertyChanged("dst_startday");
					this.Ondst_startdayChanged();
				}
			}
		}

		[Column(Storage = "_dst_weekday", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public short dst_weekday
		{
			get
			{
				return this._dst_weekday;
			}
			set
			{
				if (this._dst_weekday != value)
				{
					this.Ondst_weekdayChanging(value);
					this.SendPropertyChanging();
					this._dst_weekday = value;
					this.SendPropertyChanged("dst_weekday");
					this.Ondst_weekdayChanged();
				}
			}
		}

		[Column(Storage = "_dst_skipweeks", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public short dst_skipweeks
		{
			get
			{
				return this._dst_skipweeks;
			}
			set
			{
				if (this._dst_skipweeks != value)
				{
					this.Ondst_skipweeksChanging(value);
					this.SendPropertyChanging();
					this._dst_skipweeks = value;
					this.SendPropertyChanged("dst_skipweeks");
					this.Ondst_skipweeksChanged();
				}
			}
		}

		[Column(Storage = "_dst_time", CanBeNull = false, DbType = "varchar(18) NOT NULL")]
		public string dst_time
		{
			get
			{
				return this._dst_time;
			}
			set
			{
				if (this._dst_time != value)
				{
					this.Ondst_timeChanging(value);
					this.SendPropertyChanging();
					this._dst_time = value;
					this.SendPropertyChanged("dst_time");
					this.Ondst_timeChanged();
				}
			}
		}

		[Column(Storage = "_std_month", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public short std_month
		{
			get
			{
				return this._std_month;
			}
			set
			{
				if (this._std_month != value)
				{
					this.Onstd_monthChanging(value);
					this.SendPropertyChanging();
					this._std_month = value;
					this.SendPropertyChanged("std_month");
					this.Onstd_monthChanged();
				}
			}
		}

		[Column(Storage = "_std_startday", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public short std_startday
		{
			get
			{
				return this._std_startday;
			}
			set
			{
				if (this._std_startday != value)
				{
					this.Onstd_startdayChanging(value);
					this.SendPropertyChanging();
					this._std_startday = value;
					this.SendPropertyChanged("std_startday");
					this.Onstd_startdayChanged();
				}
			}
		}

		[Column(Storage = "_std_weekday", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public short std_weekday
		{
			get
			{
				return this._std_weekday;
			}
			set
			{
				if (this._std_weekday != value)
				{
					this.Onstd_weekdayChanging(value);
					this.SendPropertyChanging();
					this._std_weekday = value;
					this.SendPropertyChanged("std_weekday");
					this.Onstd_weekdayChanged();
				}
			}
		}

		[Column(Storage = "_std_skipweeks", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public short std_skipweeks
		{
			get
			{
				return this._std_skipweeks;
			}
			set
			{
				if (this._std_skipweeks != value)
				{
					this.Onstd_skipweeksChanging(value);
					this.SendPropertyChanging();
					this._std_skipweeks = value;
					this.SendPropertyChanged("std_skipweeks");
					this.Onstd_skipweeksChanged();
				}
			}
		}

		[Column(Storage = "_std_time", CanBeNull = false, DbType = "varchar(18) NOT NULL")]
		public string std_time
		{
			get
			{
				return this._std_time;
			}
			set
			{
				if (this._std_time != value)
				{
					this.Onstd_timeChanging(value);
					this.SendPropertyChanging();
					this._std_time = value;
					this.SendPropertyChanged("std_time");
					this.Onstd_timeChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_user")]
	public partial class mdl_user : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private long _id;

		private string _auth;

		private short _confirmed;

		private short _policyagreed;

		private short _deleted;

		private decimal _mnethostid;

		private string _username;

		private string _password;

		private string _idnumber;

		private string _firstname;

		private string _lastname;

		private string _email;

		private byte _emailstop;

		private string _icq;

		private string _skype;

		private string _yahoo;

		private string _aim;

		private string _msn;

		private string _phone1;

		private string _phone2;

		private string _institution;

		private string _department;

		private string _address;

		private string _city;

		private string _country;

		private string _lang;

		private string _theme;

		private string _timezone;

		private decimal _firstaccess;

		private decimal _lastaccess;

		private decimal _lastlogin;

		private decimal _currentlogin;

		private string _lastip;

		private string _secret;

		private short _picture;

		private string _url;

		private string _description;

		private byte _mailformat;

		private byte _maildigest;

		private byte _maildisplay;

		private byte _htmleditor;

		private byte _ajax;

		private byte _autosubscribe;

		private byte _trackforums;

		private decimal _timemodified;

		private decimal _trustbitmask;

		private string _imagealt;

		private short _screenreader;

		private EntitySet<mdl_user_info_data> _mdl_user_info_datas;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(long value);
		partial void OnidChanged();
		partial void OnauthChanging(string value);
		partial void OnauthChanged();
		partial void OnconfirmedChanging(short value);
		partial void OnconfirmedChanged();
		partial void OnpolicyagreedChanging(short value);
		partial void OnpolicyagreedChanged();
		partial void OndeletedChanging(short value);
		partial void OndeletedChanged();
		partial void OnmnethostidChanging(decimal value);
		partial void OnmnethostidChanged();
		partial void OnusernameChanging(string value);
		partial void OnusernameChanged();
		partial void OnpasswordChanging(string value);
		partial void OnpasswordChanged();
		partial void OnidnumberChanging(string value);
		partial void OnidnumberChanged();
		partial void OnfirstnameChanging(string value);
		partial void OnfirstnameChanged();
		partial void OnlastnameChanging(string value);
		partial void OnlastnameChanged();
		partial void OnemailChanging(string value);
		partial void OnemailChanged();
		partial void OnemailstopChanging(byte value);
		partial void OnemailstopChanged();
		partial void OnicqChanging(string value);
		partial void OnicqChanged();
		partial void OnskypeChanging(string value);
		partial void OnskypeChanged();
		partial void OnyahooChanging(string value);
		partial void OnyahooChanged();
		partial void OnaimChanging(string value);
		partial void OnaimChanged();
		partial void OnmsnChanging(string value);
		partial void OnmsnChanged();
		partial void Onphone1Changing(string value);
		partial void Onphone1Changed();
		partial void Onphone2Changing(string value);
		partial void Onphone2Changed();
		partial void OninstitutionChanging(string value);
		partial void OninstitutionChanged();
		partial void OndepartmentChanging(string value);
		partial void OndepartmentChanged();
		partial void OnaddressChanging(string value);
		partial void OnaddressChanged();
		partial void OncityChanging(string value);
		partial void OncityChanged();
		partial void OncountryChanging(string value);
		partial void OncountryChanged();
		partial void OnlangChanging(string value);
		partial void OnlangChanged();
		partial void OnthemeChanging(string value);
		partial void OnthemeChanged();
		partial void OntimezoneChanging(string value);
		partial void OntimezoneChanged();
		partial void OnfirstaccessChanging(decimal value);
		partial void OnfirstaccessChanged();
		partial void OnlastaccessChanging(decimal value);
		partial void OnlastaccessChanged();
		partial void OnlastloginChanging(decimal value);
		partial void OnlastloginChanged();
		partial void OncurrentloginChanging(decimal value);
		partial void OncurrentloginChanged();
		partial void OnlastipChanging(string value);
		partial void OnlastipChanged();
		partial void OnsecretChanging(string value);
		partial void OnsecretChanged();
		partial void OnpictureChanging(short value);
		partial void OnpictureChanged();
		partial void OnurlChanging(string value);
		partial void OnurlChanged();
		partial void OndescriptionChanging(string value);
		partial void OndescriptionChanged();
		partial void OnmailformatChanging(byte value);
		partial void OnmailformatChanged();
		partial void OnmaildigestChanging(byte value);
		partial void OnmaildigestChanged();
		partial void OnmaildisplayChanging(byte value);
		partial void OnmaildisplayChanged();
		partial void OnhtmleditorChanging(byte value);
		partial void OnhtmleditorChanged();
		partial void OnajaxChanging(byte value);
		partial void OnajaxChanged();
		partial void OnautosubscribeChanging(byte value);
		partial void OnautosubscribeChanged();
		partial void OntrackforumsChanging(byte value);
		partial void OntrackforumsChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		partial void OntrustbitmaskChanging(decimal value);
		partial void OntrustbitmaskChanged();
		partial void OnimagealtChanging(string value);
		partial void OnimagealtChanged();
		partial void OnscreenreaderChanging(short value);
		partial void OnscreenreaderChanged();
		#endregion

		public mdl_user()
		{
			this._mdl_user_info_datas = new EntitySet<mdl_user_info_data>(new Action<mdl_user_info_data>(this.attach_mdl_user_info_datas), new Action<mdl_user_info_data>(this.detach_mdl_user_info_datas));
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_auth", CanBeNull = false, DbType = "varchar(60) NOT NULL")]
		public string auth
		{
			get
			{
				return this._auth;
			}
			set
			{
				if (this._auth != value)
				{
					this.OnauthChanging(value);
					this.SendPropertyChanging();
					this._auth = value;
					this.SendPropertyChanged("auth");
					this.OnauthChanged();
				}
			}
		}

		[Column(Storage = "_confirmed", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short confirmed
		{
			get
			{
				return this._confirmed;
			}
			set
			{
				if (this._confirmed != value)
				{
					this.OnconfirmedChanging(value);
					this.SendPropertyChanging();
					this._confirmed = value;
					this.SendPropertyChanged("confirmed");
					this.OnconfirmedChanged();
				}
			}
		}

		[Column(Storage = "_policyagreed", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short policyagreed
		{
			get
			{
				return this._policyagreed;
			}
			set
			{
				if (this._policyagreed != value)
				{
					this.OnpolicyagreedChanging(value);
					this.SendPropertyChanging();
					this._policyagreed = value;
					this.SendPropertyChanged("policyagreed");
					this.OnpolicyagreedChanged();
				}
			}
		}

		[Column(Storage = "_deleted", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if (this._deleted != value)
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}

		[Column(Storage = "_mnethostid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal mnethostid
		{
			get
			{
				return this._mnethostid;
			}
			set
			{
				if (this._mnethostid != value)
				{
					this.OnmnethostidChanging(value);
					this.SendPropertyChanging();
					this._mnethostid = value;
					this.SendPropertyChanged("mnethostid");
					this.OnmnethostidChanged();
				}
			}
		}

		[Column(Storage = "_username", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if (this._username != value)
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}

		[Column(Storage = "_password", CanBeNull = false, DbType = "varchar(96) NOT NULL")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if (this._password != value)
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}

		[Column(Storage = "_idnumber", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string idnumber
		{
			get
			{
				return this._idnumber;
			}
			set
			{
				if (this._idnumber != value)
				{
					this.OnidnumberChanging(value);
					this.SendPropertyChanging();
					this._idnumber = value;
					this.SendPropertyChanged("idnumber");
					this.OnidnumberChanged();
				}
			}
		}

		[Column(Storage = "_firstname", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if (this._firstname != value)
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}

		[Column(Storage = "_lastname", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if (this._lastname != value)
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}

		[Column(Storage = "_email", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if (this._email != value)
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}

		[Column(Storage = "_emailstop", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte emailstop
		{
			get
			{
				return this._emailstop;
			}
			set
			{
				if (this._emailstop != value)
				{
					this.OnemailstopChanging(value);
					this.SendPropertyChanging();
					this._emailstop = value;
					this.SendPropertyChanged("emailstop");
					this.OnemailstopChanged();
				}
			}
		}

		[Column(Storage = "_icq", CanBeNull = false, DbType = "varchar(45) NOT NULL")]
		public string icq
		{
			get
			{
				return this._icq;
			}
			set
			{
				if (this._icq != value)
				{
					this.OnicqChanging(value);
					this.SendPropertyChanging();
					this._icq = value;
					this.SendPropertyChanged("icq");
					this.OnicqChanged();
				}
			}
		}

		[Column(Storage = "_skype", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string skype
		{
			get
			{
				return this._skype;
			}
			set
			{
				if (this._skype != value)
				{
					this.OnskypeChanging(value);
					this.SendPropertyChanging();
					this._skype = value;
					this.SendPropertyChanged("skype");
					this.OnskypeChanged();
				}
			}
		}

		[Column(Storage = "_yahoo", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string yahoo
		{
			get
			{
				return this._yahoo;
			}
			set
			{
				if (this._yahoo != value)
				{
					this.OnyahooChanging(value);
					this.SendPropertyChanging();
					this._yahoo = value;
					this.SendPropertyChanged("yahoo");
					this.OnyahooChanged();
				}
			}
		}

		[Column(Storage = "_aim", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string aim
		{
			get
			{
				return this._aim;
			}
			set
			{
				if (this._aim != value)
				{
					this.OnaimChanging(value);
					this.SendPropertyChanging();
					this._aim = value;
					this.SendPropertyChanged("aim");
					this.OnaimChanged();
				}
			}
		}

		[Column(Storage = "_msn", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string msn
		{
			get
			{
				return this._msn;
			}
			set
			{
				if (this._msn != value)
				{
					this.OnmsnChanging(value);
					this.SendPropertyChanging();
					this._msn = value;
					this.SendPropertyChanged("msn");
					this.OnmsnChanged();
				}
			}
		}

		[Column(Storage = "_phone1", CanBeNull = false, DbType = "varchar(60) NOT NULL")]
		public string phone1
		{
			get
			{
				return this._phone1;
			}
			set
			{
				if (this._phone1 != value)
				{
					this.Onphone1Changing(value);
					this.SendPropertyChanging();
					this._phone1 = value;
					this.SendPropertyChanged("phone1");
					this.Onphone1Changed();
				}
			}
		}

		[Column(Storage = "_phone2", CanBeNull = false, DbType = "varchar(60) NOT NULL")]
		public string phone2
		{
			get
			{
				return this._phone2;
			}
			set
			{
				if (this._phone2 != value)
				{
					this.Onphone2Changing(value);
					this.SendPropertyChanging();
					this._phone2 = value;
					this.SendPropertyChanged("phone2");
					this.Onphone2Changed();
				}
			}
		}

		[Column(Storage = "_institution", CanBeNull = false, DbType = "varchar(120) NOT NULL")]
		public string institution
		{
			get
			{
				return this._institution;
			}
			set
			{
				if (this._institution != value)
				{
					this.OninstitutionChanging(value);
					this.SendPropertyChanging();
					this._institution = value;
					this.SendPropertyChanged("institution");
					this.OninstitutionChanged();
				}
			}
		}

		[Column(Storage = "_department", CanBeNull = false, DbType = "varchar(90) NOT NULL")]
		public string department
		{
			get
			{
				return this._department;
			}
			set
			{
				if (this._department != value)
				{
					this.OndepartmentChanging(value);
					this.SendPropertyChanging();
					this._department = value;
					this.SendPropertyChanged("department");
					this.OndepartmentChanged();
				}
			}
		}

		[Column(Storage = "_address", CanBeNull = false, DbType = "varchar(210) NOT NULL")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if (this._address != value)
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}

		[Column(Storage = "_city", CanBeNull = false, DbType = "varchar(60) NOT NULL")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if (this._city != value)
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}

		[Column(Storage = "_country", CanBeNull = false, DbType = "varchar(6) NOT NULL")]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if (this._country != value)
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}

		[Column(Storage = "_lang", CanBeNull = false, DbType = "varchar(90) NOT NULL")]
		public string lang
		{
			get
			{
				return this._lang;
			}
			set
			{
				if (this._lang != value)
				{
					this.OnlangChanging(value);
					this.SendPropertyChanging();
					this._lang = value;
					this.SendPropertyChanged("lang");
					this.OnlangChanged();
				}
			}
		}

		[Column(Storage = "_theme", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string theme
		{
			get
			{
				return this._theme;
			}
			set
			{
				if (this._theme != value)
				{
					this.OnthemeChanging(value);
					this.SendPropertyChanging();
					this._theme = value;
					this.SendPropertyChanged("theme");
					this.OnthemeChanged();
				}
			}
		}

		[Column(Storage = "_timezone", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string timezone
		{
			get
			{
				return this._timezone;
			}
			set
			{
				if (this._timezone != value)
				{
					this.OntimezoneChanging(value);
					this.SendPropertyChanging();
					this._timezone = value;
					this.SendPropertyChanged("timezone");
					this.OntimezoneChanged();
				}
			}
		}

		[Column(Storage = "_firstaccess", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal firstaccess
		{
			get
			{
				return this._firstaccess;
			}
			set
			{
				if (this._firstaccess != value)
				{
					this.OnfirstaccessChanging(value);
					this.SendPropertyChanging();
					this._firstaccess = value;
					this.SendPropertyChanged("firstaccess");
					this.OnfirstaccessChanged();
				}
			}
		}

		[Column(Storage = "_lastaccess", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal lastaccess
		{
			get
			{
				return this._lastaccess;
			}
			set
			{
				if (this._lastaccess != value)
				{
					this.OnlastaccessChanging(value);
					this.SendPropertyChanging();
					this._lastaccess = value;
					this.SendPropertyChanged("lastaccess");
					this.OnlastaccessChanged();
				}
			}
		}

		[Column(Storage = "_lastlogin", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal lastlogin
		{
			get
			{
				return this._lastlogin;
			}
			set
			{
				if (this._lastlogin != value)
				{
					this.OnlastloginChanging(value);
					this.SendPropertyChanging();
					this._lastlogin = value;
					this.SendPropertyChanged("lastlogin");
					this.OnlastloginChanged();
				}
			}
		}

		[Column(Storage = "_currentlogin", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal currentlogin
		{
			get
			{
				return this._currentlogin;
			}
			set
			{
				if (this._currentlogin != value)
				{
					this.OncurrentloginChanging(value);
					this.SendPropertyChanging();
					this._currentlogin = value;
					this.SendPropertyChanged("currentlogin");
					this.OncurrentloginChanged();
				}
			}
		}

		[Column(Storage = "_lastip", CanBeNull = false, DbType = "varchar(45) NOT NULL")]
		public string lastip
		{
			get
			{
				return this._lastip;
			}
			set
			{
				if (this._lastip != value)
				{
					this.OnlastipChanging(value);
					this.SendPropertyChanging();
					this._lastip = value;
					this.SendPropertyChanged("lastip");
					this.OnlastipChanged();
				}
			}
		}

		[Column(Storage = "_secret", CanBeNull = false, DbType = "varchar(45) NOT NULL")]
		public string secret
		{
			get
			{
				return this._secret;
			}
			set
			{
				if (this._secret != value)
				{
					this.OnsecretChanging(value);
					this.SendPropertyChanging();
					this._secret = value;
					this.SendPropertyChanged("secret");
					this.OnsecretChanged();
				}
			}
		}

		[Column(Storage = "_picture", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short picture
		{
			get
			{
				return this._picture;
			}
			set
			{
				if (this._picture != value)
				{
					this.OnpictureChanging(value);
					this.SendPropertyChanging();
					this._picture = value;
					this.SendPropertyChanged("picture");
					this.OnpictureChanged();
				}
			}
		}

		[Column(Storage = "_url", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if (this._url != value)
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}

		[Column(Storage = "_description", DbType = "text")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if (this._description != value)
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}

		[Column(Storage = "_mailformat", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte mailformat
		{
			get
			{
				return this._mailformat;
			}
			set
			{
				if (this._mailformat != value)
				{
					this.OnmailformatChanging(value);
					this.SendPropertyChanging();
					this._mailformat = value;
					this.SendPropertyChanged("mailformat");
					this.OnmailformatChanged();
				}
			}
		}

		[Column(Storage = "_maildigest", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte maildigest
		{
			get
			{
				return this._maildigest;
			}
			set
			{
				if (this._maildigest != value)
				{
					this.OnmaildigestChanging(value);
					this.SendPropertyChanging();
					this._maildigest = value;
					this.SendPropertyChanged("maildigest");
					this.OnmaildigestChanged();
				}
			}
		}

		[Column(Storage = "_maildisplay", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte maildisplay
		{
			get
			{
				return this._maildisplay;
			}
			set
			{
				if (this._maildisplay != value)
				{
					this.OnmaildisplayChanging(value);
					this.SendPropertyChanging();
					this._maildisplay = value;
					this.SendPropertyChanged("maildisplay");
					this.OnmaildisplayChanged();
				}
			}
		}

		[Column(Storage = "_htmleditor", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte htmleditor
		{
			get
			{
				return this._htmleditor;
			}
			set
			{
				if (this._htmleditor != value)
				{
					this.OnhtmleditorChanging(value);
					this.SendPropertyChanging();
					this._htmleditor = value;
					this.SendPropertyChanged("htmleditor");
					this.OnhtmleditorChanged();
				}
			}
		}

		[Column(Storage = "_ajax", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte ajax
		{
			get
			{
				return this._ajax;
			}
			set
			{
				if (this._ajax != value)
				{
					this.OnajaxChanging(value);
					this.SendPropertyChanging();
					this._ajax = value;
					this.SendPropertyChanged("ajax");
					this.OnajaxChanged();
				}
			}
		}

		[Column(Storage = "_autosubscribe", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte autosubscribe
		{
			get
			{
				return this._autosubscribe;
			}
			set
			{
				if (this._autosubscribe != value)
				{
					this.OnautosubscribeChanging(value);
					this.SendPropertyChanging();
					this._autosubscribe = value;
					this.SendPropertyChanged("autosubscribe");
					this.OnautosubscribeChanged();
				}
			}
		}

		[Column(Storage = "_trackforums", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte trackforums
		{
			get
			{
				return this._trackforums;
			}
			set
			{
				if (this._trackforums != value)
				{
					this.OntrackforumsChanging(value);
					this.SendPropertyChanging();
					this._trackforums = value;
					this.SendPropertyChanged("trackforums");
					this.OntrackforumsChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_trustbitmask", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal trustbitmask
		{
			get
			{
				return this._trustbitmask;
			}
			set
			{
				if (this._trustbitmask != value)
				{
					this.OntrustbitmaskChanging(value);
					this.SendPropertyChanging();
					this._trustbitmask = value;
					this.SendPropertyChanged("trustbitmask");
					this.OntrustbitmaskChanged();
				}
			}
		}

		[Column(Storage = "_imagealt", DbType = "varchar(765)")]
		public string imagealt
		{
			get
			{
				return this._imagealt;
			}
			set
			{
				if (this._imagealt != value)
				{
					this.OnimagealtChanging(value);
					this.SendPropertyChanging();
					this._imagealt = value;
					this.SendPropertyChanged("imagealt");
					this.OnimagealtChanged();
				}
			}
		}

		[Column(Storage = "_screenreader", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public short screenreader
		{
			get
			{
				return this._screenreader;
			}
			set
			{
				if (this._screenreader != value)
				{
					this.OnscreenreaderChanging(value);
					this.SendPropertyChanging();
					this._screenreader = value;
					this.SendPropertyChanged("screenreader");
					this.OnscreenreaderChanged();
				}
			}
		}

		[Association(Name="mdl_user_mdl_user_info_data", Storage="_mdl_user_info_datas", OtherKey="userid")]
		public EntitySet<mdl_user_info_data> mdl_user_info_datas
		{
			get
			{

				return this._mdl_user_info_datas;
			}
			set
			{
				this._mdl_user_info_datas.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}

		private void attach_mdl_user_info_datas(mdl_user_info_data entity)
		{
			this.SendPropertyChanging();
			entity.mdl_user = this;
		}
		
		private void detach_mdl_user_info_datas(mdl_user_info_data entity)
		{
			this.SendPropertyChanging();
			entity.mdl_user = null;
		}
	}

	[Table(Name = @"moodle59.mdl_user_info_category")]
	public partial class mdl_user_info_category : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _name;

		private decimal _sortorder;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnsortorderChanging(decimal value);
		partial void OnsortorderChanged();
		#endregion

		public mdl_user_info_category()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_sortorder", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal sortorder
		{
			get
			{
				return this._sortorder;
			}
			set
			{
				if (this._sortorder != value)
				{
					this.OnsortorderChanging(value);
					this.SendPropertyChanging();
					this._sortorder = value;
					this.SendPropertyChanged("sortorder");
					this.OnsortorderChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_user_info_data")]
	public partial class mdl_user_info_data : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private long _userid;

		private decimal _fieldid;

		private string _data;

		private EntityRef<mdl_user> _mdl_user;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuseridChanging(long value);
		partial void OnuseridChanged();
		partial void OnfieldidChanging(decimal value);
		partial void OnfieldidChanged();
		partial void OndataChanging(string value);
		partial void OndataChanged();
		#endregion

		public mdl_user_info_data()
		{
			this._mdl_user = default(EntityRef<mdl_user>);
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					if (this._mdl_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_fieldid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal fieldid
		{
			get
			{
				return this._fieldid;
			}
			set
			{
				if (this._fieldid != value)
				{
					this.OnfieldidChanging(value);
					this.SendPropertyChanging();
					this._fieldid = value;
					this.SendPropertyChanged("fieldid");
					this.OnfieldidChanged();
				}
			}
		}

		[Column(Storage = "_data", CanBeNull = false, DbType = "longtext NOT NULL")]
		public string data
		{
			get
			{
				return this._data;
			}
			set
			{
				if (this._data != value)
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}

		[Association(Name="mdl_user_mdl_user_info_data", Storage="_mdl_user", ThisKey="userid", IsForeignKey=true)]
		public mdl_user mdl_user
		{
			get
			{
				return this._mdl_user.Entity;
			}
			set
			{
				mdl_user previousValue = this._mdl_user.Entity;
				if (((previousValue != value) 
							|| (this._mdl_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mdl_user.Entity = null;
						previousValue.mdl_user_info_datas.Remove(this);
					}
					this._mdl_user.Entity = value;
					if ((value != null))
					{
						value.mdl_user_info_datas.Add(this);
						this._userid = value.id;
					}
					else
					{
						this._userid = default(long); 
					}
					this.SendPropertyChanged("mdl_user");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_user_info_field")]
	public partial class mdl_user_info_field : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _shortname;

		private string _name;

		private string _datatype;

		private string _description;

		private decimal _categoryid;

		private decimal _sortorder;

		private byte _required;

		private byte _locked;

		private int _visible;

		private byte _forceunique;

		private byte _signup;

		private string _defaultdata;

		private string _param1;

		private string _param2;

		private string _param3;

		private string _param4;

		private string _param5;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnshortnameChanging(string value);
		partial void OnshortnameChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OndatatypeChanging(string value);
		partial void OndatatypeChanged();
		partial void OndescriptionChanging(string value);
		partial void OndescriptionChanged();
		partial void OncategoryidChanging(decimal value);
		partial void OncategoryidChanged();
		partial void OnsortorderChanging(decimal value);
		partial void OnsortorderChanged();
		partial void OnrequiredChanging(byte value);
		partial void OnrequiredChanged();
		partial void OnlockedChanging(byte value);
		partial void OnlockedChanged();
		partial void OnvisibleChanging(int value);
		partial void OnvisibleChanged();
		partial void OnforceuniqueChanging(byte value);
		partial void OnforceuniqueChanged();
		partial void OnsignupChanging(byte value);
		partial void OnsignupChanged();
		partial void OndefaultdataChanging(string value);
		partial void OndefaultdataChanged();
		partial void Onparam1Changing(string value);
		partial void Onparam1Changed();
		partial void Onparam2Changing(string value);
		partial void Onparam2Changed();
		partial void Onparam3Changing(string value);
		partial void Onparam3Changed();
		partial void Onparam4Changing(string value);
		partial void Onparam4Changed();
		partial void Onparam5Changing(string value);
		partial void Onparam5Changed();
		#endregion

		public mdl_user_info_field()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_shortname", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string shortname
		{
			get
			{
				return this._shortname;
			}
			set
			{
				if (this._shortname != value)
				{
					this.OnshortnameChanging(value);
					this.SendPropertyChanging();
					this._shortname = value;
					this.SendPropertyChanged("shortname");
					this.OnshortnameChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "longtext NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_datatype", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string datatype
		{
			get
			{
				return this._datatype;
			}
			set
			{
				if (this._datatype != value)
				{
					this.OndatatypeChanging(value);
					this.SendPropertyChanging();
					this._datatype = value;
					this.SendPropertyChanged("datatype");
					this.OndatatypeChanged();
				}
			}
		}

		[Column(Storage = "_description", DbType = "longtext")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if (this._description != value)
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}

		[Column(Storage = "_categoryid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal categoryid
		{
			get
			{
				return this._categoryid;
			}
			set
			{
				if (this._categoryid != value)
				{
					this.OncategoryidChanging(value);
					this.SendPropertyChanging();
					this._categoryid = value;
					this.SendPropertyChanged("categoryid");
					this.OncategoryidChanged();
				}
			}
		}

		[Column(Storage = "_sortorder", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal sortorder
		{
			get
			{
				return this._sortorder;
			}
			set
			{
				if (this._sortorder != value)
				{
					this.OnsortorderChanging(value);
					this.SendPropertyChanging();
					this._sortorder = value;
					this.SendPropertyChanged("sortorder");
					this.OnsortorderChanged();
				}
			}
		}

		[Column(Storage = "_required", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte required
		{
			get
			{
				return this._required;
			}
			set
			{
				if (this._required != value)
				{
					this.OnrequiredChanging(value);
					this.SendPropertyChanging();
					this._required = value;
					this.SendPropertyChanged("required");
					this.OnrequiredChanged();
				}
			}
		}

		[Column(Storage = "_locked", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte locked
		{
			get
			{
				return this._locked;
			}
			set
			{
				if (this._locked != value)
				{
					this.OnlockedChanging(value);
					this.SendPropertyChanging();
					this._locked = value;
					this.SendPropertyChanged("locked");
					this.OnlockedChanged();
				}
			}
		}

		[Column(Storage = "_visible", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int visible
		{
			get
			{
				return this._visible;
			}
			set
			{
				if (this._visible != value)
				{
					this.OnvisibleChanging(value);
					this.SendPropertyChanging();
					this._visible = value;
					this.SendPropertyChanged("visible");
					this.OnvisibleChanged();
				}
			}
		}

		[Column(Storage = "_forceunique", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte forceunique
		{
			get
			{
				return this._forceunique;
			}
			set
			{
				if (this._forceunique != value)
				{
					this.OnforceuniqueChanging(value);
					this.SendPropertyChanging();
					this._forceunique = value;
					this.SendPropertyChanged("forceunique");
					this.OnforceuniqueChanged();
				}
			}
		}

		[Column(Storage = "_signup", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte signup
		{
			get
			{
				return this._signup;
			}
			set
			{
				if (this._signup != value)
				{
					this.OnsignupChanging(value);
					this.SendPropertyChanging();
					this._signup = value;
					this.SendPropertyChanged("signup");
					this.OnsignupChanged();
				}
			}
		}

		[Column(Storage = "_defaultdata", DbType = "longtext")]
		public string defaultdata
		{
			get
			{
				return this._defaultdata;
			}
			set
			{
				if (this._defaultdata != value)
				{
					this.OndefaultdataChanging(value);
					this.SendPropertyChanging();
					this._defaultdata = value;
					this.SendPropertyChanged("defaultdata");
					this.OndefaultdataChanged();
				}
			}
		}

		[Column(Storage = "_param1", DbType = "longtext")]
		public string param1
		{
			get
			{
				return this._param1;
			}
			set
			{
				if (this._param1 != value)
				{
					this.Onparam1Changing(value);
					this.SendPropertyChanging();
					this._param1 = value;
					this.SendPropertyChanged("param1");
					this.Onparam1Changed();
				}
			}
		}

		[Column(Storage = "_param2", DbType = "longtext")]
		public string param2
		{
			get
			{
				return this._param2;
			}
			set
			{
				if (this._param2 != value)
				{
					this.Onparam2Changing(value);
					this.SendPropertyChanging();
					this._param2 = value;
					this.SendPropertyChanged("param2");
					this.Onparam2Changed();
				}
			}
		}

		[Column(Storage = "_param3", DbType = "longtext")]
		public string param3
		{
			get
			{
				return this._param3;
			}
			set
			{
				if (this._param3 != value)
				{
					this.Onparam3Changing(value);
					this.SendPropertyChanging();
					this._param3 = value;
					this.SendPropertyChanged("param3");
					this.Onparam3Changed();
				}
			}
		}

		[Column(Storage = "_param4", DbType = "longtext")]
		public string param4
		{
			get
			{
				return this._param4;
			}
			set
			{
				if (this._param4 != value)
				{
					this.Onparam4Changing(value);
					this.SendPropertyChanging();
					this._param4 = value;
					this.SendPropertyChanged("param4");
					this.Onparam4Changed();
				}
			}
		}

		[Column(Storage = "_param5", DbType = "longtext")]
		public string param5
		{
			get
			{
				return this._param5;
			}
			set
			{
				if (this._param5 != value)
				{
					this.Onparam5Changing(value);
					this.SendPropertyChanging();
					this._param5 = value;
					this.SendPropertyChanged("param5");
					this.Onparam5Changed();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_user_lastaccess")]
	public partial class mdl_user_lastacces : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _userid;

		private decimal _courseid;

		private decimal _timeaccess;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OncourseidChanging(decimal value);
		partial void OncourseidChanged();
		partial void OntimeaccessChanging(decimal value);
		partial void OntimeaccessChanged();
		#endregion

		public mdl_user_lastacces()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_courseid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal courseid
		{
			get
			{
				return this._courseid;
			}
			set
			{
				if (this._courseid != value)
				{
					this.OncourseidChanging(value);
					this.SendPropertyChanging();
					this._courseid = value;
					this.SendPropertyChanged("courseid");
					this.OncourseidChanged();
				}
			}
		}

		[Column(Storage = "_timeaccess", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeaccess
		{
			get
			{
				return this._timeaccess;
			}
			set
			{
				if (this._timeaccess != value)
				{
					this.OntimeaccessChanging(value);
					this.SendPropertyChanging();
					this._timeaccess = value;
					this.SendPropertyChanged("timeaccess");
					this.OntimeaccessChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_user_preferences")]
	public partial class mdl_user_preference : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private long _userid;

		private string _name;

		private string _value;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnuseridChanging(long value);
		partial void OnuseridChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnvalueChanging(string value);
		partial void OnvalueChanged();
		#endregion

		public mdl_user_preference()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(150) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_value", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if (this._value != value)
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_user_private_key")]
	public partial class mdl_user_private_key : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _script;

		private string _value;

		private decimal _userid;

		private System.Nullable<decimal> _instance;

		private string _iprestriction;

		private System.Nullable<decimal> _validuntil;

		private System.Nullable<decimal> _timecreated;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnscriptChanging(string value);
		partial void OnscriptChanged();
		partial void OnvalueChanging(string value);
		partial void OnvalueChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OninstanceChanging(System.Nullable<decimal> value);
		partial void OninstanceChanged();
		partial void OniprestrictionChanging(string value);
		partial void OniprestrictionChanged();
		partial void OnvaliduntilChanging(System.Nullable<decimal> value);
		partial void OnvaliduntilChanged();
		partial void OntimecreatedChanging(System.Nullable<decimal> value);
		partial void OntimecreatedChanged();
		#endregion

		public mdl_user_private_key()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_script", CanBeNull = false, DbType = "varchar(384) NOT NULL")]
		public string script
		{
			get
			{
				return this._script;
			}
			set
			{
				if (this._script != value)
				{
					this.OnscriptChanging(value);
					this.SendPropertyChanging();
					this._script = value;
					this.SendPropertyChanged("script");
					this.OnscriptChanged();
				}
			}
		}

		[Column(Storage = "_value", CanBeNull = false, DbType = "varchar(384) NOT NULL")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if (this._value != value)
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_instance", DbType = "bigint(10)")]
		public System.Nullable<decimal> instance
		{
			get
			{
				return this._instance;
			}
			set
			{
				if (this._instance != value)
				{
					this.OninstanceChanging(value);
					this.SendPropertyChanging();
					this._instance = value;
					this.SendPropertyChanged("instance");
					this.OninstanceChanged();
				}
			}
		}

		[Column(Storage = "_iprestriction", DbType = "varchar(765)")]
		public string iprestriction
		{
			get
			{
				return this._iprestriction;
			}
			set
			{
				if (this._iprestriction != value)
				{
					this.OniprestrictionChanging(value);
					this.SendPropertyChanging();
					this._iprestriction = value;
					this.SendPropertyChanged("iprestriction");
					this.OniprestrictionChanged();
				}
			}
		}

		[Column(Storage = "_validuntil", DbType = "bigint(10)")]
		public System.Nullable<decimal> validuntil
		{
			get
			{
				return this._validuntil;
			}
			set
			{
				if (this._validuntil != value)
				{
					this.OnvaliduntilChanging(value);
					this.SendPropertyChanging();
					this._validuntil = value;
					this.SendPropertyChanged("validuntil");
					this.OnvaliduntilChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", DbType = "bigint(10)")]
		public System.Nullable<decimal> timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_webdav_locks")]
	public partial class mdl_webdav_lock : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _token;

		private string _path;

		private decimal _expiry;

		private decimal _userid;

		private byte _recursive;

		private byte _exclusivelock;

		private decimal _created;

		private decimal _modified;

		private string _owner;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OntokenChanging(string value);
		partial void OntokenChanged();
		partial void OnpathChanging(string value);
		partial void OnpathChanged();
		partial void OnexpiryChanging(decimal value);
		partial void OnexpiryChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnrecursiveChanging(byte value);
		partial void OnrecursiveChanged();
		partial void OnexclusivelockChanging(byte value);
		partial void OnexclusivelockChanged();
		partial void OncreatedChanging(decimal value);
		partial void OncreatedChanged();
		partial void OnmodifiedChanging(decimal value);
		partial void OnmodifiedChanged();
		partial void OnownerChanging(string value);
		partial void OnownerChanged();
		#endregion

		public mdl_webdav_lock()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_token", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string token
		{
			get
			{
				return this._token;
			}
			set
			{
				if (this._token != value)
				{
					this.OntokenChanging(value);
					this.SendPropertyChanging();
					this._token = value;
					this.SendPropertyChanged("token");
					this.OntokenChanged();
				}
			}
		}

		[Column(Storage = "_path", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if (this._path != value)
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}

		[Column(Storage = "_expiry", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal expiry
		{
			get
			{
				return this._expiry;
			}
			set
			{
				if (this._expiry != value)
				{
					this.OnexpiryChanging(value);
					this.SendPropertyChanging();
					this._expiry = value;
					this.SendPropertyChanged("expiry");
					this.OnexpiryChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_recursive", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte recursive
		{
			get
			{
				return this._recursive;
			}
			set
			{
				if (this._recursive != value)
				{
					this.OnrecursiveChanging(value);
					this.SendPropertyChanging();
					this._recursive = value;
					this.SendPropertyChanged("recursive");
					this.OnrecursiveChanged();
				}
			}
		}

		[Column(Storage = "_exclusivelock", CanBeNull = false, DbType = "tinyint(1) NOT NULL")]
		public byte exclusivelock
		{
			get
			{
				return this._exclusivelock;
			}
			set
			{
				if (this._exclusivelock != value)
				{
					this.OnexclusivelockChanging(value);
					this.SendPropertyChanging();
					this._exclusivelock = value;
					this.SendPropertyChanged("exclusivelock");
					this.OnexclusivelockChanged();
				}
			}
		}

		[Column(Storage = "_created", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal created
		{
			get
			{
				return this._created;
			}
			set
			{
				if (this._created != value)
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}

		[Column(Storage = "_modified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if (this._modified != value)
				{
					this.OnmodifiedChanging(value);
					this.SendPropertyChanging();
					this._modified = value;
					this.SendPropertyChanged("modified");
					this.OnmodifiedChanged();
				}
			}
		}

		[Column(Storage = "_owner", DbType = "varchar(765)")]
		public string owner
		{
			get
			{
				return this._owner;
			}
			set
			{
				if (this._owner != value)
				{
					this.OnownerChanging(value);
					this.SendPropertyChanging();
					this._owner = value;
					this.SendPropertyChanged("owner");
					this.OnownerChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_wiki")]
	public partial class mdl_wiki : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private string _name;

		private string _summary;

		private string _pagename;

		private string _wtype;

		private int _ewikiprinttitle;

		private int _htmlmode;

		private int _ewikiacceptbinary;

		private int _disablecamelcase;

		private int _setpageflags;

		private int _strippages;

		private int _removepages;

		private int _revertchanges;

		private string _initialcontent;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OnsummaryChanging(string value);
		partial void OnsummaryChanged();
		partial void OnpagenameChanging(string value);
		partial void OnpagenameChanged();
		partial void OnwtypeChanging(string value);
		partial void OnwtypeChanged();
		partial void OnewikiprinttitleChanging(int value);
		partial void OnewikiprinttitleChanged();
		partial void OnhtmlmodeChanging(int value);
		partial void OnhtmlmodeChanged();
		partial void OnewikiacceptbinaryChanging(int value);
		partial void OnewikiacceptbinaryChanged();
		partial void OndisablecamelcaseChanging(int value);
		partial void OndisablecamelcaseChanged();
		partial void OnsetpageflagsChanging(int value);
		partial void OnsetpageflagsChanged();
		partial void OnstrippagesChanging(int value);
		partial void OnstrippagesChanged();
		partial void OnremovepagesChanging(int value);
		partial void OnremovepagesChanged();
		partial void OnrevertchangesChanging(int value);
		partial void OnrevertchangesChanged();
		partial void OninitialcontentChanging(string value);
		partial void OninitialcontentChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_wiki()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_summary", CanBeNull = false, DbType = "text NOT NULL")]
		public string summary
		{
			get
			{
				return this._summary;
			}
			set
			{
				if (this._summary != value)
				{
					this.OnsummaryChanging(value);
					this.SendPropertyChanging();
					this._summary = value;
					this.SendPropertyChanged("summary");
					this.OnsummaryChanged();
				}
			}
		}

		[Column(Storage = "_pagename", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string pagename
		{
			get
			{
				return this._pagename;
			}
			set
			{
				if (this._pagename != value)
				{
					this.OnpagenameChanging(value);
					this.SendPropertyChanging();
					this._pagename = value;
					this.SendPropertyChanged("pagename");
					this.OnpagenameChanged();
				}
			}
		}

		[Column(Storage = "_wtype", CanBeNull = false, DbType = "enum NOT NULL")]
		public string wtype
		{
			get
			{
				return this._wtype;
			}
			set
			{
				if (this._wtype != value)
				{
					this.OnwtypeChanging(value);
					this.SendPropertyChanging();
					this._wtype = value;
					this.SendPropertyChanged("wtype");
					this.OnwtypeChanged();
				}
			}
		}

		[Column(Storage = "_ewikiprinttitle", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int ewikiprinttitle
		{
			get
			{
				return this._ewikiprinttitle;
			}
			set
			{
				if (this._ewikiprinttitle != value)
				{
					this.OnewikiprinttitleChanging(value);
					this.SendPropertyChanging();
					this._ewikiprinttitle = value;
					this.SendPropertyChanged("ewikiprinttitle");
					this.OnewikiprinttitleChanged();
				}
			}
		}

		[Column(Storage = "_htmlmode", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int htmlmode
		{
			get
			{
				return this._htmlmode;
			}
			set
			{
				if (this._htmlmode != value)
				{
					this.OnhtmlmodeChanging(value);
					this.SendPropertyChanging();
					this._htmlmode = value;
					this.SendPropertyChanged("htmlmode");
					this.OnhtmlmodeChanged();
				}
			}
		}

		[Column(Storage = "_ewikiacceptbinary", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int ewikiacceptbinary
		{
			get
			{
				return this._ewikiacceptbinary;
			}
			set
			{
				if (this._ewikiacceptbinary != value)
				{
					this.OnewikiacceptbinaryChanging(value);
					this.SendPropertyChanging();
					this._ewikiacceptbinary = value;
					this.SendPropertyChanged("ewikiacceptbinary");
					this.OnewikiacceptbinaryChanged();
				}
			}
		}

		[Column(Storage = "_disablecamelcase", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int disablecamelcase
		{
			get
			{
				return this._disablecamelcase;
			}
			set
			{
				if (this._disablecamelcase != value)
				{
					this.OndisablecamelcaseChanging(value);
					this.SendPropertyChanging();
					this._disablecamelcase = value;
					this.SendPropertyChanged("disablecamelcase");
					this.OndisablecamelcaseChanged();
				}
			}
		}

		[Column(Storage = "_setpageflags", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int setpageflags
		{
			get
			{
				return this._setpageflags;
			}
			set
			{
				if (this._setpageflags != value)
				{
					this.OnsetpageflagsChanging(value);
					this.SendPropertyChanging();
					this._setpageflags = value;
					this.SendPropertyChanged("setpageflags");
					this.OnsetpageflagsChanged();
				}
			}
		}

		[Column(Storage = "_strippages", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int strippages
		{
			get
			{
				return this._strippages;
			}
			set
			{
				if (this._strippages != value)
				{
					this.OnstrippagesChanging(value);
					this.SendPropertyChanging();
					this._strippages = value;
					this.SendPropertyChanged("strippages");
					this.OnstrippagesChanged();
				}
			}
		}

		[Column(Storage = "_removepages", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int removepages
		{
			get
			{
				return this._removepages;
			}
			set
			{
				if (this._removepages != value)
				{
					this.OnremovepagesChanging(value);
					this.SendPropertyChanging();
					this._removepages = value;
					this.SendPropertyChanged("removepages");
					this.OnremovepagesChanged();
				}
			}
		}

		[Column(Storage = "_revertchanges", CanBeNull = false, DbType = "smallint(4) NOT NULL")]
		public int revertchanges
		{
			get
			{
				return this._revertchanges;
			}
			set
			{
				if (this._revertchanges != value)
				{
					this.OnrevertchangesChanging(value);
					this.SendPropertyChanging();
					this._revertchanges = value;
					this.SendPropertyChanged("revertchanges");
					this.OnrevertchangesChanged();
				}
			}
		}

		[Column(Storage = "_initialcontent", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string initialcontent
		{
			get
			{
				return this._initialcontent;
			}
			set
			{
				if (this._initialcontent != value)
				{
					this.OninitialcontentChanging(value);
					this.SendPropertyChanging();
					this._initialcontent = value;
					this.SendPropertyChanged("initialcontent");
					this.OninitialcontentChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_wiki_entries")]
	public partial class mdl_wiki_entr : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _wikiid;

		private decimal _course;

		private decimal _groupid;

		private decimal _userid;

		private string _pagename;

		private decimal _timemodified;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnwikiidChanging(decimal value);
		partial void OnwikiidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OngroupidChanging(decimal value);
		partial void OngroupidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OnpagenameChanging(string value);
		partial void OnpagenameChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		#endregion

		public mdl_wiki_entr()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_wikiid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal wikiid
		{
			get
			{
				return this._wikiid;
			}
			set
			{
				if (this._wikiid != value)
				{
					this.OnwikiidChanging(value);
					this.SendPropertyChanging();
					this._wikiid = value;
					this.SendPropertyChanged("wikiid");
					this.OnwikiidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_groupid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal groupid
		{
			get
			{
				return this._groupid;
			}
			set
			{
				if (this._groupid != value)
				{
					this.OngroupidChanging(value);
					this.SendPropertyChanging();
					this._groupid = value;
					this.SendPropertyChanged("groupid");
					this.OngroupidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_pagename", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string pagename
		{
			get
			{
				return this._pagename;
			}
			set
			{
				if (this._pagename != value)
				{
					this.OnpagenameChanging(value);
					this.SendPropertyChanging();
					this._pagename = value;
					this.SendPropertyChanged("pagename");
					this.OnpagenameChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_wiki_locks")]
	public partial class mdl_wiki_lock : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _wikiid;

		private string _pagename;

		private decimal _lockedby;

		private decimal _lockedsince;

		private decimal _lockedseen;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnwikiidChanging(decimal value);
		partial void OnwikiidChanged();
		partial void OnpagenameChanging(string value);
		partial void OnpagenameChanged();
		partial void OnlockedbyChanging(decimal value);
		partial void OnlockedbyChanged();
		partial void OnlockedsinceChanging(decimal value);
		partial void OnlockedsinceChanged();
		partial void OnlockedseenChanging(decimal value);
		partial void OnlockedseenChanged();
		#endregion

		public mdl_wiki_lock()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_wikiid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal wikiid
		{
			get
			{
				return this._wikiid;
			}
			set
			{
				if (this._wikiid != value)
				{
					this.OnwikiidChanging(value);
					this.SendPropertyChanging();
					this._wikiid = value;
					this.SendPropertyChanged("wikiid");
					this.OnwikiidChanged();
				}
			}
		}

		[Column(Storage = "_pagename", CanBeNull = false, DbType = "varchar(480) NOT NULL")]
		public string pagename
		{
			get
			{
				return this._pagename;
			}
			set
			{
				if (this._pagename != value)
				{
					this.OnpagenameChanging(value);
					this.SendPropertyChanging();
					this._pagename = value;
					this.SendPropertyChanged("pagename");
					this.OnpagenameChanged();
				}
			}
		}

		[Column(Storage = "_lockedby", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal lockedby
		{
			get
			{
				return this._lockedby;
			}
			set
			{
				if (this._lockedby != value)
				{
					this.OnlockedbyChanging(value);
					this.SendPropertyChanging();
					this._lockedby = value;
					this.SendPropertyChanged("lockedby");
					this.OnlockedbyChanged();
				}
			}
		}

		[Column(Storage = "_lockedsince", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal lockedsince
		{
			get
			{
				return this._lockedsince;
			}
			set
			{
				if (this._lockedsince != value)
				{
					this.OnlockedsinceChanging(value);
					this.SendPropertyChanging();
					this._lockedsince = value;
					this.SendPropertyChanged("lockedsince");
					this.OnlockedsinceChanged();
				}
			}
		}

		[Column(Storage = "_lockedseen", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal lockedseen
		{
			get
			{
				return this._lockedseen;
			}
			set
			{
				if (this._lockedseen != value)
				{
					this.OnlockedseenChanging(value);
					this.SendPropertyChanging();
					this._lockedseen = value;
					this.SendPropertyChanged("lockedseen");
					this.OnlockedseenChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_wiki_pages")]
	public partial class mdl_wiki_page : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private string _pagename;

		private decimal _version;

		private System.Nullable<decimal> _flags;

		private string _content;

		private string _author;

		private decimal _userid;

		private System.Nullable<decimal> _created;

		private System.Nullable<decimal> _lastmodified;

		private string _refs;

		private string _meta;

		private System.Nullable<decimal> _hits;

		private decimal _wiki;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnpagenameChanging(string value);
		partial void OnpagenameChanged();
		partial void OnversionChanging(decimal value);
		partial void OnversionChanged();
		partial void OnflagsChanging(System.Nullable<decimal> value);
		partial void OnflagsChanged();
		partial void OncontentChanging(string value);
		partial void OncontentChanged();
		partial void OnauthorChanging(string value);
		partial void OnauthorChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OncreatedChanging(System.Nullable<decimal> value);
		partial void OncreatedChanged();
		partial void OnlastmodifiedChanging(System.Nullable<decimal> value);
		partial void OnlastmodifiedChanged();
		partial void OnrefsChanging(string value);
		partial void OnrefsChanged();
		partial void OnmetaChanging(string value);
		partial void OnmetaChanged();
		partial void OnhitsChanging(System.Nullable<decimal> value);
		partial void OnhitsChanged();
		partial void OnwikiChanging(decimal value);
		partial void OnwikiChanged();
		#endregion

		public mdl_wiki_page()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_pagename", CanBeNull = false, DbType = "varchar(480) NOT NULL")]
		public string pagename
		{
			get
			{
				return this._pagename;
			}
			set
			{
				if (this._pagename != value)
				{
					this.OnpagenameChanging(value);
					this.SendPropertyChanging();
					this._pagename = value;
					this.SendPropertyChanged("pagename");
					this.OnpagenameChanged();
				}
			}
		}

		[Column(Storage = "_version", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal version
		{
			get
			{
				return this._version;
			}
			set
			{
				if (this._version != value)
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}

		[Column(Storage = "_flags", DbType = "bigint(10)")]
		public System.Nullable<decimal> flags
		{
			get
			{
				return this._flags;
			}
			set
			{
				if (this._flags != value)
				{
					this.OnflagsChanging(value);
					this.SendPropertyChanging();
					this._flags = value;
					this.SendPropertyChanged("flags");
					this.OnflagsChanged();
				}
			}
		}

		[Column(Storage = "_content", DbType = "mediumtext")]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if (this._content != value)
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}

		[Column(Storage = "_author", DbType = "varchar(300)")]
		public string author
		{
			get
			{
				return this._author;
			}
			set
			{
				if (this._author != value)
				{
					this.OnauthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("author");
					this.OnauthorChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_created", DbType = "bigint(10)")]
		public System.Nullable<decimal> created
		{
			get
			{
				return this._created;
			}
			set
			{
				if (this._created != value)
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}

		[Column(Storage = "_lastmodified", DbType = "bigint(10)")]
		public System.Nullable<decimal> lastmodified
		{
			get
			{
				return this._lastmodified;
			}
			set
			{
				if (this._lastmodified != value)
				{
					this.OnlastmodifiedChanging(value);
					this.SendPropertyChanging();
					this._lastmodified = value;
					this.SendPropertyChanged("lastmodified");
					this.OnlastmodifiedChanged();
				}
			}
		}

		[Column(Storage = "_refs", DbType = "mediumtext")]
		public string refs
		{
			get
			{
				return this._refs;
			}
			set
			{
				if (this._refs != value)
				{
					this.OnrefsChanging(value);
					this.SendPropertyChanging();
					this._refs = value;
					this.SendPropertyChanged("refs");
					this.OnrefsChanged();
				}
			}
		}

		[Column(Storage = "_meta", DbType = "mediumtext")]
		public string meta
		{
			get
			{
				return this._meta;
			}
			set
			{
				if (this._meta != value)
				{
					this.OnmetaChanging(value);
					this.SendPropertyChanging();
					this._meta = value;
					this.SendPropertyChanged("meta");
					this.OnmetaChanged();
				}
			}
		}

		[Column(Storage = "_hits", DbType = "bigint(10)")]
		public System.Nullable<decimal> hits
		{
			get
			{
				return this._hits;
			}
			set
			{
				if (this._hits != value)
				{
					this.OnhitsChanging(value);
					this.SendPropertyChanging();
					this._hits = value;
					this.SendPropertyChanged("hits");
					this.OnhitsChanged();
				}
			}
		}

		[Column(Storage = "_wiki", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal wiki
		{
			get
			{
				return this._wiki;
			}
			set
			{
				if (this._wiki != value)
				{
					this.OnwikiChanging(value);
					this.SendPropertyChanging();
					this._wiki = value;
					this.SendPropertyChanged("wiki");
					this.OnwikiChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_workshop")]
	public partial class mdl_workshop : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _course;

		private string _name;

		private string _description;

		private int _wtype;

		private int _nelements;

		private int _nattachments;

		private byte _phase;

		private byte _format;

		private byte _gradingstrategy;

		private byte _resubmit;

		private byte _agreeassessments;

		private byte _hidegrades;

		private byte _anonymous;

		private byte _includeself;

		private decimal _maxbytes;

		private decimal _submissionstart;

		private decimal _assessmentstart;

		private decimal _submissionend;

		private decimal _assessmentend;

		private decimal _releasegrades;

		private short _grade;

		private short _gradinggrade;

		private int _ntassessments;

		private int _assessmentcomps;

		private int _nsassessments;

		private int _overallocation;

		private decimal _timemodified;

		private int _teacherweight;

		private int _showleaguetable;

		private int _usepassword;

		private string _password;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OncourseChanging(decimal value);
		partial void OncourseChanged();
		partial void OnnameChanging(string value);
		partial void OnnameChanged();
		partial void OndescriptionChanging(string value);
		partial void OndescriptionChanged();
		partial void OnwtypeChanging(int value);
		partial void OnwtypeChanged();
		partial void OnnelementsChanging(int value);
		partial void OnnelementsChanged();
		partial void OnnattachmentsChanging(int value);
		partial void OnnattachmentsChanged();
		partial void OnphaseChanging(byte value);
		partial void OnphaseChanged();
		partial void OnformatChanging(byte value);
		partial void OnformatChanged();
		partial void OngradingstrategyChanging(byte value);
		partial void OngradingstrategyChanged();
		partial void OnresubmitChanging(byte value);
		partial void OnresubmitChanged();
		partial void OnagreeassessmentsChanging(byte value);
		partial void OnagreeassessmentsChanged();
		partial void OnhidegradesChanging(byte value);
		partial void OnhidegradesChanged();
		partial void OnanonymousChanging(byte value);
		partial void OnanonymousChanged();
		partial void OnincludeselfChanging(byte value);
		partial void OnincludeselfChanged();
		partial void OnmaxbytesChanging(decimal value);
		partial void OnmaxbytesChanged();
		partial void OnsubmissionstartChanging(decimal value);
		partial void OnsubmissionstartChanged();
		partial void OnassessmentstartChanging(decimal value);
		partial void OnassessmentstartChanged();
		partial void OnsubmissionendChanging(decimal value);
		partial void OnsubmissionendChanged();
		partial void OnassessmentendChanging(decimal value);
		partial void OnassessmentendChanged();
		partial void OnreleasegradesChanging(decimal value);
		partial void OnreleasegradesChanged();
		partial void OngradeChanging(short value);
		partial void OngradeChanged();
		partial void OngradinggradeChanging(short value);
		partial void OngradinggradeChanged();
		partial void OnntassessmentsChanging(int value);
		partial void OnntassessmentsChanged();
		partial void OnassessmentcompsChanging(int value);
		partial void OnassessmentcompsChanged();
		partial void OnnsassessmentsChanging(int value);
		partial void OnnsassessmentsChanged();
		partial void OnoverallocationChanging(int value);
		partial void OnoverallocationChanged();
		partial void OntimemodifiedChanging(decimal value);
		partial void OntimemodifiedChanged();
		partial void OnteacherweightChanging(int value);
		partial void OnteacherweightChanged();
		partial void OnshowleaguetableChanging(int value);
		partial void OnshowleaguetableChanged();
		partial void OnusepasswordChanging(int value);
		partial void OnusepasswordChanged();
		partial void OnpasswordChanging(string value);
		partial void OnpasswordChanged();
		#endregion

		public mdl_workshop()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_course", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal course
		{
			get
			{
				return this._course;
			}
			set
			{
				if (this._course != value)
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}

		[Column(Storage = "_name", CanBeNull = false, DbType = "varchar(765) NOT NULL")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if (this._name != value)
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}

		[Column(Storage = "_description", CanBeNull = false, DbType = "text NOT NULL")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if (this._description != value)
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}

		[Column(Storage = "_wtype", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int wtype
		{
			get
			{
				return this._wtype;
			}
			set
			{
				if (this._wtype != value)
				{
					this.OnwtypeChanging(value);
					this.SendPropertyChanging();
					this._wtype = value;
					this.SendPropertyChanged("wtype");
					this.OnwtypeChanged();
				}
			}
		}

		[Column(Storage = "_nelements", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int nelements
		{
			get
			{
				return this._nelements;
			}
			set
			{
				if (this._nelements != value)
				{
					this.OnnelementsChanging(value);
					this.SendPropertyChanging();
					this._nelements = value;
					this.SendPropertyChanged("nelements");
					this.OnnelementsChanged();
				}
			}
		}

		[Column(Storage = "_nattachments", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int nattachments
		{
			get
			{
				return this._nattachments;
			}
			set
			{
				if (this._nattachments != value)
				{
					this.OnnattachmentsChanging(value);
					this.SendPropertyChanging();
					this._nattachments = value;
					this.SendPropertyChanged("nattachments");
					this.OnnattachmentsChanged();
				}
			}
		}

		[Column(Storage = "_phase", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte phase
		{
			get
			{
				return this._phase;
			}
			set
			{
				if (this._phase != value)
				{
					this.OnphaseChanging(value);
					this.SendPropertyChanging();
					this._phase = value;
					this.SendPropertyChanged("phase");
					this.OnphaseChanged();
				}
			}
		}

		[Column(Storage = "_format", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte format
		{
			get
			{
				return this._format;
			}
			set
			{
				if (this._format != value)
				{
					this.OnformatChanging(value);
					this.SendPropertyChanging();
					this._format = value;
					this.SendPropertyChanged("format");
					this.OnformatChanged();
				}
			}
		}

		[Column(Storage = "_gradingstrategy", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte gradingstrategy
		{
			get
			{
				return this._gradingstrategy;
			}
			set
			{
				if (this._gradingstrategy != value)
				{
					this.OngradingstrategyChanging(value);
					this.SendPropertyChanging();
					this._gradingstrategy = value;
					this.SendPropertyChanged("gradingstrategy");
					this.OngradingstrategyChanged();
				}
			}
		}

		[Column(Storage = "_resubmit", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte resubmit
		{
			get
			{
				return this._resubmit;
			}
			set
			{
				if (this._resubmit != value)
				{
					this.OnresubmitChanging(value);
					this.SendPropertyChanging();
					this._resubmit = value;
					this.SendPropertyChanged("resubmit");
					this.OnresubmitChanged();
				}
			}
		}

		[Column(Storage = "_agreeassessments", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte agreeassessments
		{
			get
			{
				return this._agreeassessments;
			}
			set
			{
				if (this._agreeassessments != value)
				{
					this.OnagreeassessmentsChanging(value);
					this.SendPropertyChanging();
					this._agreeassessments = value;
					this.SendPropertyChanged("agreeassessments");
					this.OnagreeassessmentsChanged();
				}
			}
		}

		[Column(Storage = "_hidegrades", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte hidegrades
		{
			get
			{
				return this._hidegrades;
			}
			set
			{
				if (this._hidegrades != value)
				{
					this.OnhidegradesChanging(value);
					this.SendPropertyChanging();
					this._hidegrades = value;
					this.SendPropertyChanged("hidegrades");
					this.OnhidegradesChanged();
				}
			}
		}

		[Column(Storage = "_anonymous", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte anonymous
		{
			get
			{
				return this._anonymous;
			}
			set
			{
				if (this._anonymous != value)
				{
					this.OnanonymousChanging(value);
					this.SendPropertyChanging();
					this._anonymous = value;
					this.SendPropertyChanged("anonymous");
					this.OnanonymousChanged();
				}
			}
		}

		[Column(Storage = "_includeself", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte includeself
		{
			get
			{
				return this._includeself;
			}
			set
			{
				if (this._includeself != value)
				{
					this.OnincludeselfChanging(value);
					this.SendPropertyChanging();
					this._includeself = value;
					this.SendPropertyChanged("includeself");
					this.OnincludeselfChanged();
				}
			}
		}

		[Column(Storage = "_maxbytes", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal maxbytes
		{
			get
			{
				return this._maxbytes;
			}
			set
			{
				if (this._maxbytes != value)
				{
					this.OnmaxbytesChanging(value);
					this.SendPropertyChanging();
					this._maxbytes = value;
					this.SendPropertyChanged("maxbytes");
					this.OnmaxbytesChanged();
				}
			}
		}

		[Column(Storage = "_submissionstart", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal submissionstart
		{
			get
			{
				return this._submissionstart;
			}
			set
			{
				if (this._submissionstart != value)
				{
					this.OnsubmissionstartChanging(value);
					this.SendPropertyChanging();
					this._submissionstart = value;
					this.SendPropertyChanged("submissionstart");
					this.OnsubmissionstartChanged();
				}
			}
		}

		[Column(Storage = "_assessmentstart", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal assessmentstart
		{
			get
			{
				return this._assessmentstart;
			}
			set
			{
				if (this._assessmentstart != value)
				{
					this.OnassessmentstartChanging(value);
					this.SendPropertyChanging();
					this._assessmentstart = value;
					this.SendPropertyChanged("assessmentstart");
					this.OnassessmentstartChanged();
				}
			}
		}

		[Column(Storage = "_submissionend", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal submissionend
		{
			get
			{
				return this._submissionend;
			}
			set
			{
				if (this._submissionend != value)
				{
					this.OnsubmissionendChanging(value);
					this.SendPropertyChanging();
					this._submissionend = value;
					this.SendPropertyChanged("submissionend");
					this.OnsubmissionendChanged();
				}
			}
		}

		[Column(Storage = "_assessmentend", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal assessmentend
		{
			get
			{
				return this._assessmentend;
			}
			set
			{
				if (this._assessmentend != value)
				{
					this.OnassessmentendChanging(value);
					this.SendPropertyChanging();
					this._assessmentend = value;
					this.SendPropertyChanged("assessmentend");
					this.OnassessmentendChanged();
				}
			}
		}

		[Column(Storage = "_releasegrades", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal releasegrades
		{
			get
			{
				return this._releasegrades;
			}
			set
			{
				if (this._releasegrades != value)
				{
					this.OnreleasegradesChanging(value);
					this.SendPropertyChanging();
					this._releasegrades = value;
					this.SendPropertyChanged("releasegrades");
					this.OnreleasegradesChanged();
				}
			}
		}

		[Column(Storage = "_grade", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public short grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if (this._grade != value)
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}

		[Column(Storage = "_gradinggrade", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public short gradinggrade
		{
			get
			{
				return this._gradinggrade;
			}
			set
			{
				if (this._gradinggrade != value)
				{
					this.OngradinggradeChanging(value);
					this.SendPropertyChanging();
					this._gradinggrade = value;
					this.SendPropertyChanged("gradinggrade");
					this.OngradinggradeChanged();
				}
			}
		}

		[Column(Storage = "_ntassessments", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int ntassessments
		{
			get
			{
				return this._ntassessments;
			}
			set
			{
				if (this._ntassessments != value)
				{
					this.OnntassessmentsChanging(value);
					this.SendPropertyChanging();
					this._ntassessments = value;
					this.SendPropertyChanged("ntassessments");
					this.OnntassessmentsChanged();
				}
			}
		}

		[Column(Storage = "_assessmentcomps", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int assessmentcomps
		{
			get
			{
				return this._assessmentcomps;
			}
			set
			{
				if (this._assessmentcomps != value)
				{
					this.OnassessmentcompsChanging(value);
					this.SendPropertyChanging();
					this._assessmentcomps = value;
					this.SendPropertyChanged("assessmentcomps");
					this.OnassessmentcompsChanged();
				}
			}
		}

		[Column(Storage = "_nsassessments", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int nsassessments
		{
			get
			{
				return this._nsassessments;
			}
			set
			{
				if (this._nsassessments != value)
				{
					this.OnnsassessmentsChanging(value);
					this.SendPropertyChanging();
					this._nsassessments = value;
					this.SendPropertyChanged("nsassessments");
					this.OnnsassessmentsChanged();
				}
			}
		}

		[Column(Storage = "_overallocation", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int overallocation
		{
			get
			{
				return this._overallocation;
			}
			set
			{
				if (this._overallocation != value)
				{
					this.OnoverallocationChanging(value);
					this.SendPropertyChanging();
					this._overallocation = value;
					this.SendPropertyChanged("overallocation");
					this.OnoverallocationChanged();
				}
			}
		}

		[Column(Storage = "_timemodified", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timemodified
		{
			get
			{
				return this._timemodified;
			}
			set
			{
				if (this._timemodified != value)
				{
					this.OntimemodifiedChanging(value);
					this.SendPropertyChanging();
					this._timemodified = value;
					this.SendPropertyChanged("timemodified");
					this.OntimemodifiedChanged();
				}
			}
		}

		[Column(Storage = "_teacherweight", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int teacherweight
		{
			get
			{
				return this._teacherweight;
			}
			set
			{
				if (this._teacherweight != value)
				{
					this.OnteacherweightChanging(value);
					this.SendPropertyChanging();
					this._teacherweight = value;
					this.SendPropertyChanged("teacherweight");
					this.OnteacherweightChanged();
				}
			}
		}

		[Column(Storage = "_showleaguetable", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int showleaguetable
		{
			get
			{
				return this._showleaguetable;
			}
			set
			{
				if (this._showleaguetable != value)
				{
					this.OnshowleaguetableChanging(value);
					this.SendPropertyChanging();
					this._showleaguetable = value;
					this.SendPropertyChanged("showleaguetable");
					this.OnshowleaguetableChanged();
				}
			}
		}

		[Column(Storage = "_usepassword", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int usepassword
		{
			get
			{
				return this._usepassword;
			}
			set
			{
				if (this._usepassword != value)
				{
					this.OnusepasswordChanging(value);
					this.SendPropertyChanging();
					this._usepassword = value;
					this.SendPropertyChanged("usepassword");
					this.OnusepasswordChanged();
				}
			}
		}

		[Column(Storage = "_password", CanBeNull = false, DbType = "varchar(96) NOT NULL")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if (this._password != value)
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_workshop_assessments")]
	public partial class mdl_workshop_assessment : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _workshopid;

		private decimal _submissionid;

		private decimal _userid;

		private decimal _timecreated;

		private decimal _timegraded;

		private decimal _timeagreed;

		private double _grade;

		private short _gradinggrade;

		private int _teachergraded;

		private int _mailed;

		private int _resubmission;

		private int _donotuse;

		private string _generalcomment;

		private string _teachercomment;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnworkshopidChanging(decimal value);
		partial void OnworkshopidChanged();
		partial void OnsubmissionidChanging(decimal value);
		partial void OnsubmissionidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OntimecreatedChanging(decimal value);
		partial void OntimecreatedChanged();
		partial void OntimegradedChanging(decimal value);
		partial void OntimegradedChanged();
		partial void OntimeagreedChanging(decimal value);
		partial void OntimeagreedChanged();
		partial void OngradeChanging(double value);
		partial void OngradeChanged();
		partial void OngradinggradeChanging(short value);
		partial void OngradinggradeChanged();
		partial void OnteachergradedChanging(int value);
		partial void OnteachergradedChanged();
		partial void OnmailedChanging(int value);
		partial void OnmailedChanged();
		partial void OnresubmissionChanging(int value);
		partial void OnresubmissionChanged();
		partial void OndonotuseChanging(int value);
		partial void OndonotuseChanged();
		partial void OngeneralcommentChanging(string value);
		partial void OngeneralcommentChanged();
		partial void OnteachercommentChanging(string value);
		partial void OnteachercommentChanged();
		#endregion

		public mdl_workshop_assessment()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_workshopid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal workshopid
		{
			get
			{
				return this._workshopid;
			}
			set
			{
				if (this._workshopid != value)
				{
					this.OnworkshopidChanging(value);
					this.SendPropertyChanging();
					this._workshopid = value;
					this.SendPropertyChanged("workshopid");
					this.OnworkshopidChanged();
				}
			}
		}

		[Column(Storage = "_submissionid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal submissionid
		{
			get
			{
				return this._submissionid;
			}
			set
			{
				if (this._submissionid != value)
				{
					this.OnsubmissionidChanging(value);
					this.SendPropertyChanging();
					this._submissionid = value;
					this.SendPropertyChanged("submissionid");
					this.OnsubmissionidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_timegraded", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timegraded
		{
			get
			{
				return this._timegraded;
			}
			set
			{
				if (this._timegraded != value)
				{
					this.OntimegradedChanging(value);
					this.SendPropertyChanging();
					this._timegraded = value;
					this.SendPropertyChanged("timegraded");
					this.OntimegradedChanged();
				}
			}
		}

		[Column(Storage = "_timeagreed", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timeagreed
		{
			get
			{
				return this._timeagreed;
			}
			set
			{
				if (this._timeagreed != value)
				{
					this.OntimeagreedChanging(value);
					this.SendPropertyChanging();
					this._timeagreed = value;
					this.SendPropertyChanged("timeagreed");
					this.OntimeagreedChanged();
				}
			}
		}

		[Column(Storage = "_grade", CanBeNull = false, DbType = "double NOT NULL")]
		public double grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if (this._grade != value)
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}

		[Column(Storage = "_gradinggrade", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public short gradinggrade
		{
			get
			{
				return this._gradinggrade;
			}
			set
			{
				if (this._gradinggrade != value)
				{
					this.OngradinggradeChanging(value);
					this.SendPropertyChanging();
					this._gradinggrade = value;
					this.SendPropertyChanged("gradinggrade");
					this.OngradinggradeChanged();
				}
			}
		}

		[Column(Storage = "_teachergraded", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int teachergraded
		{
			get
			{
				return this._teachergraded;
			}
			set
			{
				if (this._teachergraded != value)
				{
					this.OnteachergradedChanging(value);
					this.SendPropertyChanging();
					this._teachergraded = value;
					this.SendPropertyChanged("teachergraded");
					this.OnteachergradedChanged();
				}
			}
		}

		[Column(Storage = "_mailed", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int mailed
		{
			get
			{
				return this._mailed;
			}
			set
			{
				if (this._mailed != value)
				{
					this.OnmailedChanging(value);
					this.SendPropertyChanging();
					this._mailed = value;
					this.SendPropertyChanged("mailed");
					this.OnmailedChanged();
				}
			}
		}

		[Column(Storage = "_resubmission", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int resubmission
		{
			get
			{
				return this._resubmission;
			}
			set
			{
				if (this._resubmission != value)
				{
					this.OnresubmissionChanging(value);
					this.SendPropertyChanging();
					this._resubmission = value;
					this.SendPropertyChanged("resubmission");
					this.OnresubmissionChanged();
				}
			}
		}

		[Column(Storage = "_donotuse", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int donotuse
		{
			get
			{
				return this._donotuse;
			}
			set
			{
				if (this._donotuse != value)
				{
					this.OndonotuseChanging(value);
					this.SendPropertyChanging();
					this._donotuse = value;
					this.SendPropertyChanged("donotuse");
					this.OndonotuseChanged();
				}
			}
		}

		[Column(Storage = "_generalcomment", CanBeNull = false, DbType = "text NOT NULL")]
		public string generalcomment
		{
			get
			{
				return this._generalcomment;
			}
			set
			{
				if (this._generalcomment != value)
				{
					this.OngeneralcommentChanging(value);
					this.SendPropertyChanging();
					this._generalcomment = value;
					this.SendPropertyChanged("generalcomment");
					this.OngeneralcommentChanged();
				}
			}
		}

		[Column(Storage = "_teachercomment", CanBeNull = false, DbType = "text NOT NULL")]
		public string teachercomment
		{
			get
			{
				return this._teachercomment;
			}
			set
			{
				if (this._teachercomment != value)
				{
					this.OnteachercommentChanging(value);
					this.SendPropertyChanging();
					this._teachercomment = value;
					this.SendPropertyChanged("teachercomment");
					this.OnteachercommentChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_workshop_comments")]
	public partial class mdl_workshop_comment : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _workshopid;

		private decimal _assessmentid;

		private decimal _userid;

		private decimal _timecreated;

		private byte _mailed;

		private string _comments;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnworkshopidChanging(decimal value);
		partial void OnworkshopidChanged();
		partial void OnassessmentidChanging(decimal value);
		partial void OnassessmentidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OntimecreatedChanging(decimal value);
		partial void OntimecreatedChanged();
		partial void OnmailedChanging(byte value);
		partial void OnmailedChanged();
		partial void OncommentsChanging(string value);
		partial void OncommentsChanged();
		#endregion

		public mdl_workshop_comment()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_workshopid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal workshopid
		{
			get
			{
				return this._workshopid;
			}
			set
			{
				if (this._workshopid != value)
				{
					this.OnworkshopidChanging(value);
					this.SendPropertyChanging();
					this._workshopid = value;
					this.SendPropertyChanged("workshopid");
					this.OnworkshopidChanged();
				}
			}
		}

		[Column(Storage = "_assessmentid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal assessmentid
		{
			get
			{
				return this._assessmentid;
			}
			set
			{
				if (this._assessmentid != value)
				{
					this.OnassessmentidChanging(value);
					this.SendPropertyChanging();
					this._assessmentid = value;
					this.SendPropertyChanged("assessmentid");
					this.OnassessmentidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_mailed", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte mailed
		{
			get
			{
				return this._mailed;
			}
			set
			{
				if (this._mailed != value)
				{
					this.OnmailedChanging(value);
					this.SendPropertyChanging();
					this._mailed = value;
					this.SendPropertyChanged("mailed");
					this.OnmailedChanged();
				}
			}
		}

		[Column(Storage = "_comments", CanBeNull = false, DbType = "text NOT NULL")]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if (this._comments != value)
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_workshop_elements")]
	public partial class mdl_workshop_element : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _workshopid;

		private int _elementno;

		private string _description;

		private int _scale;

		private int _maxscore;

		private int _weight;

		private double _stddev;

		private long _totalassessments;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnworkshopidChanging(decimal value);
		partial void OnworkshopidChanged();
		partial void OnelementnoChanging(int value);
		partial void OnelementnoChanged();
		partial void OndescriptionChanging(string value);
		partial void OndescriptionChanged();
		partial void OnscaleChanging(int value);
		partial void OnscaleChanged();
		partial void OnmaxscoreChanging(int value);
		partial void OnmaxscoreChanged();
		partial void OnweightChanging(int value);
		partial void OnweightChanged();
		partial void OnstddevChanging(double value);
		partial void OnstddevChanged();
		partial void OntotalassessmentsChanging(long value);
		partial void OntotalassessmentsChanged();
		#endregion

		public mdl_workshop_element()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_workshopid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal workshopid
		{
			get
			{
				return this._workshopid;
			}
			set
			{
				if (this._workshopid != value)
				{
					this.OnworkshopidChanging(value);
					this.SendPropertyChanging();
					this._workshopid = value;
					this.SendPropertyChanged("workshopid");
					this.OnworkshopidChanged();
				}
			}
		}

		[Column(Storage = "_elementno", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int elementno
		{
			get
			{
				return this._elementno;
			}
			set
			{
				if (this._elementno != value)
				{
					this.OnelementnoChanging(value);
					this.SendPropertyChanging();
					this._elementno = value;
					this.SendPropertyChanged("elementno");
					this.OnelementnoChanged();
				}
			}
		}

		[Column(Storage = "_description", CanBeNull = false, DbType = "text NOT NULL")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if (this._description != value)
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}

		[Column(Storage = "_scale", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int scale
		{
			get
			{
				return this._scale;
			}
			set
			{
				if (this._scale != value)
				{
					this.OnscaleChanging(value);
					this.SendPropertyChanging();
					this._scale = value;
					this.SendPropertyChanged("scale");
					this.OnscaleChanged();
				}
			}
		}

		[Column(Storage = "_maxscore", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int maxscore
		{
			get
			{
				return this._maxscore;
			}
			set
			{
				if (this._maxscore != value)
				{
					this.OnmaxscoreChanging(value);
					this.SendPropertyChanging();
					this._maxscore = value;
					this.SendPropertyChanged("maxscore");
					this.OnmaxscoreChanged();
				}
			}
		}

		[Column(Storage = "_weight", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if (this._weight != value)
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}

		[Column(Storage = "_stddev", CanBeNull = false, DbType = "double NOT NULL")]
		public double stddev
		{
			get
			{
				return this._stddev;
			}
			set
			{
				if (this._stddev != value)
				{
					this.OnstddevChanging(value);
					this.SendPropertyChanging();
					this._stddev = value;
					this.SendPropertyChanged("stddev");
					this.OnstddevChanged();
				}
			}
		}

		[Column(Storage = "_totalassessments", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public long totalassessments
		{
			get
			{
				return this._totalassessments;
			}
			set
			{
				if (this._totalassessments != value)
				{
					this.OntotalassessmentsChanging(value);
					this.SendPropertyChanging();
					this._totalassessments = value;
					this.SendPropertyChanged("totalassessments");
					this.OntotalassessmentsChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_workshop_grades")]
	public partial class mdl_workshop_grade : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _workshopid;

		private decimal _assessmentid;

		private decimal _elementno;

		private string _feedback;

		private short _grade;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnworkshopidChanging(decimal value);
		partial void OnworkshopidChanged();
		partial void OnassessmentidChanging(decimal value);
		partial void OnassessmentidChanged();
		partial void OnelementnoChanging(decimal value);
		partial void OnelementnoChanged();
		partial void OnfeedbackChanging(string value);
		partial void OnfeedbackChanged();
		partial void OngradeChanging(short value);
		partial void OngradeChanged();
		#endregion

		public mdl_workshop_grade()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_workshopid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal workshopid
		{
			get
			{
				return this._workshopid;
			}
			set
			{
				if (this._workshopid != value)
				{
					this.OnworkshopidChanging(value);
					this.SendPropertyChanging();
					this._workshopid = value;
					this.SendPropertyChanged("workshopid");
					this.OnworkshopidChanged();
				}
			}
		}

		[Column(Storage = "_assessmentid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal assessmentid
		{
			get
			{
				return this._assessmentid;
			}
			set
			{
				if (this._assessmentid != value)
				{
					this.OnassessmentidChanging(value);
					this.SendPropertyChanging();
					this._assessmentid = value;
					this.SendPropertyChanged("assessmentid");
					this.OnassessmentidChanged();
				}
			}
		}

		[Column(Storage = "_elementno", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal elementno
		{
			get
			{
				return this._elementno;
			}
			set
			{
				if (this._elementno != value)
				{
					this.OnelementnoChanging(value);
					this.SendPropertyChanging();
					this._elementno = value;
					this.SendPropertyChanged("elementno");
					this.OnelementnoChanged();
				}
			}
		}

		[Column(Storage = "_feedback", CanBeNull = false, DbType = "text NOT NULL")]
		public string feedback
		{
			get
			{
				return this._feedback;
			}
			set
			{
				if (this._feedback != value)
				{
					this.OnfeedbackChanging(value);
					this.SendPropertyChanging();
					this._feedback = value;
					this.SendPropertyChanged("feedback");
					this.OnfeedbackChanged();
				}
			}
		}

		[Column(Storage = "_grade", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public short grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if (this._grade != value)
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_workshop_rubrics")]
	public partial class mdl_workshop_rubric : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _workshopid;

		private decimal _elementno;

		private int _rubricno;

		private string _description;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnworkshopidChanging(decimal value);
		partial void OnworkshopidChanged();
		partial void OnelementnoChanging(decimal value);
		partial void OnelementnoChanged();
		partial void OnrubricnoChanging(int value);
		partial void OnrubricnoChanged();
		partial void OndescriptionChanging(string value);
		partial void OndescriptionChanged();
		#endregion

		public mdl_workshop_rubric()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_workshopid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal workshopid
		{
			get
			{
				return this._workshopid;
			}
			set
			{
				if (this._workshopid != value)
				{
					this.OnworkshopidChanging(value);
					this.SendPropertyChanging();
					this._workshopid = value;
					this.SendPropertyChanged("workshopid");
					this.OnworkshopidChanged();
				}
			}
		}

		[Column(Storage = "_elementno", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal elementno
		{
			get
			{
				return this._elementno;
			}
			set
			{
				if (this._elementno != value)
				{
					this.OnelementnoChanging(value);
					this.SendPropertyChanging();
					this._elementno = value;
					this.SendPropertyChanged("elementno");
					this.OnelementnoChanged();
				}
			}
		}

		[Column(Storage = "_rubricno", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int rubricno
		{
			get
			{
				return this._rubricno;
			}
			set
			{
				if (this._rubricno != value)
				{
					this.OnrubricnoChanging(value);
					this.SendPropertyChanging();
					this._rubricno = value;
					this.SendPropertyChanged("rubricno");
					this.OnrubricnoChanged();
				}
			}
		}

		[Column(Storage = "_description", CanBeNull = false, DbType = "text NOT NULL")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if (this._description != value)
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_workshop_stockcomments")]
	public partial class mdl_workshop_stockcomment : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _workshopid;

		private decimal _elementno;

		private string _comments;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnworkshopidChanging(decimal value);
		partial void OnworkshopidChanged();
		partial void OnelementnoChanging(decimal value);
		partial void OnelementnoChanged();
		partial void OncommentsChanging(string value);
		partial void OncommentsChanged();
		#endregion

		public mdl_workshop_stockcomment()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_workshopid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal workshopid
		{
			get
			{
				return this._workshopid;
			}
			set
			{
				if (this._workshopid != value)
				{
					this.OnworkshopidChanging(value);
					this.SendPropertyChanging();
					this._workshopid = value;
					this.SendPropertyChanged("workshopid");
					this.OnworkshopidChanged();
				}
			}
		}

		[Column(Storage = "_elementno", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal elementno
		{
			get
			{
				return this._elementno;
			}
			set
			{
				if (this._elementno != value)
				{
					this.OnelementnoChanging(value);
					this.SendPropertyChanging();
					this._elementno = value;
					this.SendPropertyChanged("elementno");
					this.OnelementnoChanged();
				}
			}
		}

		[Column(Storage = "_comments", CanBeNull = false, DbType = "text NOT NULL")]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if (this._comments != value)
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"moodle59.mdl_workshop_submissions")]
	public partial class mdl_workshop_submission : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private decimal _id;

		private decimal _workshopid;

		private decimal _userid;

		private string _title;

		private decimal _timecreated;

		private byte _mailed;

		private string _description;

		private int _gradinggrade;

		private int _finalgrade;

		private int _late;

		private decimal _nassessments;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(decimal value);
		partial void OnidChanged();
		partial void OnworkshopidChanging(decimal value);
		partial void OnworkshopidChanged();
		partial void OnuseridChanging(decimal value);
		partial void OnuseridChanged();
		partial void OntitleChanging(string value);
		partial void OntitleChanged();
		partial void OntimecreatedChanging(decimal value);
		partial void OntimecreatedChanged();
		partial void OnmailedChanging(byte value);
		partial void OnmailedChanged();
		partial void OndescriptionChanging(string value);
		partial void OndescriptionChanged();
		partial void OngradinggradeChanging(int value);
		partial void OngradinggradeChanged();
		partial void OnfinalgradeChanging(int value);
		partial void OnfinalgradeChanged();
		partial void OnlateChanging(int value);
		partial void OnlateChanged();
		partial void OnnassessmentsChanging(decimal value);
		partial void OnnassessmentsChanged();
		#endregion

		public mdl_workshop_submission()
		{
			OnCreated();
		}

		[Column(Storage = "_id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "bigint(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if (this._id != value)
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[Column(Storage = "_workshopid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal workshopid
		{
			get
			{
				return this._workshopid;
			}
			set
			{
				if (this._workshopid != value)
				{
					this.OnworkshopidChanging(value);
					this.SendPropertyChanging();
					this._workshopid = value;
					this.SendPropertyChanged("workshopid");
					this.OnworkshopidChanged();
				}
			}
		}

		[Column(Storage = "_userid", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if (this._userid != value)
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}

		[Column(Storage = "_title", CanBeNull = false, DbType = "varchar(300) NOT NULL")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if (this._title != value)
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}

		[Column(Storage = "_timecreated", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal timecreated
		{
			get
			{
				return this._timecreated;
			}
			set
			{
				if (this._timecreated != value)
				{
					this.OntimecreatedChanging(value);
					this.SendPropertyChanging();
					this._timecreated = value;
					this.SendPropertyChanged("timecreated");
					this.OntimecreatedChanged();
				}
			}
		}

		[Column(Storage = "_mailed", CanBeNull = false, DbType = "tinyint(2) NOT NULL")]
		public byte mailed
		{
			get
			{
				return this._mailed;
			}
			set
			{
				if (this._mailed != value)
				{
					this.OnmailedChanging(value);
					this.SendPropertyChanging();
					this._mailed = value;
					this.SendPropertyChanged("mailed");
					this.OnmailedChanged();
				}
			}
		}

		[Column(Storage = "_description", CanBeNull = false, DbType = "text NOT NULL")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if (this._description != value)
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}

		[Column(Storage = "_gradinggrade", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int gradinggrade
		{
			get
			{
				return this._gradinggrade;
			}
			set
			{
				if (this._gradinggrade != value)
				{
					this.OngradinggradeChanging(value);
					this.SendPropertyChanging();
					this._gradinggrade = value;
					this.SendPropertyChanged("gradinggrade");
					this.OngradinggradeChanged();
				}
			}
		}

		[Column(Storage = "_finalgrade", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int finalgrade
		{
			get
			{
				return this._finalgrade;
			}
			set
			{
				if (this._finalgrade != value)
				{
					this.OnfinalgradeChanging(value);
					this.SendPropertyChanging();
					this._finalgrade = value;
					this.SendPropertyChanged("finalgrade");
					this.OnfinalgradeChanged();
				}
			}
		}

		[Column(Storage = "_late", CanBeNull = false, DbType = "smallint(3) NOT NULL")]
		public int late
		{
			get
			{
				return this._late;
			}
			set
			{
				if (this._late != value)
				{
					this.OnlateChanging(value);
					this.SendPropertyChanging();
					this._late = value;
					this.SendPropertyChanged("late");
					this.OnlateChanged();
				}
			}
		}

		[Column(Storage = "_nassessments", CanBeNull = false, DbType = "bigint(10) NOT NULL")]
		public decimal nassessments
		{
			get
			{
				return this._nassessments;
			}
			set
			{
				if (this._nassessments != value)
				{
					this.OnnassessmentsChanging(value);
					this.SendPropertyChanging();
					this._nassessments = value;
					this.SendPropertyChanged("nassessments");
					this.OnnassessmentsChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	}
