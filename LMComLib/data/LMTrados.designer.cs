#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trados
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LMTrados")]
	public partial class TradosDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLock(Lock instance);
    partial void UpdateLock(Lock instance);
    partial void DeleteLock(Lock instance);
    partial void InsertSentence(Sentence instance);
    partial void UpdateSentence(Sentence instance);
    partial void DeleteSentence(Sentence instance);
    partial void InsertLookup(Lookup instance);
    partial void UpdateLookup(Lookup instance);
    partial void DeleteLookup(Lookup instance);
    partial void InsertPage(Page instance);
    partial void UpdatePage(Page instance);
    partial void DeletePage(Page instance);
    #endregion
		
		public TradosDataContext() : 
				base(global::LMComLib.Properties.Settings.Default.LMTradosConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TradosDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TradosDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TradosDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TradosDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Lock> Locks
		{
			get
			{
				return this.GetTable<Lock>();
			}
		}
		
		public System.Data.Linq.Table<Sentence> Sentences
		{
			get
			{
				return this.GetTable<Sentence>();
			}
		}
		
		public System.Data.Linq.Table<Lookup> Lookups
		{
			get
			{
				return this.GetTable<Lookup>();
			}
		}
		
		public System.Data.Linq.Table<Page> Pages
		{
			get
			{
				return this.GetTable<Page>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lock")]
	public partial class Lock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Created;
		
		private short _Lang;
		
		private short _PageGroup;
		
		private bool _Locked;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnLangChanging(short value);
    partial void OnLangChanged();
    partial void OnPageGroupChanging(short value);
    partial void OnPageGroupChanged();
    partial void OnLockedChanging(bool value);
    partial void OnLockedChanged();
    #endregion
		
		public Lock()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lang", DbType="SmallInt NOT NULL")]
		public short Lang
		{
			get
			{
				return this._Lang;
			}
			set
			{
				if ((this._Lang != value))
				{
					this.OnLangChanging(value);
					this.SendPropertyChanging();
					this._Lang = value;
					this.SendPropertyChanged("Lang");
					this.OnLangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageGroup", DbType="SmallInt NOT NULL")]
		public short PageGroup
		{
			get
			{
				return this._PageGroup;
			}
			set
			{
				if ((this._PageGroup != value))
				{
					this.OnPageGroupChanging(value);
					this.SendPropertyChanging();
					this._PageGroup = value;
					this.SendPropertyChanged("PageGroup");
					this.OnPageGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locked", DbType="Bit NOT NULL")]
		public bool Locked
		{
			get
			{
				return this._Locked;
			}
			set
			{
				if ((this._Locked != value))
				{
					this.OnLockedChanging(value);
					this.SendPropertyChanging();
					this._Locked = value;
					this.SendPropertyChanged("Locked");
					this.OnLockedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sentence")]
	public partial class Sentence : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _PageId;
		
		private short _SrcLang;
		
		private string _SrcText;
		
		private int _SrcHash;
		
		private int _SrcLen;
		
		private short _TransLang;
		
		private string _TransText;
		
		private int _TransHash;
		
		private int _TransLen;
		
		private int _Hash;
		
		private EntityRef<Page> _Page;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPageIdChanging(int value);
    partial void OnPageIdChanged();
    partial void OnSrcLangChanging(short value);
    partial void OnSrcLangChanged();
    partial void OnSrcTextChanging(string value);
    partial void OnSrcTextChanged();
    partial void OnSrcHashChanging(int value);
    partial void OnSrcHashChanged();
    partial void OnSrcLenChanging(int value);
    partial void OnSrcLenChanged();
    partial void OnTransLangChanging(short value);
    partial void OnTransLangChanged();
    partial void OnTransTextChanging(string value);
    partial void OnTransTextChanged();
    partial void OnTransHashChanging(int value);
    partial void OnTransHashChanged();
    partial void OnTransLenChanging(int value);
    partial void OnTransLenChanged();
    partial void OnHashChanging(int value);
    partial void OnHashChanged();
    #endregion
		
		public Sentence()
		{
			this._Page = default(EntityRef<Page>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", DbType="Int NOT NULL")]
		public int PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					if (this._Page.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrcLang", DbType="SmallInt NOT NULL")]
		public short SrcLang
		{
			get
			{
				return this._SrcLang;
			}
			set
			{
				if ((this._SrcLang != value))
				{
					this.OnSrcLangChanging(value);
					this.SendPropertyChanging();
					this._SrcLang = value;
					this.SendPropertyChanged("SrcLang");
					this.OnSrcLangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrcText", DbType="NVarChar(MAX)")]
		public string SrcText
		{
			get
			{
				return this._SrcText;
			}
			set
			{
				if ((this._SrcText != value))
				{
					this.OnSrcTextChanging(value);
					this.SendPropertyChanging();
					this._SrcText = value;
					this.SendPropertyChanged("SrcText");
					this.OnSrcTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrcHash", DbType="Int NOT NULL")]
		public int SrcHash
		{
			get
			{
				return this._SrcHash;
			}
			set
			{
				if ((this._SrcHash != value))
				{
					this.OnSrcHashChanging(value);
					this.SendPropertyChanging();
					this._SrcHash = value;
					this.SendPropertyChanged("SrcHash");
					this.OnSrcHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrcLen", DbType="Int NOT NULL")]
		public int SrcLen
		{
			get
			{
				return this._SrcLen;
			}
			set
			{
				if ((this._SrcLen != value))
				{
					this.OnSrcLenChanging(value);
					this.SendPropertyChanging();
					this._SrcLen = value;
					this.SendPropertyChanged("SrcLen");
					this.OnSrcLenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransLang", DbType="SmallInt NOT NULL")]
		public short TransLang
		{
			get
			{
				return this._TransLang;
			}
			set
			{
				if ((this._TransLang != value))
				{
					this.OnTransLangChanging(value);
					this.SendPropertyChanging();
					this._TransLang = value;
					this.SendPropertyChanged("TransLang");
					this.OnTransLangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransText", DbType="NVarChar(MAX)")]
		public string TransText
		{
			get
			{
				return this._TransText;
			}
			set
			{
				if ((this._TransText != value))
				{
					this.OnTransTextChanging(value);
					this.SendPropertyChanging();
					this._TransText = value;
					this.SendPropertyChanged("TransText");
					this.OnTransTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransHash", DbType="Int NOT NULL")]
		public int TransHash
		{
			get
			{
				return this._TransHash;
			}
			set
			{
				if ((this._TransHash != value))
				{
					this.OnTransHashChanging(value);
					this.SendPropertyChanging();
					this._TransHash = value;
					this.SendPropertyChanged("TransHash");
					this.OnTransHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransLen", DbType="Int NOT NULL")]
		public int TransLen
		{
			get
			{
				return this._TransLen;
			}
			set
			{
				if ((this._TransLen != value))
				{
					this.OnTransLenChanging(value);
					this.SendPropertyChanging();
					this._TransLen = value;
					this.SendPropertyChanged("TransLen");
					this.OnTransLenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hash", DbType="Int NOT NULL")]
		public int Hash
		{
			get
			{
				return this._Hash;
			}
			set
			{
				if ((this._Hash != value))
				{
					this.OnHashChanging(value);
					this.SendPropertyChanging();
					this._Hash = value;
					this.SendPropertyChanged("Hash");
					this.OnHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_Sentence", Storage="_Page", ThisKey="PageId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Page Page
		{
			get
			{
				return this._Page.Entity;
			}
			set
			{
				Page previousValue = this._Page.Entity;
				if (((previousValue != value) 
							|| (this._Page.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Page.Entity = null;
						previousValue.Sentences.Remove(this);
					}
					this._Page.Entity = value;
					if ((value != null))
					{
						value.Sentences.Add(this);
						this._PageId = value.Id;
					}
					else
					{
						this._PageId = default(int);
					}
					this.SendPropertyChanged("Page");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lookup")]
	public partial class Lookup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private short _SrcLang;
		
		private string _SrcText;
		
		private int _SrcHash;
		
		private int _SrcLen;
		
		private short _TransLang;
		
		private string _TransText;
		
		private int _TransHash;
		
		private int _TransLen;
		
		private int _Hash;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSrcLangChanging(short value);
    partial void OnSrcLangChanged();
    partial void OnSrcTextChanging(string value);
    partial void OnSrcTextChanged();
    partial void OnSrcHashChanging(int value);
    partial void OnSrcHashChanged();
    partial void OnSrcLenChanging(int value);
    partial void OnSrcLenChanged();
    partial void OnTransLangChanging(short value);
    partial void OnTransLangChanged();
    partial void OnTransTextChanging(string value);
    partial void OnTransTextChanged();
    partial void OnTransHashChanging(int value);
    partial void OnTransHashChanged();
    partial void OnTransLenChanging(int value);
    partial void OnTransLenChanged();
    partial void OnHashChanging(int value);
    partial void OnHashChanged();
    #endregion
		
		public Lookup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrcLang", DbType="SmallInt NOT NULL")]
		public short SrcLang
		{
			get
			{
				return this._SrcLang;
			}
			set
			{
				if ((this._SrcLang != value))
				{
					this.OnSrcLangChanging(value);
					this.SendPropertyChanging();
					this._SrcLang = value;
					this.SendPropertyChanged("SrcLang");
					this.OnSrcLangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrcText", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SrcText
		{
			get
			{
				return this._SrcText;
			}
			set
			{
				if ((this._SrcText != value))
				{
					this.OnSrcTextChanging(value);
					this.SendPropertyChanging();
					this._SrcText = value;
					this.SendPropertyChanged("SrcText");
					this.OnSrcTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrcHash", DbType="Int NOT NULL")]
		public int SrcHash
		{
			get
			{
				return this._SrcHash;
			}
			set
			{
				if ((this._SrcHash != value))
				{
					this.OnSrcHashChanging(value);
					this.SendPropertyChanging();
					this._SrcHash = value;
					this.SendPropertyChanged("SrcHash");
					this.OnSrcHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrcLen", DbType="Int NOT NULL")]
		public int SrcLen
		{
			get
			{
				return this._SrcLen;
			}
			set
			{
				if ((this._SrcLen != value))
				{
					this.OnSrcLenChanging(value);
					this.SendPropertyChanging();
					this._SrcLen = value;
					this.SendPropertyChanged("SrcLen");
					this.OnSrcLenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransLang", DbType="SmallInt NOT NULL")]
		public short TransLang
		{
			get
			{
				return this._TransLang;
			}
			set
			{
				if ((this._TransLang != value))
				{
					this.OnTransLangChanging(value);
					this.SendPropertyChanging();
					this._TransLang = value;
					this.SendPropertyChanged("TransLang");
					this.OnTransLangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransText", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TransText
		{
			get
			{
				return this._TransText;
			}
			set
			{
				if ((this._TransText != value))
				{
					this.OnTransTextChanging(value);
					this.SendPropertyChanging();
					this._TransText = value;
					this.SendPropertyChanged("TransText");
					this.OnTransTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransHash", DbType="Int NOT NULL")]
		public int TransHash
		{
			get
			{
				return this._TransHash;
			}
			set
			{
				if ((this._TransHash != value))
				{
					this.OnTransHashChanging(value);
					this.SendPropertyChanging();
					this._TransHash = value;
					this.SendPropertyChanged("TransHash");
					this.OnTransHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransLen", DbType="Int NOT NULL")]
		public int TransLen
		{
			get
			{
				return this._TransLen;
			}
			set
			{
				if ((this._TransLen != value))
				{
					this.OnTransLenChanging(value);
					this.SendPropertyChanging();
					this._TransLen = value;
					this.SendPropertyChanged("TransLen");
					this.OnTransLenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hash", DbType="Int NOT NULL")]
		public int Hash
		{
			get
			{
				return this._Hash;
			}
			set
			{
				if ((this._Hash != value))
				{
					this.OnHashChanging(value);
					this.SendPropertyChanging();
					this._Hash = value;
					this.SendPropertyChanged("Hash");
					this.OnHashChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pages")]
	public partial class Page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FileName;
		
		private short _PageGroup;
		
		private string _SeeUrl;
		
		private string _Langs;
		
		private EntitySet<Sentence> _Sentences;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnPageGroupChanging(short value);
    partial void OnPageGroupChanged();
    partial void OnSeeUrlChanging(string value);
    partial void OnSeeUrlChanged();
    partial void OnLangsChanging(string value);
    partial void OnLangsChanged();
    #endregion
		
		public Page()
		{
			this._Sentences = new EntitySet<Sentence>(new Action<Sentence>(this.attach_Sentences), new Action<Sentence>(this.detach_Sentences));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageGroup", DbType="SmallInt NOT NULL")]
		public short PageGroup
		{
			get
			{
				return this._PageGroup;
			}
			set
			{
				if ((this._PageGroup != value))
				{
					this.OnPageGroupChanging(value);
					this.SendPropertyChanging();
					this._PageGroup = value;
					this.SendPropertyChanged("PageGroup");
					this.OnPageGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeeUrl", DbType="VarChar(256)")]
		public string SeeUrl
		{
			get
			{
				return this._SeeUrl;
			}
			set
			{
				if ((this._SeeUrl != value))
				{
					this.OnSeeUrlChanging(value);
					this.SendPropertyChanging();
					this._SeeUrl = value;
					this.SendPropertyChanged("SeeUrl");
					this.OnSeeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Langs", DbType="VarChar(256)")]
		public string Langs
		{
			get
			{
				return this._Langs;
			}
			set
			{
				if ((this._Langs != value))
				{
					this.OnLangsChanging(value);
					this.SendPropertyChanging();
					this._Langs = value;
					this.SendPropertyChanged("Langs");
					this.OnLangsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_Sentence", Storage="_Sentences", ThisKey="Id", OtherKey="PageId")]
		public EntitySet<Sentence> Sentences
		{
			get
			{
				return this._Sentences;
			}
			set
			{
				this._Sentences.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sentences(Sentence entity)
		{
			this.SendPropertyChanging();
			entity.Page = this;
		}
		
		private void detach_Sentences(Sentence entity)
		{
			this.SendPropertyChanging();
			entity.Page = null;
		}
	}
}
#pragma warning restore 1591
