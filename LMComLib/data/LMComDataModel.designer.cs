#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LMComData2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="lmcomdata2")]
	public partial class LMComDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertComm_Order(Comm_Order instance);
    partial void UpdateComm_Order(Comm_Order instance);
    partial void DeleteComm_Order(Comm_Order instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertCourseData(CourseData instance);
    partial void UpdateCourseData(CourseData instance);
    partial void DeleteCourseData(CourseData instance);
    partial void InsertCourseUser(CourseUser instance);
    partial void UpdateCourseUser(CourseUser instance);
    partial void DeleteCourseUser(CourseUser instance);
    partial void InsertDisc_Prototype(Disc_Prototype instance);
    partial void UpdateDisc_Prototype(Disc_Prototype instance);
    partial void DeleteDisc_Prototype(Disc_Prototype instance);
    partial void InsertDiscount(Discount instance);
    partial void UpdateDiscount(Discount instance);
    partial void DeleteDiscount(Discount instance);
    partial void InsertEventsLog(EventsLog instance);
    partial void UpdateEventsLog(EventsLog instance);
    partial void DeleteEventsLog(EventsLog instance);
    partial void InsertFeedback(Feedback instance);
    partial void UpdateFeedback(Feedback instance);
    partial void DeleteFeedback(Feedback instance);
    partial void InsertLicenceOffline(LicenceOffline instance);
    partial void UpdateLicenceOffline(LicenceOffline instance);
    partial void DeleteLicenceOffline(LicenceOffline instance);
    partial void InsertLicencor(Licencor instance);
    partial void UpdateLicencor(Licencor instance);
    partial void DeleteLicencor(Licencor instance);
    partial void InsertLicOfflineLog(LicOfflineLog instance);
    partial void UpdateLicOfflineLog(LicOfflineLog instance);
    partial void DeleteLicOfflineLog(LicOfflineLog instance);
    partial void InsertMBank(MBank instance);
    partial void UpdateMBank(MBank instance);
    partial void DeleteMBank(MBank instance);
    partial void InsertOrderDiscount(OrderDiscount instance);
    partial void UpdateOrderDiscount(OrderDiscount instance);
    partial void DeleteOrderDiscount(OrderDiscount instance);
    partial void InsertProductInfo(ProductInfo instance);
    partial void UpdateProductInfo(ProductInfo instance);
    partial void DeleteProductInfo(ProductInfo instance);
    partial void InsertTask(Task instance);
    partial void UpdateTask(Task instance);
    partial void DeleteTask(Task instance);
    partial void InsertTempUserId(TempUserId instance);
    partial void UpdateTempUserId(TempUserId instance);
    partial void DeleteTempUserId(TempUserId instance);
    partial void InsertUniqueId(UniqueId instance);
    partial void UpdateUniqueId(UniqueId instance);
    partial void DeleteUniqueId(UniqueId instance);
    #endregion
		
		public LMComDataContext() : 
				base(global::LMComLib.Properties.Settings.Default.lmcomdata2ConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public LMComDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LMComDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LMComDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LMComDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Comm_Order> Comm_Orders
		{
			get
			{
				return this.GetTable<Comm_Order>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<CourseData> CourseDatas
		{
			get
			{
				return this.GetTable<CourseData>();
			}
		}
		
		public System.Data.Linq.Table<CourseUser> CourseUsers
		{
			get
			{
				return this.GetTable<CourseUser>();
			}
		}
		
		public System.Data.Linq.Table<Disc_Prototype> Disc_Prototypes
		{
			get
			{
				return this.GetTable<Disc_Prototype>();
			}
		}
		
		public System.Data.Linq.Table<Discount> Discounts
		{
			get
			{
				return this.GetTable<Discount>();
			}
		}
		
		public System.Data.Linq.Table<EventsLog> EventsLogs
		{
			get
			{
				return this.GetTable<EventsLog>();
			}
		}
		
		public System.Data.Linq.Table<Feedback> Feedbacks
		{
			get
			{
				return this.GetTable<Feedback>();
			}
		}
		
		public System.Data.Linq.Table<LicenceOffline> LicenceOfflines
		{
			get
			{
				return this.GetTable<LicenceOffline>();
			}
		}
		
		public System.Data.Linq.Table<Licencor> Licencors
		{
			get
			{
				return this.GetTable<Licencor>();
			}
		}
		
		public System.Data.Linq.Table<LicOfflineLog> LicOfflineLogs
		{
			get
			{
				return this.GetTable<LicOfflineLog>();
			}
		}
		
		public System.Data.Linq.Table<MBank> MBanks
		{
			get
			{
				return this.GetTable<MBank>();
			}
		}
		
		public System.Data.Linq.Table<MoodleEnroll> MoodleEnrolls
		{
			get
			{
				return this.GetTable<MoodleEnroll>();
			}
		}
		
		public System.Data.Linq.Table<OrderDiscount> OrderDiscounts
		{
			get
			{
				return this.GetTable<OrderDiscount>();
			}
		}
		
		public System.Data.Linq.Table<ProductInfo> ProductInfos
		{
			get
			{
				return this.GetTable<ProductInfo>();
			}
		}
		
		public System.Data.Linq.Table<Task> Tasks
		{
			get
			{
				return this.GetTable<Task>();
			}
		}
		
		public System.Data.Linq.Table<TempUserId> TempUserIds
		{
			get
			{
				return this.GetTable<TempUserId>();
			}
		}
		
		public System.Data.Linq.Table<UniqueId> UniqueIds
		{
			get
			{
				return this.GetTable<UniqueId>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comm_Order")]
	public partial class Comm_Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private long _UserId;
		
		private System.DateTime _Created;
		
		private short _Site;
		
		private short _Subsite;
		
		private int _SupplierId;
		
		private short _ShipMethod;
		
		private short _BillMethod;
		
		private double _Price;
		
		private double _Provision;
		
		private short _Status;
		
		private System.DateTime _StatusDate;
		
		private short _ContentType;
		
		private string _Data;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private System.Nullable<int> _ProformaId;
		
		private System.Data.Linq.Binary _Proforma;
		
		private string _ProformaNew;
		
		private System.Nullable<int> _InvoiceId;
		
		private System.Data.Linq.Binary _Invoice;
		
		private string _InvoiceNew;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.Nullable<int> _AdviceId;
		
		private System.Data.Linq.Binary _Advice;
		
		private string _AdviceNew;
		
		private string _Ico;
		
		private string _PayPalTransaction;
		
		private short _Lang;
		
		private EntitySet<Licencor> _Licencors;
		
		private EntitySet<OrderDiscount> _OrderDiscounts;
		
		private EntitySet<ProductInfo> _ProductInfos;
		
		private EntitySet<Task> _Tasks;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnSiteChanging(short value);
    partial void OnSiteChanged();
    partial void OnSubsiteChanging(short value);
    partial void OnSubsiteChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnShipMethodChanging(short value);
    partial void OnShipMethodChanged();
    partial void OnBillMethodChanging(short value);
    partial void OnBillMethodChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnProvisionChanging(double value);
    partial void OnProvisionChanged();
    partial void OnStatusChanging(short value);
    partial void OnStatusChanged();
    partial void OnStatusDateChanging(System.DateTime value);
    partial void OnStatusDateChanged();
    partial void OnContentTypeChanging(short value);
    partial void OnContentTypeChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentDateChanged();
    partial void OnProformaIdChanging(System.Nullable<int> value);
    partial void OnProformaIdChanged();
    partial void OnProformaChanging(System.Data.Linq.Binary value);
    partial void OnProformaChanged();
    partial void OnProformaNewChanging(string value);
    partial void OnProformaNewChanged();
    partial void OnInvoiceIdChanging(System.Nullable<int> value);
    partial void OnInvoiceIdChanged();
    partial void OnInvoiceChanging(System.Data.Linq.Binary value);
    partial void OnInvoiceChanged();
    partial void OnInvoiceNewChanging(string value);
    partial void OnInvoiceNewChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnAdviceIdChanging(System.Nullable<int> value);
    partial void OnAdviceIdChanged();
    partial void OnAdviceChanging(System.Data.Linq.Binary value);
    partial void OnAdviceChanged();
    partial void OnAdviceNewChanging(string value);
    partial void OnAdviceNewChanged();
    partial void OnIcoChanging(string value);
    partial void OnIcoChanged();
    partial void OnPayPalTransactionChanging(string value);
    partial void OnPayPalTransactionChanged();
    partial void OnLangChanging(short value);
    partial void OnLangChanged();
    #endregion
		
		public Comm_Order()
		{
			this._Licencors = new EntitySet<Licencor>(new Action<Licencor>(this.attach_Licencors), new Action<Licencor>(this.detach_Licencors));
			this._OrderDiscounts = new EntitySet<OrderDiscount>(new Action<OrderDiscount>(this.attach_OrderDiscounts), new Action<OrderDiscount>(this.detach_OrderDiscounts));
			this._ProductInfos = new EntitySet<ProductInfo>(new Action<ProductInfo>(this.attach_ProductInfos), new Action<ProductInfo>(this.detach_ProductInfos));
			this._Tasks = new EntitySet<Task>(new Action<Task>(this.attach_Tasks), new Action<Task>(this.detach_Tasks));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site", DbType="SmallInt NOT NULL")]
		public short Site
		{
			get
			{
				return this._Site;
			}
			set
			{
				if ((this._Site != value))
				{
					this.OnSiteChanging(value);
					this.SendPropertyChanging();
					this._Site = value;
					this.SendPropertyChanged("Site");
					this.OnSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subsite", DbType="SmallInt NOT NULL")]
		public short Subsite
		{
			get
			{
				return this._Subsite;
			}
			set
			{
				if ((this._Subsite != value))
				{
					this.OnSubsiteChanging(value);
					this.SendPropertyChanging();
					this._Subsite = value;
					this.SendPropertyChanged("Subsite");
					this.OnSubsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipMethod", DbType="SmallInt NOT NULL")]
		public short ShipMethod
		{
			get
			{
				return this._ShipMethod;
			}
			set
			{
				if ((this._ShipMethod != value))
				{
					this.OnShipMethodChanging(value);
					this.SendPropertyChanging();
					this._ShipMethod = value;
					this.SendPropertyChanged("ShipMethod");
					this.OnShipMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillMethod", DbType="SmallInt NOT NULL")]
		public short BillMethod
		{
			get
			{
				return this._BillMethod;
			}
			set
			{
				if ((this._BillMethod != value))
				{
					this.OnBillMethodChanging(value);
					this.SendPropertyChanging();
					this._BillMethod = value;
					this.SendPropertyChanged("BillMethod");
					this.OnBillMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provision", DbType="Float NOT NULL")]
		public double Provision
		{
			get
			{
				return this._Provision;
			}
			set
			{
				if ((this._Provision != value))
				{
					this.OnProvisionChanging(value);
					this.SendPropertyChanging();
					this._Provision = value;
					this.SendPropertyChanged("Provision");
					this.OnProvisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusDate", DbType="DateTime NOT NULL")]
		public System.DateTime StatusDate
		{
			get
			{
				return this._StatusDate;
			}
			set
			{
				if ((this._StatusDate != value))
				{
					this.OnStatusDateChanging(value);
					this.SendPropertyChanging();
					this._StatusDate = value;
					this.SendPropertyChanged("StatusDate");
					this.OnStatusDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentType", DbType="SmallInt NOT NULL")]
		public short ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this.OnContentTypeChanging(value);
					this.SendPropertyChanging();
					this._ContentType = value;
					this.SendPropertyChanged("ContentType");
					this.OnContentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProformaId", DbType="Int")]
		public System.Nullable<int> ProformaId
		{
			get
			{
				return this._ProformaId;
			}
			set
			{
				if ((this._ProformaId != value))
				{
					this.OnProformaIdChanging(value);
					this.SendPropertyChanging();
					this._ProformaId = value;
					this.SendPropertyChanged("ProformaId");
					this.OnProformaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Proforma", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Proforma
		{
			get
			{
				return this._Proforma;
			}
			set
			{
				if ((this._Proforma != value))
				{
					this.OnProformaChanging(value);
					this.SendPropertyChanging();
					this._Proforma = value;
					this.SendPropertyChanged("Proforma");
					this.OnProformaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProformaNew", DbType="NVarChar(MAX)")]
		public string ProformaNew
		{
			get
			{
				return this._ProformaNew;
			}
			set
			{
				if ((this._ProformaNew != value))
				{
					this.OnProformaNewChanging(value);
					this.SendPropertyChanging();
					this._ProformaNew = value;
					this.SendPropertyChanged("ProformaNew");
					this.OnProformaNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="Int")]
		public System.Nullable<int> InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				if ((this._Invoice != value))
				{
					this.OnInvoiceChanging(value);
					this.SendPropertyChanging();
					this._Invoice = value;
					this.SendPropertyChanged("Invoice");
					this.OnInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNew", DbType="NVarChar(MAX)")]
		public string InvoiceNew
		{
			get
			{
				return this._InvoiceNew;
			}
			set
			{
				if ((this._InvoiceNew != value))
				{
					this.OnInvoiceNewChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNew = value;
					this.SendPropertyChanged("InvoiceNew");
					this.OnInvoiceNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdviceId", DbType="Int")]
		public System.Nullable<int> AdviceId
		{
			get
			{
				return this._AdviceId;
			}
			set
			{
				if ((this._AdviceId != value))
				{
					this.OnAdviceIdChanging(value);
					this.SendPropertyChanging();
					this._AdviceId = value;
					this.SendPropertyChanged("AdviceId");
					this.OnAdviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Advice", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Advice
		{
			get
			{
				return this._Advice;
			}
			set
			{
				if ((this._Advice != value))
				{
					this.OnAdviceChanging(value);
					this.SendPropertyChanging();
					this._Advice = value;
					this.SendPropertyChanged("Advice");
					this.OnAdviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdviceNew", DbType="NVarChar(MAX)")]
		public string AdviceNew
		{
			get
			{
				return this._AdviceNew;
			}
			set
			{
				if ((this._AdviceNew != value))
				{
					this.OnAdviceNewChanging(value);
					this.SendPropertyChanging();
					this._AdviceNew = value;
					this.SendPropertyChanged("AdviceNew");
					this.OnAdviceNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ico", DbType="Char(10)")]
		public string Ico
		{
			get
			{
				return this._Ico;
			}
			set
			{
				if ((this._Ico != value))
				{
					this.OnIcoChanging(value);
					this.SendPropertyChanging();
					this._Ico = value;
					this.SendPropertyChanged("Ico");
					this.OnIcoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayPalTransaction", DbType="Char(18)")]
		public string PayPalTransaction
		{
			get
			{
				return this._PayPalTransaction;
			}
			set
			{
				if ((this._PayPalTransaction != value))
				{
					this.OnPayPalTransactionChanging(value);
					this.SendPropertyChanging();
					this._PayPalTransaction = value;
					this.SendPropertyChanged("PayPalTransaction");
					this.OnPayPalTransactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lang", DbType="SmallInt NOT NULL")]
		public short Lang
		{
			get
			{
				return this._Lang;
			}
			set
			{
				if ((this._Lang != value))
				{
					this.OnLangChanging(value);
					this.SendPropertyChanging();
					this._Lang = value;
					this.SendPropertyChanged("Lang");
					this.OnLangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comm_Order_Licencor", Storage="_Licencors", ThisKey="Id", OtherKey="OrderId")]
		public EntitySet<Licencor> Licencors
		{
			get
			{
				return this._Licencors;
			}
			set
			{
				this._Licencors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comm_Order_OrderDiscount", Storage="_OrderDiscounts", ThisKey="Id", OtherKey="IdOrder")]
		public EntitySet<OrderDiscount> OrderDiscounts
		{
			get
			{
				return this._OrderDiscounts;
			}
			set
			{
				this._OrderDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comm_Order_ProductInfo", Storage="_ProductInfos", ThisKey="Id", OtherKey="OrderId")]
		public EntitySet<ProductInfo> ProductInfos
		{
			get
			{
				return this._ProductInfos;
			}
			set
			{
				this._ProductInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comm_Order_Task", Storage="_Tasks", ThisKey="Id", OtherKey="OrderId")]
		public EntitySet<Task> Tasks
		{
			get
			{
				return this._Tasks;
			}
			set
			{
				this._Tasks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comm_Order", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Comm_Orders.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Comm_Orders.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Licencors(Licencor entity)
		{
			this.SendPropertyChanging();
			entity.Comm_Order = this;
		}
		
		private void detach_Licencors(Licencor entity)
		{
			this.SendPropertyChanging();
			entity.Comm_Order = null;
		}
		
		private void attach_OrderDiscounts(OrderDiscount entity)
		{
			this.SendPropertyChanging();
			entity.Comm_Order = this;
		}
		
		private void detach_OrderDiscounts(OrderDiscount entity)
		{
			this.SendPropertyChanging();
			entity.Comm_Order = null;
		}
		
		private void attach_ProductInfos(ProductInfo entity)
		{
			this.SendPropertyChanging();
			entity.Comm_Order = this;
		}
		
		private void detach_ProductInfos(ProductInfo entity)
		{
			this.SendPropertyChanging();
			entity.Comm_Order = null;
		}
		
		private void attach_Tasks(Task entity)
		{
			this.SendPropertyChanging();
			entity.Comm_Order = this;
		}
		
		private void detach_Tasks(Task entity)
		{
			this.SendPropertyChanging();
			entity.Comm_Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _EMail;
		
		private string _Password;
		
		private string _Data;
		
		private System.DateTime _Created;
		
		private System.Nullable<System.DateTime> _ActivationMailSent;
		
		private System.Nullable<long> _Roles;
		
		private string _Title;
		
		private short _Type;
		
		private string _Fulltext;
		
		private int _Version;
		
		private System.Nullable<short> _OtherType;
		
		private System.Nullable<bool> _Male;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Icq;
		
		private string _Skype;
		
		private System.DateTime _LastRequest;
		
		private System.Nullable<long> _IpAddress;
		
		private short _Site;
		
		private string _OtherId;
		
		private string _Login;
		
		private EntitySet<Comm_Order> _Comm_Orders;
		
		private EntitySet<CourseUser> _CourseUsers;
		
		private EntitySet<EventsLog> _EventsLogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnActivationMailSentChanging(System.Nullable<System.DateTime> value);
    partial void OnActivationMailSentChanged();
    partial void OnRolesChanging(System.Nullable<long> value);
    partial void OnRolesChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTypeChanging(short value);
    partial void OnTypeChanged();
    partial void OnFulltextChanging(string value);
    partial void OnFulltextChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnOtherTypeChanging(System.Nullable<short> value);
    partial void OnOtherTypeChanged();
    partial void OnMaleChanging(System.Nullable<bool> value);
    partial void OnMaleChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnIcqChanging(string value);
    partial void OnIcqChanged();
    partial void OnSkypeChanging(string value);
    partial void OnSkypeChanged();
    partial void OnLastRequestChanging(System.DateTime value);
    partial void OnLastRequestChanged();
    partial void OnIpAddressChanging(System.Nullable<long> value);
    partial void OnIpAddressChanged();
    partial void OnSiteChanging(short value);
    partial void OnSiteChanged();
    partial void OnOtherIdChanging(string value);
    partial void OnOtherIdChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    #endregion
		
		public User()
		{
			this._Comm_Orders = new EntitySet<Comm_Order>(new Action<Comm_Order>(this.attach_Comm_Orders), new Action<Comm_Order>(this.detach_Comm_Orders));
			this._CourseUsers = new EntitySet<CourseUser>(new Action<CourseUser>(this.attach_CourseUsers), new Action<CourseUser>(this.detach_CourseUsers));
			this._EventsLogs = new EntitySet<EventsLog>(new Action<EventsLog>(this.attach_EventsLogs), new Action<EventsLog>(this.detach_EventsLogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="VarChar(256)")]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(32)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationMailSent", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActivationMailSent
		{
			get
			{
				return this._ActivationMailSent;
			}
			set
			{
				if ((this._ActivationMailSent != value))
				{
					this.OnActivationMailSentChanging(value);
					this.SendPropertyChanging();
					this._ActivationMailSent = value;
					this.SendPropertyChanged("ActivationMailSent");
					this.OnActivationMailSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Roles", DbType="BigInt")]
		public System.Nullable<long> Roles
		{
			get
			{
				return this._Roles;
			}
			set
			{
				if ((this._Roles != value))
				{
					this.OnRolesChanging(value);
					this.SendPropertyChanging();
					this._Roles = value;
					this.SendPropertyChanged("Roles");
					this.OnRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(1024)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="SmallInt NOT NULL")]
		public short Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fulltext", DbType="NVarChar(MAX)")]
		public string Fulltext
		{
			get
			{
				return this._Fulltext;
			}
			set
			{
				if ((this._Fulltext != value))
				{
					this.OnFulltextChanging(value);
					this.SendPropertyChanging();
					this._Fulltext = value;
					this.SendPropertyChanged("Fulltext");
					this.OnFulltextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherType", DbType="SmallInt")]
		public System.Nullable<short> OtherType
		{
			get
			{
				return this._OtherType;
			}
			set
			{
				if ((this._OtherType != value))
				{
					this.OnOtherTypeChanging(value);
					this.SendPropertyChanging();
					this._OtherType = value;
					this.SendPropertyChanged("OtherType");
					this.OnOtherTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Male", DbType="Bit")]
		public System.Nullable<bool> Male
		{
			get
			{
				return this._Male;
			}
			set
			{
				if ((this._Male != value))
				{
					this.OnMaleChanging(value);
					this.SendPropertyChanging();
					this._Male = value;
					this.SendPropertyChanged("Male");
					this.OnMaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icq", DbType="VarChar(15)")]
		public string Icq
		{
			get
			{
				return this._Icq;
			}
			set
			{
				if ((this._Icq != value))
				{
					this.OnIcqChanging(value);
					this.SendPropertyChanging();
					this._Icq = value;
					this.SendPropertyChanged("Icq");
					this.OnIcqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skype", DbType="VarChar(50)")]
		public string Skype
		{
			get
			{
				return this._Skype;
			}
			set
			{
				if ((this._Skype != value))
				{
					this.OnSkypeChanging(value);
					this.SendPropertyChanging();
					this._Skype = value;
					this.SendPropertyChanged("Skype");
					this.OnSkypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRequest", DbType="DateTime NOT NULL")]
		public System.DateTime LastRequest
		{
			get
			{
				return this._LastRequest;
			}
			set
			{
				if ((this._LastRequest != value))
				{
					this.OnLastRequestChanging(value);
					this.SendPropertyChanging();
					this._LastRequest = value;
					this.SendPropertyChanged("LastRequest");
					this.OnLastRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IpAddress", DbType="BigInt")]
		public System.Nullable<long> IpAddress
		{
			get
			{
				return this._IpAddress;
			}
			set
			{
				if ((this._IpAddress != value))
				{
					this.OnIpAddressChanging(value);
					this.SendPropertyChanging();
					this._IpAddress = value;
					this.SendPropertyChanged("IpAddress");
					this.OnIpAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site", DbType="SmallInt NOT NULL")]
		public short Site
		{
			get
			{
				return this._Site;
			}
			set
			{
				if ((this._Site != value))
				{
					this.OnSiteChanging(value);
					this.SendPropertyChanging();
					this._Site = value;
					this.SendPropertyChanged("Site");
					this.OnSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherId", DbType="VarChar(120)")]
		public string OtherId
		{
			get
			{
				return this._OtherId;
			}
			set
			{
				if ((this._OtherId != value))
				{
					this.OnOtherIdChanging(value);
					this.SendPropertyChanging();
					this._OtherId = value;
					this.SendPropertyChanged("OtherId");
					this.OnOtherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="VarChar(256)")]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comm_Order", Storage="_Comm_Orders", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Comm_Order> Comm_Orders
		{
			get
			{
				return this._Comm_Orders;
			}
			set
			{
				this._Comm_Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CourseUser", Storage="_CourseUsers", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<CourseUser> CourseUsers
		{
			get
			{
				return this._CourseUsers;
			}
			set
			{
				this._CourseUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EventsLog", Storage="_EventsLogs", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<EventsLog> EventsLogs
		{
			get
			{
				return this._EventsLogs;
			}
			set
			{
				this._EventsLogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comm_Orders(Comm_Order entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Comm_Orders(Comm_Order entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CourseUsers(CourseUser entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CourseUsers(CourseUser entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_EventsLogs(EventsLog entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_EventsLogs(EventsLog entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CourseData")]
	public partial class CourseData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _CourseUserId;
		
		private string _Key;
		
		private string _Data;
		
		private string _ShortData;
		
		private EntityRef<CourseUser> _CourseUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCourseUserIdChanging(long value);
    partial void OnCourseUserIdChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnShortDataChanging(string value);
    partial void OnShortDataChanged();
    #endregion
		
		public CourseData()
		{
			this._CourseUser = default(EntityRef<CourseUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseUserId", DbType="BigInt NOT NULL")]
		public long CourseUserId
		{
			get
			{
				return this._CourseUserId;
			}
			set
			{
				if ((this._CourseUserId != value))
				{
					if (this._CourseUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseUserIdChanging(value);
					this.SendPropertyChanging();
					this._CourseUserId = value;
					this.SendPropertyChanged("CourseUserId");
					this.OnCourseUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortData", DbType="NVarChar(MAX)")]
		public string ShortData
		{
			get
			{
				return this._ShortData;
			}
			set
			{
				if ((this._ShortData != value))
				{
					this.OnShortDataChanging(value);
					this.SendPropertyChanging();
					this._ShortData = value;
					this.SendPropertyChanged("ShortData");
					this.OnShortDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseUser_CourseData", Storage="_CourseUser", ThisKey="CourseUserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CourseUser CourseUser
		{
			get
			{
				return this._CourseUser.Entity;
			}
			set
			{
				CourseUser previousValue = this._CourseUser.Entity;
				if (((previousValue != value) 
							|| (this._CourseUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseUser.Entity = null;
						previousValue.CourseDatas.Remove(this);
					}
					this._CourseUser.Entity = value;
					if ((value != null))
					{
						value.CourseDatas.Add(this);
						this._CourseUserId = value.Id;
					}
					else
					{
						this._CourseUserId = default(long);
					}
					this.SendPropertyChanged("CourseUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CourseUser")]
	public partial class CourseUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private short _CourseId;
		
		private System.DateTime _LastRequest;
		
		private int _SessionsNum;
		
		private System.DateTime _SessionsNumDate;
		
		private EntitySet<CourseData> _CourseDatas;
		
		private EntityRef<User> _User;
		
		private EntityRef<TempUserId> _TempUserId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnCourseIdChanging(short value);
    partial void OnCourseIdChanged();
    partial void OnLastRequestChanging(System.DateTime value);
    partial void OnLastRequestChanged();
    partial void OnSessionsNumChanging(int value);
    partial void OnSessionsNumChanged();
    partial void OnSessionsNumDateChanging(System.DateTime value);
    partial void OnSessionsNumDateChanged();
    #endregion
		
		public CourseUser()
		{
			this._CourseDatas = new EntitySet<CourseData>(new Action<CourseData>(this.attach_CourseDatas), new Action<CourseData>(this.detach_CourseDatas));
			this._User = default(EntityRef<User>);
			this._TempUserId = default(EntityRef<TempUserId>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if ((this._User.HasLoadedOrAssignedValue || this._TempUserId.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseId", DbType="SmallInt NOT NULL")]
		public short CourseId
		{
			get
			{
				return this._CourseId;
			}
			set
			{
				if ((this._CourseId != value))
				{
					this.OnCourseIdChanging(value);
					this.SendPropertyChanging();
					this._CourseId = value;
					this.SendPropertyChanged("CourseId");
					this.OnCourseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRequest", DbType="DateTime NOT NULL")]
		public System.DateTime LastRequest
		{
			get
			{
				return this._LastRequest;
			}
			set
			{
				if ((this._LastRequest != value))
				{
					this.OnLastRequestChanging(value);
					this.SendPropertyChanging();
					this._LastRequest = value;
					this.SendPropertyChanged("LastRequest");
					this.OnLastRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionsNum", DbType="Int NOT NULL")]
		public int SessionsNum
		{
			get
			{
				return this._SessionsNum;
			}
			set
			{
				if ((this._SessionsNum != value))
				{
					this.OnSessionsNumChanging(value);
					this.SendPropertyChanging();
					this._SessionsNum = value;
					this.SendPropertyChanged("SessionsNum");
					this.OnSessionsNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionsNumDate", DbType="DateTime NOT NULL")]
		public System.DateTime SessionsNumDate
		{
			get
			{
				return this._SessionsNumDate;
			}
			set
			{
				if ((this._SessionsNumDate != value))
				{
					this.OnSessionsNumDateChanging(value);
					this.SendPropertyChanging();
					this._SessionsNumDate = value;
					this.SendPropertyChanged("SessionsNumDate");
					this.OnSessionsNumDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseUser_CourseData", Storage="_CourseDatas", ThisKey="Id", OtherKey="CourseUserId")]
		public EntitySet<CourseData> CourseDatas
		{
			get
			{
				return this._CourseDatas;
			}
			set
			{
				this._CourseDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CourseUser", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CourseUsers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CourseUsers.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TempUserId_CourseUser", Storage="_TempUserId", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public TempUserId TempUserId
		{
			get
			{
				return this._TempUserId.Entity;
			}
			set
			{
				TempUserId previousValue = this._TempUserId.Entity;
				if (((previousValue != value) 
							|| (this._TempUserId.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TempUserId.Entity = null;
						previousValue.CourseUsers.Remove(this);
					}
					this._TempUserId.Entity = value;
					if ((value != null))
					{
						value.CourseUsers.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("TempUserId");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CourseDatas(CourseData entity)
		{
			this.SendPropertyChanging();
			entity.CourseUser = this;
		}
		
		private void detach_CourseDatas(CourseData entity)
		{
			this.SendPropertyChanging();
			entity.CourseUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Disc_Prototype")]
	public partial class Disc_Prototype : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Instance;
		
		private System.DateTime _Created;
		
		private string _Title;
		
		private bool _SingleInstance;
		
		private int _MaxCount;
		
		private short _Site;
		
		private short _Generator;
		
		private bool _isOrderDiscount;
		
		private EntitySet<Discount> _Discounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInstanceChanging(string value);
    partial void OnInstanceChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSingleInstanceChanging(bool value);
    partial void OnSingleInstanceChanged();
    partial void OnMaxCountChanging(int value);
    partial void OnMaxCountChanged();
    partial void OnSiteChanging(short value);
    partial void OnSiteChanged();
    partial void OnGeneratorChanging(short value);
    partial void OnGeneratorChanged();
    partial void OnisOrderDiscountChanging(bool value);
    partial void OnisOrderDiscountChanged();
    #endregion
		
		public Disc_Prototype()
		{
			this._Discounts = new EntitySet<Discount>(new Action<Discount>(this.attach_Discounts), new Action<Discount>(this.detach_Discounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instance", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Instance
		{
			get
			{
				return this._Instance;
			}
			set
			{
				if ((this._Instance != value))
				{
					this.OnInstanceChanging(value);
					this.SendPropertyChanging();
					this._Instance = value;
					this.SendPropertyChanged("Instance");
					this.OnInstanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SingleInstance", DbType="Bit NOT NULL")]
		public bool SingleInstance
		{
			get
			{
				return this._SingleInstance;
			}
			set
			{
				if ((this._SingleInstance != value))
				{
					this.OnSingleInstanceChanging(value);
					this.SendPropertyChanging();
					this._SingleInstance = value;
					this.SendPropertyChanged("SingleInstance");
					this.OnSingleInstanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxCount", DbType="Int NOT NULL")]
		public int MaxCount
		{
			get
			{
				return this._MaxCount;
			}
			set
			{
				if ((this._MaxCount != value))
				{
					this.OnMaxCountChanging(value);
					this.SendPropertyChanging();
					this._MaxCount = value;
					this.SendPropertyChanged("MaxCount");
					this.OnMaxCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site", DbType="SmallInt NOT NULL")]
		public short Site
		{
			get
			{
				return this._Site;
			}
			set
			{
				if ((this._Site != value))
				{
					this.OnSiteChanging(value);
					this.SendPropertyChanging();
					this._Site = value;
					this.SendPropertyChanged("Site");
					this.OnSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Generator", DbType="SmallInt NOT NULL")]
		public short Generator
		{
			get
			{
				return this._Generator;
			}
			set
			{
				if ((this._Generator != value))
				{
					this.OnGeneratorChanging(value);
					this.SendPropertyChanging();
					this._Generator = value;
					this.SendPropertyChanged("Generator");
					this.OnGeneratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isOrderDiscount", DbType="Bit NOT NULL")]
		public bool isOrderDiscount
		{
			get
			{
				return this._isOrderDiscount;
			}
			set
			{
				if ((this._isOrderDiscount != value))
				{
					this.OnisOrderDiscountChanging(value);
					this.SendPropertyChanging();
					this._isOrderDiscount = value;
					this.SendPropertyChanged("isOrderDiscount");
					this.OnisOrderDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Disc_Prototype_Discount", Storage="_Discounts", ThisKey="Id", OtherKey="PrototypeId")]
		public EntitySet<Discount> Discounts
		{
			get
			{
				return this._Discounts;
			}
			set
			{
				this._Discounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Discounts(Discount entity)
		{
			this.SendPropertyChanging();
			entity.Disc_Prototype = this;
		}
		
		private void detach_Discounts(Discount entity)
		{
			this.SendPropertyChanging();
			entity.Disc_Prototype = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Discount")]
	public partial class Discount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PrototypeId;
		
		private int _Counter;
		
		private System.DateTime _Created;
		
		private EntitySet<OrderDiscount> _OrderDiscounts;
		
		private EntityRef<Disc_Prototype> _Disc_Prototype;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPrototypeIdChanging(int value);
    partial void OnPrototypeIdChanged();
    partial void OnCounterChanging(int value);
    partial void OnCounterChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    #endregion
		
		public Discount()
		{
			this._OrderDiscounts = new EntitySet<OrderDiscount>(new Action<OrderDiscount>(this.attach_OrderDiscounts), new Action<OrderDiscount>(this.detach_OrderDiscounts));
			this._Disc_Prototype = default(EntityRef<Disc_Prototype>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrototypeId", DbType="Int NOT NULL")]
		public int PrototypeId
		{
			get
			{
				return this._PrototypeId;
			}
			set
			{
				if ((this._PrototypeId != value))
				{
					if (this._Disc_Prototype.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrototypeIdChanging(value);
					this.SendPropertyChanging();
					this._PrototypeId = value;
					this.SendPropertyChanged("PrototypeId");
					this.OnPrototypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Counter", DbType="Int NOT NULL")]
		public int Counter
		{
			get
			{
				return this._Counter;
			}
			set
			{
				if ((this._Counter != value))
				{
					this.OnCounterChanging(value);
					this.SendPropertyChanging();
					this._Counter = value;
					this.SendPropertyChanged("Counter");
					this.OnCounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_OrderDiscount", Storage="_OrderDiscounts", ThisKey="Id", OtherKey="IdDiscount")]
		public EntitySet<OrderDiscount> OrderDiscounts
		{
			get
			{
				return this._OrderDiscounts;
			}
			set
			{
				this._OrderDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Disc_Prototype_Discount", Storage="_Disc_Prototype", ThisKey="PrototypeId", OtherKey="Id", IsForeignKey=true)]
		public Disc_Prototype Disc_Prototype
		{
			get
			{
				return this._Disc_Prototype.Entity;
			}
			set
			{
				Disc_Prototype previousValue = this._Disc_Prototype.Entity;
				if (((previousValue != value) 
							|| (this._Disc_Prototype.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Disc_Prototype.Entity = null;
						previousValue.Discounts.Remove(this);
					}
					this._Disc_Prototype.Entity = value;
					if ((value != null))
					{
						value.Discounts.Add(this);
						this._PrototypeId = value.Id;
					}
					else
					{
						this._PrototypeId = default(int);
					}
					this.SendPropertyChanged("Disc_Prototype");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDiscounts(OrderDiscount entity)
		{
			this.SendPropertyChanging();
			entity.Discount = this;
		}
		
		private void detach_OrderDiscounts(OrderDiscount entity)
		{
			this.SendPropertyChanging();
			entity.Discount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventsLog")]
	public partial class EventsLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _TaskId;
		
		private System.Nullable<long> _UserId;
		
		private System.Nullable<int> _OrderId;
		
		private System.DateTime _UtcTime;
		
		private short _Type;
		
		private int _Code;
		
		private int _DetailCode;
		
		private string _Message;
		
		private string _MachineName;
		
		private System.Nullable<short> _Site;
		
		private System.Nullable<short> _App;
		
		private string _RequestUrl;
		
		private string _Details;
		
		private EntityRef<User> _User;
		
		private EntityRef<Task> _Task;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTaskIdChanging(System.Nullable<int> value);
    partial void OnTaskIdChanged();
    partial void OnUserIdChanging(System.Nullable<long> value);
    partial void OnUserIdChanged();
    partial void OnOrderIdChanging(System.Nullable<int> value);
    partial void OnOrderIdChanged();
    partial void OnUtcTimeChanging(System.DateTime value);
    partial void OnUtcTimeChanged();
    partial void OnTypeChanging(short value);
    partial void OnTypeChanged();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnDetailCodeChanging(int value);
    partial void OnDetailCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnSiteChanging(System.Nullable<short> value);
    partial void OnSiteChanged();
    partial void OnAppChanging(System.Nullable<short> value);
    partial void OnAppChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public EventsLog()
		{
			this._User = default(EntityRef<User>);
			this._Task = default(EntityRef<Task>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskId", DbType="Int")]
		public System.Nullable<int> TaskId
		{
			get
			{
				return this._TaskId;
			}
			set
			{
				if ((this._TaskId != value))
				{
					if (this._Task.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskIdChanging(value);
					this.SendPropertyChanging();
					this._TaskId = value;
					this.SendPropertyChanged("TaskId");
					this.OnTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt")]
		public System.Nullable<long> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int")]
		public System.Nullable<int> OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UtcTime", DbType="DateTime NOT NULL")]
		public System.DateTime UtcTime
		{
			get
			{
				return this._UtcTime;
			}
			set
			{
				if ((this._UtcTime != value))
				{
					this.OnUtcTimeChanging(value);
					this.SendPropertyChanging();
					this._UtcTime = value;
					this.SendPropertyChanged("UtcTime");
					this.OnUtcTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="SmallInt NOT NULL")]
		public short Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL")]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailCode", DbType="Int NOT NULL")]
		public int DetailCode
		{
			get
			{
				return this._DetailCode;
			}
			set
			{
				if ((this._DetailCode != value))
				{
					this.OnDetailCodeChanging(value);
					this.SendPropertyChanging();
					this._DetailCode = value;
					this.SendPropertyChanged("DetailCode");
					this.OnDetailCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site", DbType="SmallInt")]
		public System.Nullable<short> Site
		{
			get
			{
				return this._Site;
			}
			set
			{
				if ((this._Site != value))
				{
					this.OnSiteChanging(value);
					this.SendPropertyChanging();
					this._Site = value;
					this.SendPropertyChanged("Site");
					this.OnSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_App", DbType="SmallInt")]
		public System.Nullable<short> App
		{
			get
			{
				return this._App;
			}
			set
			{
				if ((this._App != value))
				{
					this.OnAppChanging(value);
					this.SendPropertyChanging();
					this._App = value;
					this.SendPropertyChanged("App");
					this.OnAppChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="NVarChar(1024)")]
		public string RequestUrl
		{
			get
			{
				return this._RequestUrl;
			}
			set
			{
				if ((this._RequestUrl != value))
				{
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NVarChar(MAX)")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EventsLog", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.EventsLogs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.EventsLogs.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Task_EventsLog", Storage="_Task", ThisKey="TaskId", OtherKey="Id", IsForeignKey=true)]
		public Task Task
		{
			get
			{
				return this._Task.Entity;
			}
			set
			{
				Task previousValue = this._Task.Entity;
				if (((previousValue != value) 
							|| (this._Task.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Task.Entity = null;
						previousValue.EventsLogs.Remove(this);
					}
					this._Task.Entity = value;
					if ((value != null))
					{
						value.EventsLogs.Add(this);
						this._TaskId = value.Id;
					}
					else
					{
						this._TaskId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Task");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Feedback")]
	public partial class Feedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private short _Site;
		
		private short _Lang;
		
		private string _IPAddress;
		
		private string _Msg;
		
		private string _EMail;
		
		private System.Nullable<System.DateTime> _Date;
		
		private bool _Readed;
		
		private string _Url;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSiteChanging(short value);
    partial void OnSiteChanged();
    partial void OnLangChanging(short value);
    partial void OnLangChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnMsgChanging(string value);
    partial void OnMsgChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnReadedChanging(bool value);
    partial void OnReadedChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public Feedback()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site", DbType="SmallInt NOT NULL")]
		public short Site
		{
			get
			{
				return this._Site;
			}
			set
			{
				if ((this._Site != value))
				{
					this.OnSiteChanging(value);
					this.SendPropertyChanging();
					this._Site = value;
					this.SendPropertyChanged("Site");
					this.OnSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lang", DbType="SmallInt NOT NULL")]
		public short Lang
		{
			get
			{
				return this._Lang;
			}
			set
			{
				if ((this._Lang != value))
				{
					this.OnLangChanging(value);
					this.SendPropertyChanging();
					this._Lang = value;
					this.SendPropertyChanged("Lang");
					this.OnLangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(MAX)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Msg", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Msg
		{
			get
			{
				return this._Msg;
			}
			set
			{
				if ((this._Msg != value))
				{
					this.OnMsgChanging(value);
					this.SendPropertyChanging();
					this._Msg = value;
					this.SendPropertyChanged("Msg");
					this.OnMsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(80)")]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Readed", DbType="Bit NOT NULL")]
		public bool Readed
		{
			get
			{
				return this._Readed;
			}
			set
			{
				if ((this._Readed != value))
				{
					this.OnReadedChanging(value);
					this.SendPropertyChanging();
					this._Readed = value;
					this.SendPropertyChanged("Readed");
					this.OnReadedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LicenceOffline")]
	public partial class LicenceOffline : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private short _Site;
		
		private int _Serie;
		
		private short _CourseId;
		
		private string _Data;
		
		private System.DateTime _Created;
		
		private short _UserCount;
		
		private System.Nullable<short> _MaxCount;
		
		private short _HistoryLen;
		
		private EntitySet<LicOfflineLog> _LicOfflineLogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSiteChanging(short value);
    partial void OnSiteChanged();
    partial void OnSerieChanging(int value);
    partial void OnSerieChanged();
    partial void OnCourseIdChanging(short value);
    partial void OnCourseIdChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnUserCountChanging(short value);
    partial void OnUserCountChanged();
    partial void OnMaxCountChanging(System.Nullable<short> value);
    partial void OnMaxCountChanged();
    partial void OnHistoryLenChanging(short value);
    partial void OnHistoryLenChanged();
    #endregion
		
		public LicenceOffline()
		{
			this._LicOfflineLogs = new EntitySet<LicOfflineLog>(new Action<LicOfflineLog>(this.attach_LicOfflineLogs), new Action<LicOfflineLog>(this.detach_LicOfflineLogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site", DbType="SmallInt NOT NULL")]
		public short Site
		{
			get
			{
				return this._Site;
			}
			set
			{
				if ((this._Site != value))
				{
					this.OnSiteChanging(value);
					this.SendPropertyChanging();
					this._Site = value;
					this.SendPropertyChanged("Site");
					this.OnSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serie", DbType="Int NOT NULL")]
		public int Serie
		{
			get
			{
				return this._Serie;
			}
			set
			{
				if ((this._Serie != value))
				{
					this.OnSerieChanging(value);
					this.SendPropertyChanging();
					this._Serie = value;
					this.SendPropertyChanged("Serie");
					this.OnSerieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseId", DbType="SmallInt NOT NULL")]
		public short CourseId
		{
			get
			{
				return this._CourseId;
			}
			set
			{
				if ((this._CourseId != value))
				{
					this.OnCourseIdChanging(value);
					this.SendPropertyChanging();
					this._CourseId = value;
					this.SendPropertyChanged("CourseId");
					this.OnCourseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCount", DbType="SmallInt NOT NULL")]
		public short UserCount
		{
			get
			{
				return this._UserCount;
			}
			set
			{
				if ((this._UserCount != value))
				{
					this.OnUserCountChanging(value);
					this.SendPropertyChanging();
					this._UserCount = value;
					this.SendPropertyChanged("UserCount");
					this.OnUserCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxCount", DbType="SmallInt")]
		public System.Nullable<short> MaxCount
		{
			get
			{
				return this._MaxCount;
			}
			set
			{
				if ((this._MaxCount != value))
				{
					this.OnMaxCountChanging(value);
					this.SendPropertyChanging();
					this._MaxCount = value;
					this.SendPropertyChanged("MaxCount");
					this.OnMaxCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryLen", DbType="SmallInt NOT NULL")]
		public short HistoryLen
		{
			get
			{
				return this._HistoryLen;
			}
			set
			{
				if ((this._HistoryLen != value))
				{
					this.OnHistoryLenChanging(value);
					this.SendPropertyChanging();
					this._HistoryLen = value;
					this.SendPropertyChanged("HistoryLen");
					this.OnHistoryLenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LicenceOffline_LicOfflineLog", Storage="_LicOfflineLogs", ThisKey="Id", OtherKey="LicenceOfflineId")]
		public EntitySet<LicOfflineLog> LicOfflineLogs
		{
			get
			{
				return this._LicOfflineLogs;
			}
			set
			{
				this._LicOfflineLogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LicOfflineLogs(LicOfflineLog entity)
		{
			this.SendPropertyChanging();
			entity.LicenceOffline = this;
		}
		
		private void detach_LicOfflineLogs(LicOfflineLog entity)
		{
			this.SendPropertyChanging();
			entity.LicenceOffline = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Licencors")]
	public partial class Licencor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _OrderId;
		
		private short _LicencorId;
		
		private int _Quantity;
		
		private double _Kc;
		
		private double _FeeKc;
		
		private int _ProductId;
		
		private short _Licence;
		
		private EntityRef<Comm_Order> _Comm_Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnLicencorIdChanging(short value);
    partial void OnLicencorIdChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnKcChanging(double value);
    partial void OnKcChanged();
    partial void OnFeeKcChanging(double value);
    partial void OnFeeKcChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnLicenceChanging(short value);
    partial void OnLicenceChanged();
    #endregion
		
		public Licencor()
		{
			this._Comm_Order = default(EntityRef<Comm_Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Comm_Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicencorId", DbType="SmallInt NOT NULL")]
		public short LicencorId
		{
			get
			{
				return this._LicencorId;
			}
			set
			{
				if ((this._LicencorId != value))
				{
					this.OnLicencorIdChanging(value);
					this.SendPropertyChanging();
					this._LicencorId = value;
					this.SendPropertyChanged("LicencorId");
					this.OnLicencorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kc", DbType="Float NOT NULL")]
		public double Kc
		{
			get
			{
				return this._Kc;
			}
			set
			{
				if ((this._Kc != value))
				{
					this.OnKcChanging(value);
					this.SendPropertyChanging();
					this._Kc = value;
					this.SendPropertyChanged("Kc");
					this.OnKcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeKc", DbType="Float NOT NULL")]
		public double FeeKc
		{
			get
			{
				return this._FeeKc;
			}
			set
			{
				if ((this._FeeKc != value))
				{
					this.OnFeeKcChanging(value);
					this.SendPropertyChanging();
					this._FeeKc = value;
					this.SendPropertyChanged("FeeKc");
					this.OnFeeKcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Licence", DbType="SmallInt NOT NULL")]
		public short Licence
		{
			get
			{
				return this._Licence;
			}
			set
			{
				if ((this._Licence != value))
				{
					this.OnLicenceChanging(value);
					this.SendPropertyChanging();
					this._Licence = value;
					this.SendPropertyChanged("Licence");
					this.OnLicenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comm_Order_Licencor", Storage="_Comm_Order", ThisKey="OrderId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Comm_Order Comm_Order
		{
			get
			{
				return this._Comm_Order.Entity;
			}
			set
			{
				Comm_Order previousValue = this._Comm_Order.Entity;
				if (((previousValue != value) 
							|| (this._Comm_Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comm_Order.Entity = null;
						previousValue.Licencors.Remove(this);
					}
					this._Comm_Order.Entity = value;
					if ((value != null))
					{
						value.Licencors.Add(this);
						this._OrderId = value.Id;
					}
					else
					{
						this._OrderId = default(int);
					}
					this.SendPropertyChanged("Comm_Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LicOfflineLog")]
	public partial class LicOfflineLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private long _LicenceOfflineId;
		
		private short _Type;
		
		private short _Result;
		
		private string _HwKey;
		
		private string _Data;
		
		private System.DateTime _UtcTime;
		
		private string _MachineName;
		
		private EntityRef<LicenceOffline> _LicenceOffline;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLicenceOfflineIdChanging(long value);
    partial void OnLicenceOfflineIdChanged();
    partial void OnTypeChanging(short value);
    partial void OnTypeChanged();
    partial void OnResultChanging(short value);
    partial void OnResultChanged();
    partial void OnHwKeyChanging(string value);
    partial void OnHwKeyChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnUtcTimeChanging(System.DateTime value);
    partial void OnUtcTimeChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    #endregion
		
		public LicOfflineLog()
		{
			this._LicenceOffline = default(EntityRef<LicenceOffline>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenceOfflineId", DbType="BigInt NOT NULL")]
		public long LicenceOfflineId
		{
			get
			{
				return this._LicenceOfflineId;
			}
			set
			{
				if ((this._LicenceOfflineId != value))
				{
					if (this._LicenceOffline.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLicenceOfflineIdChanging(value);
					this.SendPropertyChanging();
					this._LicenceOfflineId = value;
					this.SendPropertyChanged("LicenceOfflineId");
					this.OnLicenceOfflineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="SmallInt NOT NULL")]
		public short Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="SmallInt NOT NULL")]
		public short Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HwKey", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string HwKey
		{
			get
			{
				return this._HwKey;
			}
			set
			{
				if ((this._HwKey != value))
				{
					this.OnHwKeyChanging(value);
					this.SendPropertyChanging();
					this._HwKey = value;
					this.SendPropertyChanged("HwKey");
					this.OnHwKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UtcTime", DbType="DateTime NOT NULL")]
		public System.DateTime UtcTime
		{
			get
			{
				return this._UtcTime;
			}
			set
			{
				if ((this._UtcTime != value))
				{
					this.OnUtcTimeChanging(value);
					this.SendPropertyChanging();
					this._UtcTime = value;
					this.SendPropertyChanged("UtcTime");
					this.OnUtcTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LicenceOffline_LicOfflineLog", Storage="_LicenceOffline", ThisKey="LicenceOfflineId", OtherKey="Id", IsForeignKey=true)]
		public LicenceOffline LicenceOffline
		{
			get
			{
				return this._LicenceOffline.Entity;
			}
			set
			{
				LicenceOffline previousValue = this._LicenceOffline.Entity;
				if (((previousValue != value) 
							|| (this._LicenceOffline.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LicenceOffline.Entity = null;
						previousValue.LicOfflineLogs.Remove(this);
					}
					this._LicenceOffline.Entity = value;
					if ((value != null))
					{
						value.LicOfflineLogs.Add(this);
						this._LicenceOfflineId = value.Id;
					}
					else
					{
						this._LicenceOfflineId = default(long);
					}
					this.SendPropertyChanged("LicenceOffline");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MBank")]
	public partial class MBank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Created;
		
		private System.DateTime _Start;
		
		private System.DateTime _End;
		
		private string _Raw;
		
		private string _Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnStartChanging(System.DateTime value);
    partial void OnStartChanged();
    partial void OnEndChanging(System.DateTime value);
    partial void OnEndChanged();
    partial void OnRawChanging(string value);
    partial void OnRawChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    #endregion
		
		public MBank()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Start", DbType="DateTime NOT NULL")]
		public System.DateTime Start
		{
			get
			{
				return this._Start;
			}
			set
			{
				if ((this._Start != value))
				{
					this.OnStartChanging(value);
					this.SendPropertyChanging();
					this._Start = value;
					this.SendPropertyChanged("Start");
					this.OnStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[End]", Storage="_End", DbType="DateTime NOT NULL")]
		public System.DateTime End
		{
			get
			{
				return this._End;
			}
			set
			{
				if ((this._End != value))
				{
					this.OnEndChanging(value);
					this.SendPropertyChanging();
					this._End = value;
					this.SendPropertyChanged("End");
					this.OnEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Raw", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Raw
		{
			get
			{
				return this._Raw;
			}
			set
			{
				if ((this._Raw != value))
				{
					this.OnRawChanging(value);
					this.SendPropertyChanging();
					this._Raw = value;
					this.SendPropertyChanged("Raw");
					this.OnRawChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MoodleEnroll")]
	public partial class MoodleEnroll
	{
		
		private int _ID;
		
		private long _USERID;
		
		private long _MOODLEUSERID;
		
		private long _COURSEID;
		
		private short _LANG;
		
		private short _COURSELINE;
		
		private System.DateTime _CREATED;
		
		private System.DateTime _ENDTRIAL;
		
		public MoodleEnroll()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="BigInt NOT NULL")]
		public long USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this._USERID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOODLEUSERID", DbType="BigInt NOT NULL")]
		public long MOODLEUSERID
		{
			get
			{
				return this._MOODLEUSERID;
			}
			set
			{
				if ((this._MOODLEUSERID != value))
				{
					this._MOODLEUSERID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COURSEID", DbType="BigInt NOT NULL")]
		public long COURSEID
		{
			get
			{
				return this._COURSEID;
			}
			set
			{
				if ((this._COURSEID != value))
				{
					this._COURSEID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LANG", DbType="SmallInt NOT NULL")]
		public short LANG
		{
			get
			{
				return this._LANG;
			}
			set
			{
				if ((this._LANG != value))
				{
					this._LANG = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COURSELINE", DbType="SmallInt NOT NULL")]
		public short COURSELINE
		{
			get
			{
				return this._COURSELINE;
			}
			set
			{
				if ((this._COURSELINE != value))
				{
					this._COURSELINE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED", DbType="DateTime NOT NULL")]
		public System.DateTime CREATED
		{
			get
			{
				return this._CREATED;
			}
			set
			{
				if ((this._CREATED != value))
				{
					this._CREATED = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENDTRIAL", DbType="DateTime NOT NULL")]
		public System.DateTime ENDTRIAL
		{
			get
			{
				return this._ENDTRIAL;
			}
			set
			{
				if ((this._ENDTRIAL != value))
				{
					this._ENDTRIAL = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDiscount")]
	public partial class OrderDiscount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdOrder;
		
		private int _IdDiscount;
		
		private EntityRef<Comm_Order> _Comm_Order;
		
		private EntityRef<Discount> _Discount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdOrderChanging(int value);
    partial void OnIdOrderChanged();
    partial void OnIdDiscountChanging(int value);
    partial void OnIdDiscountChanged();
    #endregion
		
		public OrderDiscount()
		{
			this._Comm_Order = default(EntityRef<Comm_Order>);
			this._Discount = default(EntityRef<Discount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdOrder", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdOrder
		{
			get
			{
				return this._IdOrder;
			}
			set
			{
				if ((this._IdOrder != value))
				{
					if (this._Comm_Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdOrderChanging(value);
					this.SendPropertyChanging();
					this._IdOrder = value;
					this.SendPropertyChanged("IdOrder");
					this.OnIdOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDiscount", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdDiscount
		{
			get
			{
				return this._IdDiscount;
			}
			set
			{
				if ((this._IdDiscount != value))
				{
					if (this._Discount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDiscountChanging(value);
					this.SendPropertyChanging();
					this._IdDiscount = value;
					this.SendPropertyChanged("IdDiscount");
					this.OnIdDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comm_Order_OrderDiscount", Storage="_Comm_Order", ThisKey="IdOrder", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Comm_Order Comm_Order
		{
			get
			{
				return this._Comm_Order.Entity;
			}
			set
			{
				Comm_Order previousValue = this._Comm_Order.Entity;
				if (((previousValue != value) 
							|| (this._Comm_Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comm_Order.Entity = null;
						previousValue.OrderDiscounts.Remove(this);
					}
					this._Comm_Order.Entity = value;
					if ((value != null))
					{
						value.OrderDiscounts.Add(this);
						this._IdOrder = value.Id;
					}
					else
					{
						this._IdOrder = default(int);
					}
					this.SendPropertyChanged("Comm_Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_OrderDiscount", Storage="_Discount", ThisKey="IdDiscount", OtherKey="Id", IsForeignKey=true)]
		public Discount Discount
		{
			get
			{
				return this._Discount.Entity;
			}
			set
			{
				Discount previousValue = this._Discount.Entity;
				if (((previousValue != value) 
							|| (this._Discount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discount.Entity = null;
						previousValue.OrderDiscounts.Remove(this);
					}
					this._Discount.Entity = value;
					if ((value != null))
					{
						value.OrderDiscounts.Add(this);
						this._IdDiscount = value.Id;
					}
					else
					{
						this._IdDiscount = default(int);
					}
					this.SendPropertyChanged("Discount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductInfo")]
	public partial class ProductInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _OrderId;
		
		private int _ProductId;
		
		private short _Quantity;
		
		private double _Profit;
		
		private double _ListPrice;
		
		private double _Discount;
		
		private double _Provision;
		
		private double _Licence;
		
		private double _Cost;
		
		private EntityRef<Comm_Order> _Comm_Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnQuantityChanging(short value);
    partial void OnQuantityChanged();
    partial void OnProfitChanging(double value);
    partial void OnProfitChanged();
    partial void OnListPriceChanging(double value);
    partial void OnListPriceChanged();
    partial void OnDiscountChanging(double value);
    partial void OnDiscountChanged();
    partial void OnProvisionChanging(double value);
    partial void OnProvisionChanged();
    partial void OnLicenceChanging(double value);
    partial void OnLicenceChanged();
    partial void OnCostChanging(double value);
    partial void OnCostChanged();
    #endregion
		
		public ProductInfo()
		{
			this._Comm_Order = default(EntityRef<Comm_Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Comm_Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="SmallInt NOT NULL")]
		public short Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profit", DbType="Float NOT NULL")]
		public double Profit
		{
			get
			{
				return this._Profit;
			}
			set
			{
				if ((this._Profit != value))
				{
					this.OnProfitChanging(value);
					this.SendPropertyChanging();
					this._Profit = value;
					this.SendPropertyChanged("Profit");
					this.OnProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListPrice", DbType="Float NOT NULL")]
		public double ListPrice
		{
			get
			{
				return this._ListPrice;
			}
			set
			{
				if ((this._ListPrice != value))
				{
					this.OnListPriceChanging(value);
					this.SendPropertyChanging();
					this._ListPrice = value;
					this.SendPropertyChanged("ListPrice");
					this.OnListPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Float NOT NULL")]
		public double Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provision", DbType="Float NOT NULL")]
		public double Provision
		{
			get
			{
				return this._Provision;
			}
			set
			{
				if ((this._Provision != value))
				{
					this.OnProvisionChanging(value);
					this.SendPropertyChanging();
					this._Provision = value;
					this.SendPropertyChanged("Provision");
					this.OnProvisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Licence", DbType="Float NOT NULL")]
		public double Licence
		{
			get
			{
				return this._Licence;
			}
			set
			{
				if ((this._Licence != value))
				{
					this.OnLicenceChanging(value);
					this.SendPropertyChanging();
					this._Licence = value;
					this.SendPropertyChanged("Licence");
					this.OnLicenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Float NOT NULL")]
		public double Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comm_Order_ProductInfo", Storage="_Comm_Order", ThisKey="OrderId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Comm_Order Comm_Order
		{
			get
			{
				return this._Comm_Order.Entity;
			}
			set
			{
				Comm_Order previousValue = this._Comm_Order.Entity;
				if (((previousValue != value) 
							|| (this._Comm_Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comm_Order.Entity = null;
						previousValue.ProductInfos.Remove(this);
					}
					this._Comm_Order.Entity = value;
					if ((value != null))
					{
						value.ProductInfos.Add(this);
						this._OrderId = value.Id;
					}
					else
					{
						this._OrderId = default(int);
					}
					this.SendPropertyChanged("Comm_Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tasks")]
	public partial class Task : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _OrderId;
		
		private System.DateTime _Created;
		
		private string _Title;
		
		private short _Type;
		
		private bool _Closed;
		
		private EntitySet<EventsLog> _EventsLogs;
		
		private EntityRef<Comm_Order> _Comm_Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTypeChanging(short value);
    partial void OnTypeChanged();
    partial void OnClosedChanging(bool value);
    partial void OnClosedChanged();
    #endregion
		
		public Task()
		{
			this._EventsLogs = new EntitySet<EventsLog>(new Action<EventsLog>(this.attach_EventsLogs), new Action<EventsLog>(this.detach_EventsLogs));
			this._Comm_Order = default(EntityRef<Comm_Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Comm_Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="SmallInt NOT NULL")]
		public short Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Closed", DbType="Bit NOT NULL")]
		public bool Closed
		{
			get
			{
				return this._Closed;
			}
			set
			{
				if ((this._Closed != value))
				{
					this.OnClosedChanging(value);
					this.SendPropertyChanging();
					this._Closed = value;
					this.SendPropertyChanged("Closed");
					this.OnClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Task_EventsLog", Storage="_EventsLogs", ThisKey="Id", OtherKey="TaskId")]
		public EntitySet<EventsLog> EventsLogs
		{
			get
			{
				return this._EventsLogs;
			}
			set
			{
				this._EventsLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comm_Order_Task", Storage="_Comm_Order", ThisKey="OrderId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Comm_Order Comm_Order
		{
			get
			{
				return this._Comm_Order.Entity;
			}
			set
			{
				Comm_Order previousValue = this._Comm_Order.Entity;
				if (((previousValue != value) 
							|| (this._Comm_Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comm_Order.Entity = null;
						previousValue.Tasks.Remove(this);
					}
					this._Comm_Order.Entity = value;
					if ((value != null))
					{
						value.Tasks.Add(this);
						this._OrderId = value.Id;
					}
					else
					{
						this._OrderId = default(int);
					}
					this.SendPropertyChanged("Comm_Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EventsLogs(EventsLog entity)
		{
			this.SendPropertyChanging();
			entity.Task = this;
		}
		
		private void detach_EventsLogs(EventsLog entity)
		{
			this.SendPropertyChanging();
			entity.Task = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TempUserId")]
	public partial class TempUserId : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UserId;
		
		private EntitySet<CourseUser> _CourseUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    #endregion
		
		public TempUserId()
		{
			this._CourseUsers = new EntitySet<CourseUser>(new Action<CourseUser>(this.attach_CourseUsers), new Action<CourseUser>(this.detach_CourseUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TempUserId_CourseUser", Storage="_CourseUsers", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<CourseUser> CourseUsers
		{
			get
			{
				return this._CourseUsers;
			}
			set
			{
				this._CourseUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CourseUsers(CourseUser entity)
		{
			this.SendPropertyChanging();
			entity.TempUserId = this;
		}
		
		private void detach_CourseUsers(CourseUser entity)
		{
			this.SendPropertyChanging();
			entity.TempUserId = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UniqueId")]
	public partial class UniqueId : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private long _Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDataChanging(long value);
    partial void OnDataChanged();
    #endregion
		
		public UniqueId()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="BigInt NOT NULL")]
		public long Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
